import{_ as a,W as t,X as p,Y as e,$ as o,a1 as c,a0 as n,D as l,Z as i}from"./framework-f64bc974.js";const u={},k=n('<h1 id="定时任务quartz-动态管理任务-实现思路" tabindex="-1"><a class="header-anchor" href="#定时任务quartz-动态管理任务-实现思路" aria-hidden="true">#</a> 定时任务quartz-动态管理任务&amp;实现思路</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><h3 id="_1-1-回顾quartz-执行步骤" tabindex="-1"><a class="header-anchor" href="#_1-1-回顾quartz-执行步骤" aria-hidden="true">#</a> 1.1 回顾quartz 执行步骤</h3>',3),d=n(`<p>回顾我们定时器任务发起步骤</p><ol><li>实现Job接口</li><li>创建Schedule <ol><li>创建JobDetail实例，绑定job</li><li>构建Trigger定时任务</li><li>调度器Scheduler 绑定 JobDetail 和 Trigger</li></ol></li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">// 1、创建调度器Scheduler</span>
        <span class="token class-name">SchedulerFactory</span> schedulerFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StdSchedulerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scheduler</span> scheduler <span class="token operator">=</span> schedulerFactory<span class="token punctuation">.</span><span class="token function">getScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 2、创建JobDetail实例，并与PrintWordsJob类绑定(Job执行内容)</span>
        <span class="token class-name">JobDetail</span> jobDetail <span class="token operator">=</span> <span class="token class-name">JobBuilder</span><span class="token punctuation">.</span><span class="token function">newJob</span><span class="token punctuation">(</span><span class="token class-name">MyJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;job1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;group1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3、构建Trigger实例,每隔1s执行一次</span>
        <span class="token class-name">Trigger</span> trigger <span class="token operator">=</span> <span class="token class-name">TriggerBuilder</span><span class="token punctuation">.</span><span class="token function">newTrigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token string">&quot;trigger1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;triggerGroup1&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">startNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//立即生效</span>
                <span class="token punctuation">.</span><span class="token function">withSchedule</span><span class="token punctuation">(</span><span class="token class-name">SimpleScheduleBuilder</span><span class="token punctuation">.</span><span class="token function">simpleSchedule</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">withIntervalInSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//每隔1s执行一次</span>
                        <span class="token punctuation">.</span><span class="token function">repeatForever</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//一直执行</span>

        <span class="token comment">//4、执行</span>
        scheduler<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>jobDetail<span class="token punctuation">,</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span>
        scheduler<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-面临的问题" tabindex="-1"><a class="header-anchor" href="#_1-2-面临的问题" aria-hidden="true">#</a> 1.2 面临的问题</h3><p>一切看似挺好的，但是所有的定时任务都是写死在代码中。</p><ol><li>我们无法动态更改定时任务的执行时间</li><li>无法查看定时任务的执行情况</li><li>无法动态新增定时任务</li></ol><h2 id="_2-动态管理设计思路" tabindex="-1"><a class="header-anchor" href="#_2-动态管理设计思路" aria-hidden="true">#</a> 2. 动态管理设计思路</h2><ol><li><p>新建一张<code>sys_job</code>表，专门记录定时任务信息。</p><ol><li>在新增和修改表记录时，设置定时任务</li><li>在删除表记录时，移除定时任务</li></ol></li><li><p>定时任务调度表 sys_job 表,需要记录</p><ol><li>任务的基本信息</li><li>定时任务具体的执行方法 <ol><li>我们通过反射来实现，所以只需要记录字符串。</li></ol></li><li>cron执行的表达式</li></ol></li><li><p>为了避免项目迁移或者手动修改数据库造成的问题。项目已启动就初始化所有定时任务</p></li><li><p>新建一张<code>sys_job_log</code>表，用来记录日志的执行情况</p></li></ol><h2 id="_3-表结构设计" tabindex="-1"><a class="header-anchor" href="#_3-表结构设计" aria-hidden="true">#</a> 3. 表结构设计</h2><h3 id="_3-1-定时任务调度表-sys-job-表设计" tabindex="-1"><a class="header-anchor" href="#_3-1-定时任务调度表-sys-job-表设计" aria-hidden="true">#</a> 3.1 定时任务调度表 sys_job 表设计</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> sys_job <span class="token punctuation">(</span>
  job_id              <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span>    <span class="token keyword">comment</span> <span class="token string">&#39;任务ID&#39;</span><span class="token punctuation">,</span>
  job_name            <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>   <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;任务名称&#39;</span><span class="token punctuation">,</span>
  job_group           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>   <span class="token keyword">default</span> <span class="token string">&#39;DEFAULT&#39;</span>          <span class="token keyword">comment</span> <span class="token string">&#39;任务组名&#39;</span><span class="token punctuation">,</span>
  invoke_target       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>  <span class="token operator">not</span> <span class="token boolean">null</span>                   <span class="token keyword">comment</span> <span class="token string">&#39;调用目标字符串&#39;</span><span class="token punctuation">,</span>
  cron_expression     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>  <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;cron执行表达式&#39;</span><span class="token punctuation">,</span>
  misfire_policy      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>   <span class="token keyword">default</span> <span class="token string">&#39;3&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;计划执行错误策略（1立即执行 2执行一次 3放弃执行）&#39;</span><span class="token punctuation">,</span>
  concurrent          <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>       <span class="token keyword">default</span> <span class="token string">&#39;1&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;是否并发执行（0允许 1禁止）&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">status</span>              <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>       <span class="token keyword">default</span> <span class="token string">&#39;0&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;状态（0正常 1暂停）&#39;</span><span class="token punctuation">,</span>
  create_by           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>   <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;创建者&#39;</span><span class="token punctuation">,</span>
  create_time         <span class="token keyword">datetime</span>                                 <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
  update_by           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>   <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;更新者&#39;</span><span class="token punctuation">,</span>
  update_time         <span class="token keyword">datetime</span>                                 <span class="token keyword">comment</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
  remark              <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>  <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;备注信息&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>job_id<span class="token punctuation">,</span> job_name<span class="token punctuation">,</span> job_group<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span><span class="token operator">=</span><span class="token number">100</span> <span class="token keyword">comment</span> <span class="token operator">=</span> <span class="token string">&#39;定时任务调度表&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-定时任务调度日志表-sys-job-log-表设计" tabindex="-1"><a class="header-anchor" href="#_3-2-定时任务调度日志表-sys-job-log-表设计" aria-hidden="true">#</a> 3.2 定时任务调度日志表 sys_job_log 表设计</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> sys_job_log <span class="token punctuation">(</span>
  job_log_id          <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>     <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span>    <span class="token keyword">comment</span> <span class="token string">&#39;任务日志ID&#39;</span><span class="token punctuation">,</span>
  job_name            <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span>                   <span class="token keyword">comment</span> <span class="token string">&#39;任务名称&#39;</span><span class="token punctuation">,</span>
  job_group           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>    <span class="token operator">not</span> <span class="token boolean">null</span>                   <span class="token keyword">comment</span> <span class="token string">&#39;任务组名&#39;</span><span class="token punctuation">,</span>
  invoke_target       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>   <span class="token operator">not</span> <span class="token boolean">null</span>                   <span class="token keyword">comment</span> <span class="token string">&#39;调用目标字符串&#39;</span><span class="token punctuation">,</span>
  job_message         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>                              <span class="token keyword">comment</span> <span class="token string">&#39;日志信息&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">status</span>              <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">default</span> <span class="token string">&#39;0&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;执行状态（0正常 1失败）&#39;</span><span class="token punctuation">,</span>
  exception_info      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>  <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;异常信息&#39;</span><span class="token punctuation">,</span>
  create_time         <span class="token keyword">datetime</span>                                  <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>job_log_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">comment</span> <span class="token operator">=</span> <span class="token string">&#39;定时任务调度日志表&#39;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-代码实现" tabindex="-1"><a class="header-anchor" href="#_4-代码实现" aria-hidden="true">#</a> 4. 代码实现</h2><h3 id="_4-1-新增定时任务" tabindex="-1"><a class="header-anchor" href="#_4-1-新增定时任务" aria-hidden="true">#</a> 4.1 新增定时任务</h3><h4 id="_4-1-1-service层方法" tabindex="-1"><a class="header-anchor" href="#_4-1-1-service层方法" aria-hidden="true">#</a> 4.1.1 service层方法</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> /**
     * 新增任务
     * 
     * @param job 调度信息 调度信息
     */
    @Override
    @Transactional
    public int insertJob(SysJob job) throws SchedulerException, TaskException
    {
        job.setStatus(ScheduleConstants.Status.PAUSE.getValue());
        int rows = jobMapper.insertJob(job);
        if (rows &gt; 0)
        {
            ScheduleUtils.createScheduleJob(scheduler, job);
        }
        return rows;
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>定时任务初始时设置为暂停状态</li><li>插入数据库</li><li>调用ScheduleUtils 工具类，创建定时任务</li></ol><h4 id="_4-1-2-scheduleutils-工具类-创建定时任务" tabindex="-1"><a class="header-anchor" href="#_4-1-2-scheduleutils-工具类-创建定时任务" aria-hidden="true">#</a> 4.1.2 ScheduleUtils 工具类，创建定时任务</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * 创建定时任务
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createScheduleJob</span><span class="token punctuation">(</span><span class="token class-name">Scheduler</span> scheduler<span class="token punctuation">,</span> <span class="token class-name">SysJob</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span><span class="token punctuation">,</span> <span class="token class-name">TaskException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Job</span><span class="token punctuation">&gt;</span></span> jobClass <span class="token operator">=</span> <span class="token function">getQuartzJobClass</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 构建job信息</span>
        <span class="token class-name">Long</span> jobId <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> jobGroup <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JobDetail</span> jobDetail <span class="token operator">=</span> <span class="token class-name">JobBuilder</span><span class="token punctuation">.</span><span class="token function">newJob</span><span class="token punctuation">(</span>jobClass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 表达式调度构建器</span>
        <span class="token class-name">CronScheduleBuilder</span> cronScheduleBuilder <span class="token operator">=</span> <span class="token class-name">CronScheduleBuilder</span><span class="token punctuation">.</span><span class="token function">cronSchedule</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getCronExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cronScheduleBuilder <span class="token operator">=</span> <span class="token function">handleCronScheduleMisfirePolicy</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> cronScheduleBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 按新的cronExpression表达式构建一个新的trigger</span>
        <span class="token class-name">CronTrigger</span> trigger <span class="token operator">=</span> <span class="token class-name">TriggerBuilder</span><span class="token punctuation">.</span><span class="token function">newTrigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token function">getTriggerKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">withSchedule</span><span class="token punctuation">(</span>cronScheduleBuilder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 放入参数，运行时的方法可以获取</span>
        jobDetail<span class="token punctuation">.</span><span class="token function">getJobDataMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">ScheduleConstants</span><span class="token punctuation">.</span><span class="token constant">TASK_PROPERTIES</span><span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 判断是否存在</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduler<span class="token punctuation">.</span><span class="token function">checkExists</span><span class="token punctuation">(</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 防止创建时存在数据问题 先移除，然后在执行创建操作</span>
            scheduler<span class="token punctuation">.</span><span class="token function">deleteJob</span><span class="token punctuation">(</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        scheduler<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>jobDetail<span class="token punctuation">,</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 暂停任务</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ScheduleConstants<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">PAUSE</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            scheduler<span class="token punctuation">.</span><span class="token function">pauseJob</span><span class="token punctuation">(</span><span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
     * 得到quartz任务类
     *
     * <span class="token keyword">@param</span> <span class="token parameter">sysJob</span> 执行计划
     * <span class="token keyword">@return</span> 具体执行任务类
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Job</span><span class="token punctuation">&gt;</span></span> <span class="token function">getQuartzJobClass</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> sysJob<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> isConcurrent <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">.</span><span class="token function">getConcurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> isConcurrent <span class="token operator">?</span> <span class="token class-name">QuartzJobExecution</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">:</span> <span class="token class-name">QuartzDisallowConcurrentExecution</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>根据是否需要并发，返回定时任务<code>Job</code> 的实现类<code>Execution.class</code></li><li>构建 <code>jobDetail</code></li><li>根据<code>cron</code>表达式，创建调度器<code>trigger</code></li><li><strong>将整个<code>job</code> 当做参数传递</strong>，我们再运行时就可以获取了</li><li>判断是否存在，存在则移除</li><li>调度器 <code>scheduler</code>，绑定<code>jobDetail</code> 和 <code>trigger</code></li></ol><h4 id="_4-1-3-抽象job-实现类-abstractquartzjob" tabindex="-1"><a class="header-anchor" href="#_4-1-3-抽象job-实现类-abstractquartzjob" aria-hidden="true">#</a> 4.1.3 抽象Job 实现类 AbstractQuartzJob</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 抽象quartz调用
 *
 * <span class="token keyword">@author</span> ygn
 */</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQuartzJob</span> <span class="token keyword">implements</span> <span class="token class-name">Job</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">AbstractQuartzJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 线程本地变量
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Date</span><span class="token punctuation">&gt;</span></span> threadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> context<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JobExecutionException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">SysJob</span> sysJob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyBeanProp</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">,</span> context<span class="token punctuation">.</span><span class="token function">getMergedJobDataMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">ScheduleConstants</span><span class="token punctuation">.</span><span class="token constant">TASK_PROPERTIES</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token function">before</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sysJob<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sysJob <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token function">doExecute</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sysJob<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">after</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sysJob<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;任务执行异常  - ：&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">after</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sysJob<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 执行前
     *
     * <span class="token keyword">@param</span> <span class="token parameter">context</span> 工作执行上下文对象
     * <span class="token keyword">@param</span> <span class="token parameter">sysJob</span> 系统计划任务
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">before</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">SysJob</span> sysJob<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 执行后
     *
     * <span class="token keyword">@param</span> <span class="token parameter">context</span> 工作执行上下文对象
     * <span class="token keyword">@param</span> <span class="token parameter">sysJob</span> 系统计划任务
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">after</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">SysJob</span> sysJob<span class="token punctuation">,</span> <span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Date</span> startTime <span class="token operator">=</span> threadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        threadLocal<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">SysJobLog</span> sysJobLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysJobLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sysJobLog<span class="token punctuation">.</span><span class="token function">setJobName</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">.</span><span class="token function">getJobName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sysJobLog<span class="token punctuation">.</span><span class="token function">setJobGroup</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sysJobLog<span class="token punctuation">.</span><span class="token function">setInvokeTarget</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">.</span><span class="token function">getInvokeTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sysJobLog<span class="token punctuation">.</span><span class="token function">setStartTime</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sysJobLog<span class="token punctuation">.</span><span class="token function">setStopTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> runMs <span class="token operator">=</span> sysJobLog<span class="token punctuation">.</span><span class="token function">getStopTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> sysJobLog<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sysJobLog<span class="token punctuation">.</span><span class="token function">setJobMessage</span><span class="token punctuation">(</span>sysJobLog<span class="token punctuation">.</span><span class="token function">getJobName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; 总共耗时：&quot;</span> <span class="token operator">+</span> runMs <span class="token operator">+</span> <span class="token string">&quot;毫秒&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            sysJobLog<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">FAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> errorMsg <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token class-name">ExceptionUtil</span><span class="token punctuation">.</span><span class="token function">getExceptionMessage</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sysJobLog<span class="token punctuation">.</span><span class="token function">setExceptionInfo</span><span class="token punctuation">(</span>errorMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            sysJobLog<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 写入数据库当中</span>
        <span class="token class-name">SpringUtils</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">ISysJobLogService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addJobLog</span><span class="token punctuation">(</span>sysJobLog<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 执行方法，由子类重载
     *
     * <span class="token keyword">@param</span> <span class="token parameter">context</span> 工作执行上下文对象
     * <span class="token keyword">@param</span> <span class="token parameter">sysJob</span> 系统计划任务
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> 执行过程中的异常
     */</span>
    <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">SysJob</span> sysJob<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>既然是job 实现类，那么必须会有execute 方法。我们可以在执行前后，分别加上执行逻辑</p><ol><li>获取 jobDetail.getJobDataMap() 中存放的job 参数</li><li>在执行前后，分别加上函数 <ol><li>执行前：将时间保存在<code>ThreadLocal</code></li><li>执行后：获取存放在 ThreadLocal 中的时间，计算执行耗时</li><li>记录操作日志</li></ol></li><li>执行的具体操作，通过抽象类交给实现类去做</li></ol><h4 id="_4-1-4-job-实现类" tabindex="-1"><a class="header-anchor" href="#_4-1-4-job-实现类" aria-hidden="true">#</a> 4.1.4 Job 实现类</h4><p>可并发定时任务处理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 定时任务处理（允许并发执行）
 * 
 * <span class="token keyword">@author</span> ygn
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuartzJobExecution</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQuartzJob</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">SysJob</span> sysJob<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">JobInvokeUtil</span><span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不可并发定时任务处理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 定时任务处理（禁止并发执行）
 * 
 * <span class="token keyword">@author</span> ygn
 *
 */</span>
<span class="token annotation punctuation">@DisallowConcurrentExecution</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuartzDisallowConcurrentExecution</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractQuartzJob</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token class-name">JobExecutionContext</span> context<span class="token punctuation">,</span> <span class="token class-name">SysJob</span> sysJob<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">JobInvokeUtil</span><span class="token punctuation">.</span><span class="token function">invokeMethod</span><span class="token punctuation">(</span>sysJob<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不可并发，直接使用<code>quartz</code>的注解<code>@DisallowConcurrentExecution</code></p><h4 id="_4-1-5-通过反射执行任务" tabindex="-1"><a class="header-anchor" href="#_4-1-5-通过反射执行任务" aria-hidden="true">#</a> 4.1.5 通过反射执行任务</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 任务执行工具
 *
 * <span class="token keyword">@author</span> ygn
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JobInvokeUtil</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 执行方法
     *
     * <span class="token keyword">@param</span> <span class="token parameter">sysJob</span> 系统任务
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">invokeMethod</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> sysJob<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">String</span> invokeTarget <span class="token operator">=</span> sysJob<span class="token punctuation">.</span><span class="token function">getInvokeTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> beanName <span class="token operator">=</span> <span class="token function">getBeanName</span><span class="token punctuation">(</span>invokeTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token function">getMethodName</span><span class="token punctuation">(</span>invokeTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> methodParams <span class="token operator">=</span> <span class="token function">getMethodParams</span><span class="token punctuation">(</span>invokeTarget<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isValidClassName</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token class-name">SpringUtils</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">invokeMethod</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> methodName<span class="token punctuation">,</span> methodParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> bean <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>beanName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">invokeMethod</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> methodName<span class="token punctuation">,</span> methodParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 调用任务方法
     *
     * <span class="token keyword">@param</span> <span class="token parameter">bean</span> 目标对象
     * <span class="token keyword">@param</span> <span class="token parameter">methodName</span> 方法名称
     * <span class="token keyword">@param</span> <span class="token parameter">methodParams</span> 方法参数
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">invokeMethod</span><span class="token punctuation">(</span><span class="token class-name">Object</span> bean<span class="token punctuation">,</span> <span class="token class-name">String</span> methodName<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token operator">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> methodParams<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">SecurityException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span>
            <span class="token class-name">InvocationTargetException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>methodParams<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> methodParams<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Method</span> method <span class="token operator">=</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">,</span> <span class="token function">getMethodParamsType</span><span class="token punctuation">(</span>methodParams<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>bean<span class="token punctuation">,</span> <span class="token function">getMethodParamsValue</span><span class="token punctuation">(</span>methodParams<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">Method</span> method <span class="token operator">=</span> bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span>methodName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-更新定时任务" tabindex="-1"><a class="header-anchor" href="#_4-2-更新定时任务" aria-hidden="true">#</a> 4.2 更新定时任务</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token doc-comment comment">/**
     * 更新任务的时间表达式
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">job</span> 调度信息
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateJob</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span><span class="token punctuation">,</span> <span class="token class-name">TaskException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">SysJob</span> properties <span class="token operator">=</span> <span class="token function">selectJobById</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> jobMapper<span class="token punctuation">.</span><span class="token function">updateJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">updateSchedulerJob</span><span class="token punctuation">(</span>job<span class="token punctuation">,</span> properties<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> rows<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 更新任务
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">job</span> 任务对象
     * <span class="token keyword">@param</span> <span class="token parameter">jobGroup</span> 任务组名
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateSchedulerJob</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> job<span class="token punctuation">,</span> <span class="token class-name">String</span> jobGroup<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span><span class="token punctuation">,</span> <span class="token class-name">TaskException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> jobId <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 判断是否存在</span>
        <span class="token class-name">JobKey</span> jobKey <span class="token operator">=</span> <span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>scheduler<span class="token punctuation">.</span><span class="token function">checkExists</span><span class="token punctuation">(</span>jobKey<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 防止创建时存在数据问题 先移除，然后在执行创建操作</span>
            scheduler<span class="token punctuation">.</span><span class="token function">deleteJob</span><span class="token punctuation">(</span>jobKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">createScheduleJob</span><span class="token punctuation">(</span>scheduler<span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新定时任务与新增其实本质上是一样的</p><ol><li>先判断是否存在，存在则删除</li><li>直接调用 <code>ScheduleUtils</code> 创建定时任务</li></ol><h3 id="_4-3-项目启动-初始化定时器" tabindex="-1"><a class="header-anchor" href="#_4-3-项目启动-初始化定时器" aria-hidden="true">#</a> 4.3 项目启动 初始化定时器</h3><p>项目启动时，初始化定时器 主要是防止手动修改数据库导致未同步到定时任务处理（注：不能手动修改数据库ID和任务组名，否则会导致脏数据）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span><span class="token punctuation">,</span> <span class="token class-name">TaskException</span>
    <span class="token punctuation">{</span>
        scheduler<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysJob</span><span class="token punctuation">&gt;</span></span> jobList <span class="token operator">=</span> jobMapper<span class="token punctuation">.</span><span class="token function">selectJobAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SysJob</span> job <span class="token operator">:</span> jobList<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">createScheduleJob</span><span class="token punctuation">(</span>scheduler<span class="token punctuation">,</span> job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-删除定时任务" tabindex="-1"><a class="header-anchor" href="#_4-4-删除定时任务" aria-hidden="true">#</a> 4.4 删除定时任务</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 批量删除调度信息
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">jobIds</span> 需要删除的任务ID
     * <span class="token keyword">@return</span> 结果
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteJobByIds</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> jobIds<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> jobId <span class="token operator">:</span> jobIds<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">SysJob</span> job <span class="token operator">=</span> jobMapper<span class="token punctuation">.</span><span class="token function">selectJobById</span><span class="token punctuation">(</span>jobId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">deleteJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

 <span class="token doc-comment comment">/**
     * 删除任务后，所对应的trigger也将被删除
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">job</span> 调度信息
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">deleteJob</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> jobId <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> jobGroup <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> jobMapper<span class="token punctuation">.</span><span class="token function">deleteJobById</span><span class="token punctuation">(</span>jobId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            scheduler<span class="token punctuation">.</span><span class="token function">deleteJob</span><span class="token punctuation">(</span><span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> rows<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>调用<code>scheduler.deleteJob（）</code> 的方法直接删除就可以了</li></ol><h3 id="_4-5-定时任务的暂停与恢复" tabindex="-1"><a class="header-anchor" href="#_4-5-定时任务的暂停与恢复" aria-hidden="true">#</a> 4.5 定时任务的暂停与恢复</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 任务调度状态修改
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">job</span> 调度信息
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">changeStatus</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> status <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ScheduleConstants<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            rows <span class="token operator">=</span> <span class="token function">resumeJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ScheduleConstants<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">PAUSE</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            rows <span class="token operator">=</span> <span class="token function">pauseJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> rows<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
      <span class="token doc-comment comment">/**
     * 恢复任务
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">job</span> 调度信息
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">resumeJob</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> jobId <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> jobGroup <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        job<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">ScheduleConstants<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> jobMapper<span class="token punctuation">.</span><span class="token function">updateJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            scheduler<span class="token punctuation">.</span><span class="token function">resumeJob</span><span class="token punctuation">(</span><span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> rows<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
     <span class="token doc-comment comment">/**
     * 暂停任务
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">job</span> 调度信息
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pauseJob</span><span class="token punctuation">(</span><span class="token class-name">SysJob</span> job<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SchedulerException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Long</span> jobId <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> jobGroup <span class="token operator">=</span> job<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        job<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">ScheduleConstants<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">PAUSE</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> jobMapper<span class="token punctuation">.</span><span class="token function">updateJob</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            scheduler<span class="token punctuation">.</span><span class="token function">pauseJob</span><span class="token punctuation">(</span><span class="token class-name">ScheduleUtils</span><span class="token punctuation">.</span><span class="token function">getJobKey</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> jobGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> rows<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45);function r(v,m){const s=l("RouterLink");return t(),p("div",null,[k,e("p",null,[o(s,{to:"/dependencies/timer/quartz/quartz%E5%AE%9A%E6%97%B6%E5%99%A8%E5%85%A5%E9%97%A8.html#quartz%E5%AE%9A%E6%97%B6%E5%99%A8%E5%85%A5%E9%97%A8"},{default:c(()=>[i("quartz定时器入门")]),_:1})]),d])}const y=a(u,[["render",r],["__file","manage-system-job.html.vue"]]);export{y as default};
