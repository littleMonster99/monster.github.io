import{_ as s,W as l,X as t,Y as a,Z as e,$ as n,a0 as r,D as o}from"./framework-f64bc974.js";const g={},c=a("h1",{id:"flyway-commandline使用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#flyway-commandline使用","aria-hidden":"true"},"#"),e(" Flyway-commandline使用")],-1),d=a("h2",{id:"_1-flyway下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-flyway下载","aria-hidden":"true"},"#"),e(" 1. flyway下载")],-1),p={href:"https://repo1.maven.org/maven2/org/flywaydb/",target:"_blank",rel:"noopener noreferrer"},m=r(`<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211011213319190.png" alt="image-20211011213319190" tabindex="0" loading="lazy"><figcaption>image-20211011213319190</figcaption></figure><ul><li>conf ：存放flyway.conf配置文件，通过jdbc方式配置数据库连接</li><li>drivers：存放数据库jdbc驱动</li><li>sql：存放数据库元数据sql脚本</li></ul><h2 id="_2-配置conf" tabindex="-1"><a class="header-anchor" href="#_2-配置conf" aria-hidden="true">#</a> 2. 配置conf</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 数据库url地址</span>
<span class="token assign-left variable">flyway.url</span><span class="token operator">=</span>jdbc:mysql://192.168.0.1:3306/flywaytest?useUnicode<span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">characterEncoding</span><span class="token operator">=</span>utf8<span class="token operator">&amp;</span><span class="token assign-left variable">zeroDateTimeBehavior</span><span class="token operator">=</span>convertToNull<span class="token operator">&amp;</span><span class="token assign-left variable">useSSL</span><span class="token operator">=</span>true<span class="token operator">&amp;</span><span class="token assign-left variable">serverTimezone</span><span class="token operator">=</span>GMT%2B8
<span class="token comment"># 数据库驱动</span>
<span class="token assign-left variable">flyway.driver</span><span class="token operator">=</span>com.mysql.jdbc.Driver
<span class="token comment">#数据库用户名</span>
<span class="token assign-left variable">flyway.user</span><span class="token operator">=</span>root
<span class="token comment">#数据库密码</span>
<span class="token assign-left variable">flyway.password</span><span class="token operator">=</span>youpassword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-新建初始化sql" tabindex="-1"><a class="header-anchor" href="#_3-新建初始化sql" aria-hidden="true">#</a> 3. 新建初始化sql</h2><p>V1001__Create_person_table.sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> PERSON <span class="token punctuation">(</span>
    ID <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    NAME <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-初始化版本控制表" tabindex="-1"><a class="header-anchor" href="#_4-初始化版本控制表" aria-hidden="true">#</a> 4. 初始化版本控制表</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./flyway migrate <span class="token parameter variable">-baselineOnMigrate</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211011214740961.png" alt="image-20211011214740961" tabindex="0" loading="lazy"><figcaption>image-20211011214740961</figcaption></figure><h2 id="_5-flyway-常用命令" tabindex="-1"><a class="header-anchor" href="#_5-flyway-常用命令" aria-hidden="true">#</a> 5. Flyway 常用命令</h2><h3 id="_5-1-migrate命令" tabindex="-1"><a class="header-anchor" href="#_5-1-migrate命令" aria-hidden="true">#</a> 5.1 Migrate命令</h3><p>执行sql文件夹中未执行的sql，将sql版本更到最新。如果Flyway不存在，它将自动创建架构历史记录表。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026152909198.png" alt="image-20211026152909198" tabindex="0" loading="lazy"><figcaption>image-20211026152909198</figcaption></figure><h4 id="_5-1-1-使用" tabindex="-1"><a class="header-anchor" href="#_5-1-1-使用" aria-hidden="true">#</a> 5.1.1 使用</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>flyway  migrate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026154955580.png" alt="image-20211026154955580" tabindex="0" loading="lazy"><figcaption>image-20211026154955580</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026154919444.png" alt="image-20211026154919444" tabindex="0" loading="lazy"><figcaption>image-20211026154919444</figcaption></figure><h3 id="_5-2-clean-命令" tabindex="-1"><a class="header-anchor" href="#_5-2-clean-命令" aria-hidden="true">#</a> 5.2 clean 命令</h3><p>删除已配置模式中的所有对象（表，视图，过程，触发器等）。 架构将按照<code>schemas</code>属性指定的顺序进行清理。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026153049436.png" alt="image-20211026153049436" tabindex="0" loading="lazy"><figcaption>image-20211026153049436</figcaption></figure><h4 id="_5-2-1-使用" tabindex="-1"><a class="header-anchor" href="#_5-2-1-使用" aria-hidden="true">#</a> 5.2.1 使用</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flyway  clean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026155035705.png" alt="image-20211026155035705" tabindex="0" loading="lazy"><figcaption>image-20211026155035705</figcaption></figure><p>表已经被清空了</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026155129127.png" alt="image-20211026155129127" tabindex="0" loading="lazy"><figcaption>image-20211026155129127</figcaption></figure><h3 id="_5-3-info命令" tabindex="-1"><a class="header-anchor" href="#_5-3-info命令" aria-hidden="true">#</a> 5.3 info命令</h3><p>打印有关所有迁移的详细信息和状态信息。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026153221574.png" alt="image-20211026153221574" tabindex="0" loading="lazy"><figcaption>image-20211026153221574</figcaption></figure><h4 id="_5-3-1-使用" tabindex="-1"><a class="header-anchor" href="#_5-3-1-使用" aria-hidden="true">#</a> 5.3.1 使用</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flyway  info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026155748244.png" alt="image-20211026155748244" tabindex="0" loading="lazy"><figcaption>image-20211026155748244</figcaption></figure><p>相比数据库这张表</p><ul><li>数据列会更少一些。比如执行者、执行时间</li><li>但是这里会出现待执行的</li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026155329057.png" alt="image-20211026155329057" tabindex="0" loading="lazy"><figcaption>image-20211026155329057</figcaption></figure><h3 id="_5-4-validate-命令" tabindex="-1"><a class="header-anchor" href="#_5-4-validate-命令" aria-hidden="true">#</a> 5.4 validate 命令</h3><p>针对已解决的迁移（在文件系统或类路径上）验证已应用的迁移，以检测可能会导致无法准确创建模式的意外更改。</p><p>如果验证失败</p><ul><li>发现迁移名称，类型或校验和方面的差异</li><li>已应用不再在本地解析的版本</li><li>已解决尚未应用的版本</li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026153524052.png" alt="image-20211026153524052" tabindex="0" loading="lazy"><figcaption>image-20211026153524052</figcaption></figure><h4 id="_5-4-1-使用" tabindex="-1"><a class="header-anchor" href="#_5-4-1-使用" aria-hidden="true">#</a> 5.4.1 使用</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flyway  validate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026160024340.png" alt="image-20211026160024340" tabindex="0" loading="lazy"><figcaption>image-20211026160024340</figcaption></figure><p>原有的脚本如果变化了，用这个就可以校验是哪个脚本</p><p>改回原来的就没有问题了</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026160110913.png" alt="image-20211026160110913" tabindex="0" loading="lazy"><figcaption>image-20211026160110913</figcaption></figure><h3 id="_5-5-baseline-命令" tabindex="-1"><a class="header-anchor" href="#_5-5-baseline-命令" aria-hidden="true">#</a> 5.5 baseline 命令</h3><p>为现有数据库提供基准，不包括直到包括的所有迁移<code>baselineVersion</code>。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026153926959.png" alt="image-20211026153926959" tabindex="0" loading="lazy"><figcaption>image-20211026153926959</figcaption></figure><h4 id="_5-5-1-使用" tabindex="-1"><a class="header-anchor" href="#_5-5-1-使用" aria-hidden="true">#</a> 5.5.1 使用</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flyway  baseline
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026160250111.png" alt="image-20211026160250111" tabindex="0" loading="lazy"><figcaption>image-20211026160250111</figcaption></figure><p>如果数据库中有数据会报错，需要clean清空数据后，在执行</p><h3 id="_5-6-repair-命令" tabindex="-1"><a class="header-anchor" href="#_5-6-repair-命令" aria-hidden="true">#</a> 5.6 repair 命令</h3><p>修复Flyway模式历史记录表。这将执行以下操作：</p><ul><li>在没有DDL事务的数据库上删除所有失败的迁移 （仍然必须手动清理留下的用户对象）</li><li>将可用迁移的校验和，描述和类型与可用迁移重新对齐</li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026154058239.png" alt="image-20211026154058239" tabindex="0" loading="lazy"><figcaption>image-20211026154058239</figcaption></figure><h4 id="_5-6-1-使用" tabindex="-1"><a class="header-anchor" href="#_5-6-1-使用" aria-hidden="true">#</a> 5.6.1 使用</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>flyway repair
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211026160918822.png" alt="image-20211026160918822" tabindex="0" loading="lazy"><figcaption>image-20211026160918822</figcaption></figure><p>对有报错的语句执行后会回滚。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,62),b={href:"https://blog.csdn.net/u012045045/article/details/106312789",target:"_blank",rel:"noopener noreferrer"};function u(h,f){const i=o("ExternalLinkIcon");return l(),t("div",null,[c,d,a("p",null,[a("a",p,[e("https://repo1.maven.org/maven2/org/flywaydb/"),n(i)])]),m,a("p",null,[a("a",b,[e("Flyway自学之路-03（几个可用命令行操作Flyway）"),n(i)])])])}const v=s(g,[["render",u],["__file","flyway-x-commandline.html.vue"]]);export{v as default};
