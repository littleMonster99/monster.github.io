import{_ as t,W as o,X as l,Y as n,Z as s,$ as e,a0 as i,D as p}from"./framework-f64bc974.js";const c={},r=i(`<h1 id="minioserver启动模式" tabindex="-1"><a class="header-anchor" href="#minioserver启动模式" aria-hidden="true">#</a> MinioServer启动模式</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>minio支持多种server启动模式：</p><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220715171521129.png" alt="image-20220715171521129"><ul><li><p>standalone模式</p><p>即要管理的磁盘都在host本地。该启动模式一般仅用于实验环境、测试环境的验证和学习使用。在standalone模式下，还可以分为</p><ul><li><strong>non-erasure code mode</strong></li><li><strong>erasure code mode</strong>。</li></ul></li></ul><h3 id="_1-1-standalone-之-non-erasure-code-模式" tabindex="-1"><a class="header-anchor" href="#_1-1-standalone-之-non-erasure-code-模式" aria-hidden="true">#</a> 1.1 standalone 之 non-erasure code 模式</h3><p>所谓<strong>non-erasure code mode</strong>，即minio server启动时仅传入一个本地磁盘目录参数：比如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$minio</span> server data

Endpoint:  http://10.10.126.88:9000  http://127.0.0.1:9000
AccessKey: minioadmin
SecretKey: minioadmin

Browser Access:
   http://10.10.126.88:9000  http://127.0.0.1:9000           

Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide
   $ <span class="token function">mc</span> config <span class="token function">host</span> <span class="token function">add</span> myminio http://10.10.126.88:9000 minioadmin minioadmin

<span class="token punctuation">..</span>. <span class="token punctuation">..</span>.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这样的启动模式下，对于每一份对象数据，minio直接在data下面存储这份数据，不会建立副本，也不会启用纠删码机制。因此，<strong>这种模式无论是服务实例还是磁盘都是“单点”，无任何高可用保障，磁盘损坏就表示数据丢失。</strong></p><h3 id="_1-2-standalone-之-non-erasure-code-模式" tabindex="-1"><a class="header-anchor" href="#_1-2-standalone-之-non-erasure-code-模式" aria-hidden="true">#</a> 1.2 standalone 之 non-erasure code 模式</h3><p>erasure code mode即为minio server<strong>实例传入多个本地磁盘参数</strong>。一旦遇到多于一个磁盘参数，minio server会自动启用<strong>erasure code mode</strong>。<strong>erasure code</strong>对磁盘的个数是有要求的（最少4个），如不满足要求，实例启动将失败：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$minio</span> server data1 data2
ERROR Invalid <span class="token builtin class-name">command</span> line arguments: Incorrect number of endpoints provided <span class="token punctuation">[</span>data1 data2<span class="token punctuation">]</span>
      <span class="token operator">&gt;</span> Please provide an even number of endpoints greater or equal to <span class="token number">4</span>
      HINT:
        For <span class="token function">more</span> information, please refer to https://docs.min.io/docs/minio-erasure-code-quickstart-guide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),d=n("strong",null,"erasure code",-1),u={href:"https://docs.minio.io/docs/minio-erasure-code-quickstart-guide.html",target:"_blank",rel:"noopener noreferrer"},m=n("strong",null,"erasure coding set",-1),v=n("strong",null,"erasure coding set",-1),k=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$minio</span> server data1 data2 data3 data4

Formatting <span class="token number">1</span> zone, <span class="token number">1</span> set<span class="token punctuation">(</span>s<span class="token punctuation">)</span>, <span class="token number">4</span> drives per set.
WARNING: Host <span class="token builtin class-name">local</span> has <span class="token function">more</span> than <span class="token number">2</span> drives of set. A <span class="token function">host</span> failure will result <span class="token keyword">in</span> data becoming unavailable.
Status:         <span class="token number">4</span> Online, <span class="token number">0</span> Offline.
Endpoint:  http://10.10.126.88:9000  http://127.0.0.1:9000
AccessKey: minioadmin
SecretKey: minioadmin

Browser Access:
   http://10.10.126.88:9000  http://127.0.0.1:9000           

Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide
   $ <span class="token function">mc</span> config <span class="token function">host</span> <span class="token function">add</span> myminio http://10.10.126.88:9000 minioadmin minioadmin

<span class="token punctuation">..</span>. <span class="token punctuation">..</span>.

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从minio server的输出日志来看，minio server将这些drive放入了一个<strong>erasure coding set</strong>了。在输出日志中，我们还看到一行WARNING: <strong>Host local has more than 2 drives of set. A host failure will result in data becoming unavailable.</strong>，即minio server警告我们：这个<strong>erasure coding set</strong>中有多于两个的drive都在local host上，这样一旦host宕机，那么数据将无法获取。(每个set 有4个drive，根据纠删码的机制，这个set的最大允许失效的disk数量为4/2=2)。</p><h4 id="_1-2-1-语法糖-省略号" tabindex="-1"><a class="header-anchor" href="#_1-2-1-语法糖-省略号" aria-hidden="true">#</a> 1.2.1 语法糖-省略号</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$minio</span> server data<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span>.18<span class="token punctuation">}</span>

Formatting <span class="token number">1</span> zone, <span class="token number">3</span> set<span class="token punctuation">(</span>s<span class="token punctuation">)</span>, <span class="token number">6</span> drives per set.
WARNING: Host <span class="token builtin class-name">local</span> has <span class="token function">more</span> than <span class="token number">3</span> drives of set. A <span class="token function">host</span> failure will result <span class="token keyword">in</span> data becoming unavailable.
WARNING: Host <span class="token builtin class-name">local</span> has <span class="token function">more</span> than <span class="token number">3</span> drives of set. A <span class="token function">host</span> failure will result <span class="token keyword">in</span> data becoming unavailable.
WARNING: Host <span class="token builtin class-name">local</span> has <span class="token function">more</span> than <span class="token number">3</span> drives of set. A <span class="token function">host</span> failure will result <span class="token keyword">in</span> data becoming unavailable.
Status:         <span class="token number">18</span> Online, <span class="token number">0</span> Offline.
Endpoint:  http://10.10.126.88:9000  http://127.0.0.1:9000
AccessKey: minioadmin
SecretKey: minioadmin

Browser Access:
   http://10.10.126.88:9000  http://127.0.0.1:9000           

Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide
   $ <span class="token function">mc</span> config <span class="token function">host</span> <span class="token function">add</span> myminio http://10.10.126.88:9000 minioadmin minioadmin
<span class="token punctuation">..</span>. <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>minio server data{1...18}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等价于</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>minio server data1 data2 data3 data4 data5 data6 data7 data8 data9 data10 data11 data 12 data13 data14 data15 data16 data17 data18
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>minio server会自行扩展省略号代表的内容。我们看到：当我们传入18个disk drive后，minio server创建了3个<strong>erasure coding set</strong>，每个set中有6个disk drive。同样，minio server还针对每个set输出了一行WARNING：每个Set中有三个以上的disk drive都位于同一台host上。</p><p>这些WARNING我们可以通过distributed mode来解决。顾名思义，distributed mode下，minio server实例和其管理的disk drive分布在多台host上，这种模式可以避免minio server实例单点，数据也将分布在不同host上的不同disk中，实现了高可用，提升了整体的容灾能力。由于处理多个host上的disk，distribute mode默认就会启动<strong>erasure coding set</strong>机制。</p><h3 id="_1-3-distributed-mode" tabindex="-1"><a class="header-anchor" href="#_1-3-distributed-mode" aria-hidden="true">#</a> 1.3 distributed mode</h3><p>在distributed mode下，minio server后面的远程的endpoint采用http url编码格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">MINIO_ACCESS_KEY</span><span class="token operator">=</span><span class="token operator">&lt;</span>ACCESS_KEY<span class="token operator">&gt;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">MINIO_SECRET_KEY</span><span class="token operator">=</span><span class="token operator">&lt;</span>SECRET_KEY<span class="token operator">&gt;</span>
<span class="token variable">$minio</span> server http://host<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span>.4<span class="token punctuation">}</span>:9000/minio/data<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span>.4<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面例子中的minio server命令相当于4个host，每个host上启动一个minio server实例，每个实例都管理16的disk drive(包括本地和远程的)。上述命令等价于：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$minio</span> server http://host1:9000/minio/data1 http://host1:9000/minio/data2 http://host1:9000/minio/data3 http://host1:9000/minio/data4 http://host2:9000/minio/data1 http://host2:9000/minio/data2 http://host2:9000/minio/data3 http://host2:9000/minio/data4 http://host3:9000/minio/data1 http://host3:9000/minio/data2 http://host3:9000/minio/data3 http://host3:9000/minio/data4 http://host4:9000/minio/data1 http://host4:9000/minio/data2 http://host4:9000/minio/data3 http://host4:9000/minio/data4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>minio同样会自动将这些disk drive划分为若干个<strong>erasure coding set</strong>。每个endpoint用<code>http://address/disk-drive-path</code>的形式编码。注意：<code>这条命令在host1、host2、host3和host4上都要执行</code></p><h2 id="_2-zone的概念" tabindex="-1"><a class="header-anchor" href="#_2-zone的概念" aria-hidden="true">#</a> 2. <code>zone</code>的概念</h2><p>比如下面这个例子：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$minio server data{1...8} data{9...16}

Formatting 1 zone, 1 set(s), 8 drives per set.
WARNING: Host local has more than 4 drives of set. A host failure will result in data becoming unavailable.
Formatting 2 zone, 1 set(s), 8 drives per set.
WARNING: Host local has more than 4 drives of set. A host failure will result in data becoming unavailable.
Status:         16 Online, 0 Offline.
Endpoint:  http://10.10.126.88:9000  http://127.0.0.1:9000
AccessKey: minioadmin
SecretKey: minioadmin

Browser Access:
   http://10.10.126.88:9000  http://127.0.0.1:9000           

Command-line Access: https://docs.min.io/docs/minio-client-quickstart-guide
   $ mc config host add myminio http://10.10.126.88:9000 minioadmin minioadmin

... ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在命令行中给minio server传入两组采用“省略号”语法的参数，minio认为<strong>每组</strong>就是一个**“zone”<strong>，这里有两组，因此minio创建了两个</strong>zone**。在每个zone内，minio创建了一个<strong>erasure coding set</strong>，每个set中有8个disk drive。对于外部的写数据请求，minio server会首先查找可用空间多的zone，然后再在zone内选择set和disk drive。</p><p>如果不用“省略号”语法，那么minio server会将后面传入的所有disk drive放入一个zone中</p><h2 id="_3-部署distributed-minio集群" tabindex="-1"><a class="header-anchor" href="#_3-部署distributed-minio集群" aria-hidden="true">#</a> 3. 部署distributed minio集群</h2><h3 id="_3-1-单机上部署distributed-minio集群" tabindex="-1"><a class="header-anchor" href="#_3-1-单机上部署distributed-minio集群" aria-hidden="true">#</a> 3. 1. 单机上部署distributed minio集群</h3><p>我们的验证环境采用最小的distributed minio模式：单机、one zone, one erasure coding set, 4 disk drive。下面是部署的示意图：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220715200417201.png" alt="image-20220715200417201" tabindex="0" loading="lazy"><figcaption>image-20220715200417201</figcaption></figure><p>我们没有使用“省略号”语法，在单机上不是很好模拟。我们通过下面脚本来启动该minio集群：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># cat startup_minio.sh</span>
<span class="token comment">#!/bin/bash</span>

<span class="token builtin class-name">export</span> <span class="token assign-left variable">MINIO_ACCESS_KEY</span><span class="token operator">=</span><span class="token string">&quot;minio&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">MINIO_SECRET_KEY</span><span class="token operator">=</span><span class="token string">&quot;minio123&quot;</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span>01<span class="token punctuation">..</span>04<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token function">nohup</span> minio server <span class="token parameter variable">--address</span> <span class="token string">&quot;:90<span class="token variable">\${i}</span>&quot;</span> http://127.0.0.1:9001/root/minio-install/data1 http://127.0.0.1:9002/root/minio-install/data2  http://127.0.0.1:9003/root/minio-install/data3 http://127.0.0.1:9004/root/minio-install/data4 <span class="token operator">&gt;</span> <span class="token string">&quot;/root/minio-install/90<span class="token variable">\${i}</span>.log&quot;</span><span class="token operator">&amp;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动该minio集群，并查看启动状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># bash startup_minio.sh</span>

<span class="token comment"># ps -ef|grep minio</span>

root      <span class="token number">1218</span>     <span class="token number">1</span> <span class="token number">11</span> <span class="token number">21</span>:58 pts/5    00:00:01 minio server <span class="token parameter variable">--address</span> :9001 http://127.0.0.1:9001/root/minio-install/data1 http://127.0.0.1:9002/root/minio-install/data2 http://127.0.0.1:9003/root/minio-install/data3 http://127.0.0.1:9004/root/minio-install/data4
root      <span class="token number">1219</span>     <span class="token number">1</span> <span class="token number">11</span> <span class="token number">21</span>:58 pts/5    00:00:01 minio server <span class="token parameter variable">--address</span> :9002 http://127.0.0.1:9001/root/minio-install/data1 http://127.0.0.1:9002/root/minio-install/data2 http://127.0.0.1:9003/root/minio-install/data3 http://127.0.0.1:9004/root/minio-install/data4
root      <span class="token number">1220</span>     <span class="token number">1</span>  <span class="token number">3</span> <span class="token number">21</span>:58 pts/5    00:00:00 minio server <span class="token parameter variable">--address</span> :9003 http://127.0.0.1:9001/root/minio-install/data1 http://127.0.0.1:9002/root/minio-install/data2 http://127.0.0.1:9003/root/minio-install/data3 http://127.0.0.1:9004/root/minio-install/data4
root      <span class="token number">1221</span>     <span class="token number">1</span> <span class="token number">11</span> <span class="token number">21</span>:58 pts/5    00:00:01 minio server <span class="token parameter variable">--address</span> :9004 http://127.0.0.1:9001/root/minio-install/data1 http://127.0.0.1:9002/root/minio-install/data2 http://127.0.0.1:9003/root/minio-install/data3 http://127.0.0.1:9004/root/minio-install/data4

root@instance-cspzrq3u:~/minio-install<span class="token comment"># ls</span>
<span class="token number">9001</span>.log  <span class="token number">9002</span>.log  <span class="token number">9003</span>.log  <span class="token number">9004</span>.log  data1  data2  data3  data4  startup_minio.sh
root@instance-cspzrq3u:~/minio-install<span class="token comment"># tail -100f 9001.log</span>

Formatting <span class="token number">1</span> zone, <span class="token number">1</span> set<span class="token punctuation">(</span>s<span class="token punctuation">)</span>, <span class="token number">4</span> drives per set.
Attempting encryption of all config, IAM <span class="token function">users</span> and policies on MinIO backend
Status:         <span class="token number">4</span> Online, <span class="token number">0</span> Offline.
Endpoint:  http://192.168.16.4:9001  http://172.17.0.1:9001  http://172.18.0.1:9001  http://127.0.0.1:9001       

Browser Access:
   http://192.168.16.4:9001  http://172.17.0.1:9001  http://172.18.0.1:9001  http://127.0.0.1:9001       

<span class="token punctuation">..</span><span class="token punctuation">..</span> <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-mc配置与管理" tabindex="-1"><a class="header-anchor" href="#_3-2-mc配置与管理" aria-hidden="true">#</a> 3.2 mc配置与管理</h3><p>minio官方提供了mc命令行工具，用于对minio server进行管理。我们首先要为mc创建一个管理本地minio server(:9001)的配置：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># mc config host add myminio 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里我们使用mc添加了一个所谓”host”，指向上面创建的minio server(:9001)。上面的命令实质上是在~/.mc/config.json中写入了如下配置：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code># cat ~/.mc/config.json
<span class="token punctuation">{</span>
    <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hosts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;myminio&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:9001&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;accessKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;minio&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;secretKey&quot;</span><span class="token operator">:</span> <span class="token string">&quot;minio123&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;api&quot;</span><span class="token operator">:</span> <span class="token string">&quot;s3v4&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;lookup&quot;</span><span class="token operator">:</span> <span class="token string">&quot;auto&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，我们通过mc命令在minio集群中添加三个bucket：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@instance-cspzrq3u:~<span class="token comment"># mc mb myminio/image</span>
Bucket created successfully <span class="token variable"><span class="token variable">\`</span>myminio/image<span class="token variable">\`</span></span><span class="token builtin class-name">.</span>
root@instance-cspzrq3u:~<span class="token comment"># mc mb myminio/video</span>
Bucket created successfully <span class="token variable"><span class="token variable">\`</span>myminio/video<span class="token variable">\`</span></span><span class="token builtin class-name">.</span>
root@instance-cspzrq3u:~<span class="token comment"># mc mb myminio/audio</span>
Bucket created successfully <span class="token variable"><span class="token variable">\`</span>myminio/audio<span class="token variable">\`</span></span><span class="token builtin class-name">.</span>
root@instance-cspzrq3u:~<span class="token comment"># mc ls myminio</span>
<span class="token punctuation">[</span><span class="token number">2020</span>-03-16 <span class="token number">15</span>:19:55 CST<span class="token punctuation">]</span>      0B audio/
<span class="token punctuation">[</span><span class="token number">2020</span>-03-16 <span class="token number">15</span>:19:48 CST<span class="token punctuation">]</span>      0B image/
<span class="token punctuation">[</span><span class="token number">2020</span>-03-16 <span class="token number">15</span>:19:52 CST<span class="token punctuation">]</span>      0B video/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新创建的bucket默认的访问policy是none，即外部无访问权限：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@instance-cspzrq3u:~<span class="token comment"># mc policy get myminio/image</span>
Access permission <span class="token keyword">for</span> <span class="token variable"><span class="token variable">\`</span>myminio/image<span class="token variable">\`</span></span> is <span class="token variable"><span class="token variable">\`</span>none<span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>根据我们的设计，我们需要给这三个bucket添加外部可读取权限，以image这个bucket为例：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@instance-cspzrq3u:~<span class="token comment"># mc policy set download myminio/image</span>
Access permission <span class="token keyword">for</span> <span class="token variable"><span class="token variable">\`</span>myminio/image<span class="token variable">\`</span></span> is <span class="token builtin class-name">set</span> to <span class="token variable"><span class="token variable">\`</span>download<span class="token variable">\`</span></span>
root@instance-cspzrq3u:~<span class="token comment"># mc policy get myminio/image</span>
Access permission <span class="token keyword">for</span> <span class="token variable"><span class="token variable">\`</span>myminio/image<span class="token variable">\`</span></span> is <span class="token variable"><span class="token variable">\`</span>download<span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-load-balancer设置" tabindex="-1"><a class="header-anchor" href="#_3-3-load-balancer设置" aria-hidden="true">#</a> 3.3. load balancer设置</h3><p>这里我们使用一个nginx前置在minio集群外部，下面是为minio创建的nginx配置文件(/etc/nginx/conf.d/minio.conf)：</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>// /etc/nginx/conf.d/minio.conf

 <span class="token directive"><span class="token keyword">upstream</span> minio_cluster</span> <span class="token punctuation">{</span>
    <span class="token directive"><span class="token keyword">server</span> localhost:9001</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> localhost:9002</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> localhost:9003</span><span class="token punctuation">;</span>
    <span class="token directive"><span class="token keyword">server</span> localhost:9004</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>
 <span class="token directive"><span class="token keyword">listen</span> <span class="token number">9000</span></span><span class="token punctuation">;</span>
 <span class="token directive"><span class="token keyword">server_name</span> myminio.tonybai.com</span><span class="token punctuation">;</span>

 <span class="token comment"># To allow special characters in headers</span>
 <span class="token directive"><span class="token keyword">ignore_invalid_headers</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>
 <span class="token comment"># Allow any size file to be uploaded.</span>
 <span class="token comment"># Set to a value such as 1000m; to restrict file size to a specific value</span>
 <span class="token directive"><span class="token keyword">client_max_body_size</span> <span class="token number">0</span></span><span class="token punctuation">;</span>
 <span class="token comment"># To disable buffering</span>
 <span class="token directive"><span class="token keyword">proxy_buffering</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>

<span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">{</span>

   <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$http_host</span></span><span class="token punctuation">;</span>

   <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>
   <span class="token comment"># Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span>
   <span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> Connection <span class="token string">&quot;&quot;</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">chunked_transfer_encoding</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>

   <span class="token directive"><span class="token keyword">proxy_pass</span> http://minio_cluster</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token directive"><span class="token keyword">location</span> /image/</span> <span class="token punctuation">{</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-Proto <span class="token variable">$scheme</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$http_host</span></span><span class="token punctuation">;</span>

   <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> <span class="token number">300</span></span><span class="token punctuation">;</span>
   <span class="token comment"># Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span>
   <span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_set_header</span> Connection <span class="token string">&quot;&quot;</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">chunked_transfer_encoding</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">client_max_body_size</span> <span class="token number">1000m</span></span><span class="token punctuation">;</span>
   <span class="token directive"><span class="token keyword">proxy_buffering</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>

   <span class="token directive"><span class="token keyword">proxy_pass</span> http://minio_cluster</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启nginx（nginx -s reload)。</p><p>我们使用浏览器访问一下<code>http://myminio.tonybai.com:9000/</code>，登录后，你将看到如下页面：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220715200904574.png" alt="image-20220715200904574" tabindex="0" loading="lazy"><figcaption>image-20220715200904574</figcaption></figure><p>选择左侧的”image” bucket，点击右下角的”+”号，我们可以上传一张图片：gopher-daily-logo.png，上传后，我们退出登录。然后通过地址<code>http://myminio.tonybai.com:9000/image/gopher-daily-logo.png</code>访问该图片。你也可以通过wget命令下载该图片：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$wget</span> <span class="token parameter variable">-c</span> http://myminio.tonybai.com:9000/image/gopher-daily-logo.png
--2020-03-16 <span class="token number">15</span>:40:20--  http://myminio.tonybai.com:9000/image/gopher-daily-logo.png
正在解析主机 myminio.tonybai.com <span class="token punctuation">(</span>myminio.tonybai.com<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">106.12</span>.69.83
正在连接 myminio.tonybai.com <span class="token punctuation">(</span>myminio.tonybai.com<span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">106.12</span>.69.83<span class="token operator">|</span>:9000<span class="token punctuation">..</span>. 已连接。
已发出 HTTP 请求，正在等待回应<span class="token punctuation">..</span>. <span class="token number">200</span> OK
长度：59736 <span class="token punctuation">(</span>58K<span class="token punctuation">)</span> <span class="token punctuation">[</span>image/png<span class="token punctuation">]</span>
正在保存至: “gopher-daily-logo.png”

gopher-daily-logo.png        <span class="token number">100</span>%<span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>  <span class="token number">58</span>.34K   253KB/s  用时 <span class="token number">0</span>.2s   

<span class="token number">2020</span>-03-16 <span class="token number">15</span>:40:20 <span class="token punctuation">(</span><span class="token number">253</span> KB/s<span class="token punctuation">)</span> - 已保存 “gopher-daily-logo.png” <span class="token punctuation">[</span><span class="token number">59736</span>/59736<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-开启多版本控制" tabindex="-1"><a class="header-anchor" href="#_4-开启多版本控制" aria-hidden="true">#</a> 4 开启多版本控制</h2><p>要开启多版本控制，必须开启纠删码模式</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220715165955626.png" alt="image-20220715165955626" tabindex="0" loading="lazy"><figcaption>image-20220715165955626</figcaption></figure><p>开启纠删码模式后，我们上传的文件可以看到历史版本</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220715170326538.png" alt="image-20220715170326538" tabindex="0" loading="lazy"><figcaption>image-20220715170326538</figcaption></figure><p>我们再存储可以看到他的多版本文件</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220715170931323.png" alt="image-20220715170931323" tabindex="0" loading="lazy"><figcaption>image-20220715170931323</figcaption></figure><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,55),b={href:"https://tonybai.com/2020/03/16/build-high-performance-object-storage-with-minio-part1-prototype/",target:"_blank",rel:"noopener noreferrer"};function h(g,y){const a=p("ExternalLinkIcon");return o(),l("div",null,[r,n("p",null,[d,s("启用后，要求传给minio server的endpoint(standalone模式下，即本地磁盘上的目录)"),n("a",u,[s("至少为4个"),e(a)]),s("。minio server启用纠删码机制后，会自动将传入的disk drive划分为多个"),m,s("，每个"),v,s("中的disk drive的数量可以是：4, 6, 8, 10, 12, 14 和16。minio server会根据传入disk drive的数量自动计算set个数和每个set中的disk drive数量。比如下面例子中，我们传入四个endpoint(disk drive)给minio server：")]),k,n("p",null,[n("a",b,[s("使用minio搭建高性能对象存储-第一部分：原型"),e(a)])])])}const _=t(c,[["render",h],["__file","minio-start-model.html.vue"]]);export{_ as default};
