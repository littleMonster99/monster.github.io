import{_ as t,W as o,X as r,Y as e,Z as n,$ as s,a0 as l,D as i}from"./framework-f64bc974.js";const p={},c=l(`<h1 id="商城设计要点-一-避免重复下单" tabindex="-1"><a class="header-anchor" href="#商城设计要点-一-避免重复下单" aria-hidden="true">#</a> 商城设计要点(一)-避免重复下单</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>用户快速点了两次 “提交订单” 按钮，浏览器会向后端发送两条创建订单的请求，最终会创建两条一模一样的订单。</p><h2 id="_2-解决方案" tabindex="-1"><a class="header-anchor" href="#_2-解决方案" aria-hidden="true">#</a> 2. 解决方案</h2><p>解决方案就是采用<strong>幂等机制</strong>，多次请求和一次请求产生的效果是一样的。</p><h3 id="_2-1-方案一-创建订单页面-预生成订单id" tabindex="-1"><a class="header-anchor" href="#_2-1-方案一-创建订单页面-预生成订单id" aria-hidden="true">#</a> 2.1 方案一：创建订单页面，预生成订单ID</h3><p>利用数据库自身特性 “主键唯一约束”，在插入订单记录时，带上主键值，如果订单重复，记录插入会失败。</p><p>操作过程：</p><ul><li>引入一个服务，用于生成一个“全局唯一的订单号”</li><li>进入<strong>创建订单页面时</strong>，前端请求该服务，<strong>预生成订单ID</strong></li><li>提交订单时，请求参数除了业务参数外，还要带上这个预生成订单ID</li></ul><blockquote><ol><li>mall 商城项目未采用该方案</li><li>订单id是在提交订单时sql生成</li></ol></blockquote><h3 id="_2-2-方案二-前端控制" tabindex="-1"><a class="header-anchor" href="#_2-2-方案二-前端控制" aria-hidden="true">#</a> 2.2 **方案二：**前端控制</h3><p>前端通过js脚本控制，无法<strong>解决用户刷新提交的请求</strong>。另外<strong>也无法解决恶意提交。</strong></p><p>不建议采用该方案，如果想用，也只是作为一个<strong>补充方案</strong>。</p><blockquote><p>mall商城本身也没有商城前端</p></blockquote><h3 id="_2-3-方案三-创建订单页面-预生成token" tabindex="-1"><a class="header-anchor" href="#_2-3-方案三-创建订单页面-预生成token" aria-hidden="true">#</a> 2.3 **方案三：**创建订单页面，预生成token</h3><p>前后约定附加参数校验。</p><p>当用户点击购买按钮时，渲染下单页面，展示商品、收货地址、运费、价格等信息，<strong>同时页面会埋上<code>Token </code>信息</strong>，用户提交订单时，后端业务逻辑会校验token，有且匹配才认为是合理请求。</p><p>注意：同一个 <code>Token</code> 只能用一次，用完后立马失效掉。</p><p>注意：同一个 <code>Token</code> 只能用一次，用完后立马失效掉。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">&quot;/add-name-v2&quot;</span> method<span class="token operator">=</span><span class="token string">&quot;post&quot;</span><span class="token operator">&gt;</span>
    <span class="token punctuation">{</span><span class="token operator">%</span> csrf_token <span class="token operator">%</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;name&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;提交&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ol><li><p>mall 商城项目未采用该方案</p></li><li><p>此方案与方案一，异曲同工之妙，一个是数据库id，一个是临时token</p></li></ol></blockquote><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,22),d={href:"https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"关于幂等的处理，更多解决方案可以看这两篇文章",-1),u={href:"https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&mid=2247485064&idx=1&sn=0596c89178b7c67c92bfaaf4e44a3b1d&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},_={href:"https://mp.weixin.qq.com/s?__biz=Mzg2NzYyNjQzNg==&mid=2247489368&idx=1&sn=428dc07c9e788d217d2e357933cb8bc4&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},k=e("h3",{id:"",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),g=e("h3",{id:"-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#-1","aria-hidden":"true"},"#")],-1);function m(b,f){const a=i("ExternalLinkIcon");return o(),r("div",null,[c,e("p",null,[e("a",d,[n("聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA"),s(a)])]),h,e("ul",null,[e("li",null,[e("strong",null,[e("a",u,[n("高并发下如何保证接口的幂等性？"),s(a)])])]),e("li",null,[e("strong",null,[e("a",_,[n("幂等设计，都有哪些技术方案？"),s(a)])])])]),k,g])}const x=t(p,[["render",m],["__file","mall-key-points-repeat-order.html.vue"]]);export{x as default};
