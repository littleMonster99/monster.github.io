import{_ as n,W as s,X as a,a0 as p}from"./framework-f64bc974.js";const t={},e=p(`<h1 id="python爬取包图网" tabindex="-1"><a class="header-anchor" href="#python爬取包图网" aria-hidden="true">#</a> python爬取包图网</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>下载包图网的视频资源到本地</p><h2 id="_2-涉及知识点" tabindex="-1"><a class="header-anchor" href="#_2-涉及知识点" aria-hidden="true">#</a> 2. 涉及知识点</h2><ol><li><p>isinstance() 判断对象类型</p><p>函数来判断一个对象是否是一个已知的类型</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>useragent<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>多线程</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>t1 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">threading<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>request<span class="token punctuation">)</span>  # request线程，进行生产者任务
t1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  # 线程启动
t1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  # 等待其他线程结束，再结束 线程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>zip/unzip使用</p></li></ol><p><code>zip()</code>把两个或多个数组的所有元素按索引对齐，然后按索引合并成新数组。例如，你有一个<code>Array</code>保存了名字，另一个<code>Array</code>保存了分数，现在，要把名字和分数给对上，用<code>zip()</code>轻松实现：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;use strict&#39;;

var names = [&#39;Adam&#39;, &#39;Lisa&#39;, &#39;Bart&#39;];
var scores = [85, 92, 59];
_.zip(names, scores);
// [[&#39;Adam&#39;, 85], [&#39;Lisa&#39;, 92], [&#39;Bart&#39;, 59]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>unzip()</code>则是反过来：</p><ol start="4"><li><p>进程间通信 queue队列</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> queue


<span class="token keyword">class</span> <span class="token class-name">Baotu</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token operator">=</span><span class="token string">&#39;https://ibaotu.com/shipin/&#39;</span><span class="token punctuation">,</span> thread<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> max_page<span class="token operator">=</span><span class="token number">250</span><span class="token punctuation">,</span> useragent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
      
        self<span class="token punctuation">.</span>que <span class="token operator">=</span> queue<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 请求队列</span>
        self<span class="token punctuation">.</span>fail <span class="token operator">=</span> queue<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 失败队列</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        
    <span class="token keyword">def</span> <span class="token function">request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
           <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
           self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;http:&#39;</span> <span class="token operator">+</span> _<span class="token punctuation">[</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> n<span class="token punctuation">[</span><span class="token string">&#39;alt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  
         	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	  
    <span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token operator">=</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 默认下载路径为当前文件夹下</span>
        <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 判断如果队列不为空进行下载</span>
            data <span class="token operator">=</span> self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 从队列中取出视频字典</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>保存文件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>时间装饰器</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 时间装饰器</span>
<span class="token keyword">def</span> <span class="token function">usetime</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        time_start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>  <span class="token comment"># 装饰的函数在此运行</span>
        time_run <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time_start
        <span class="token keyword">print</span><span class="token punctuation">(</span>func<span class="token punctuation">.</span>__name__ <span class="token operator">+</span> <span class="token string">&#39;用时 %.2f 秒&#39;</span> <span class="token operator">%</span> time_run<span class="token punctuation">)</span>

    <span class="token keyword">return</span> inner

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要使用的地方</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code> 	<span class="token decorator annotation punctuation">@usetime</span>
    <span class="token keyword">def</span> <span class="token function">request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    	<span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_3-完整代码" tabindex="-1"><a class="header-anchor" href="#_3-完整代码" aria-hidden="true">#</a> 3. 完整代码</h2><p>思路：</p><ol><li>初始化要爬取的内容参数（请求队列，页数，请求头，线程数量等）</li><li>爬取页面内容，将网站中的视频和图片地址取出，存在queue队列</li><li>从queue队列中取出对应的地址，下载到本地</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: UTF-8 -*-</span>
__author__ <span class="token operator">=</span> <span class="token string">&#39;Joynice&#39;</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> queue
<span class="token keyword">import</span> threading
<span class="token keyword">import</span> time

<span class="token keyword">import</span> requests
<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup
<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree


<span class="token comment"># 时间装饰器</span>
<span class="token keyword">def</span> <span class="token function">usetime</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        time_start <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>  <span class="token comment"># 装饰的函数在此运行</span>
        time_run <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time_start
        <span class="token keyword">print</span><span class="token punctuation">(</span>func<span class="token punctuation">.</span>__name__ <span class="token operator">+</span> <span class="token string">&#39;用时 %.2f 秒&#39;</span> <span class="token operator">%</span> time_run<span class="token punctuation">)</span>

    <span class="token keyword">return</span> inner


<span class="token keyword">class</span> <span class="token class-name">Baotu</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&#39;&#39;&#39;
    负责爬虫存储
    TODO:
        目标网络有反爬虫机制，多线程下导致有些目标下载失败
        1.解决多线程下网络错误：增加retry机制
        2.异步进行
    注意点：
    requests.text与requests.context区别

    &#39;&#39;&#39;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token operator">=</span><span class="token string">&#39;https://ibaotu.com/shipin/&#39;</span><span class="token punctuation">,</span> thread<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> max_page<span class="token operator">=</span><span class="token number">250</span><span class="token punctuation">,</span> useragent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&#39;&#39;&#39;

        :param url:
        :param thread: 线程数
        :param max_page: 爬取页数
        :param useragent: 请求useragent
        &#39;&#39;&#39;</span>

        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url
        self<span class="token punctuation">.</span>thread <span class="token operator">=</span> thread
        self<span class="token punctuation">.</span>page <span class="token operator">=</span> max_page
        self<span class="token punctuation">.</span>useragent <span class="token operator">=</span> useragent
        self<span class="token punctuation">.</span>header <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_header<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>que <span class="token operator">=</span> queue<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 请求队列</span>
        self<span class="token punctuation">.</span>fail <span class="token operator">=</span> queue<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 失败队列</span>

        page <span class="token operator">=</span> self<span class="token punctuation">.</span>_get_maxpage<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>page <span class="token operator">&gt;</span> page<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>page <span class="token operator">=</span> page
        <span class="token builtin">super</span><span class="token punctuation">(</span>Baotu<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># 如果用户没有设置浏览器类型将使用默认浏览器</span>
    <span class="token keyword">def</span> <span class="token function">_get_header</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>useragent<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>useragent <span class="token operator">=</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36&#39;</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>useragent<span class="token punctuation">}</span>

    <span class="token comment"># 检测当前共有多少分页若用户输入大于当前页面分页则使用当前分页</span>
    <span class="token keyword">def</span> <span class="token function">_get_maxpage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>header<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text
        html <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>req<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;pagelist&#39;]/a[8]/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># xpath找到class为pagelist的div标签下第8个a标签下的text文本</span>

    <span class="token comment"># 获取请求列表</span>
    <span class="token decorator annotation punctuation">@usetime</span>
    <span class="token keyword">def</span> <span class="token function">request</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
                req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&#39;6-0-0-0-0-{}.html&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>header<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
                                   verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;正在爬取第%d页的数据&#39;</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>
                <span class="token keyword">if</span> req<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                    bs <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>req<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
                    <span class="token keyword">for</span> _<span class="token punctuation">,</span> n <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;video&#39;</span><span class="token punctuation">,</span> src<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                        <span class="token string">&#39;class&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrollLoading&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># bs找到所有video、以及class为scrollLoading的img标签</span>
                        self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>put<span class="token punctuation">(</span>
                            <span class="token punctuation">{</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;http:&#39;</span> <span class="token operator">+</span> _<span class="token punctuation">[</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> n<span class="token punctuation">[</span><span class="token string">&#39;alt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment"># 将每个视频组成字典形式放入队列中，{url:视频url,name:视频的名字)}</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
                <span class="token keyword">pass</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;共有{}条视频需要下载！&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>qsize<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 计算队列的长度及存储多少视频字典</span>

    <span class="token comment"># 进行下载</span>
    <span class="token decorator annotation punctuation">@usetime</span>
    <span class="token keyword">def</span> <span class="token function">download</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token operator">=</span>os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 默认下载路径为当前文件夹下</span>
        <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 判断如果队列不为空进行下载</span>
            data <span class="token operator">=</span> self<span class="token punctuation">.</span>que<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 从队列中取出视频字典</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>header<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> req<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 如果用户设置path不存在，则创建该path</span>
                        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token comment"># 如果请求失败，等待2秒重新下载，感觉没用，继续完善</span>
                    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
                    req2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>header<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> req2<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;+&#39;</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>
                        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>req<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        self<span class="token punctuation">.</span>fail<span class="token punctuation">.</span>put<span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># 将失败的字典存入fail队列中</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&#39;\\t&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;下载失败！&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
                <span class="token keyword">continue</span>

    <span class="token comment"># 控制线程，进行工作</span>
    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        t1 <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>request<span class="token punctuation">)</span>  <span class="token comment"># request线程，进行生产者任务</span>
        t1<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 线程启动</span>
        t1<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 等待其他线程结束，再结束线程</span>
        thread_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>thread<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 创建多个download线程</span>
            t <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>download<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;D:\\\\video&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            thread_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
        <span class="token keyword">for</span> t <span class="token keyword">in</span> thread_list<span class="token punctuation">:</span>
            t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    a <span class="token operator">=</span> Baotu<span class="token punctuation">(</span>max_page<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> thread<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># D:\\video</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","python-baotu.html.vue"]]);export{k as default};
