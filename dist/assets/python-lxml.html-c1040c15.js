import{_ as e,W as o,X as l,Y as a,Z as t,$ as n,a0 as p,D as r}from"./framework-f64bc974.js";const i={},d=p(`<h1 id="lxml入门" tabindex="-1"><a class="header-anchor" href="#lxml入门" aria-hidden="true">#</a> lxml入门</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>lxml 是一个流行的解析库，使用Xpath语法</p><h2 id="_2-xpath常用语法" tabindex="-1"><a class="header-anchor" href="#_2-xpath常用语法" aria-hidden="true">#</a> 2. Xpath常用语法</h2><p>XPath 使用路径表达式在 XML 文档中选取节点。节点是通过沿着路径或者 step 来选取的。</p><h3 id="_2-1-选取节点" tabindex="-1"><a class="header-anchor" href="#_2-1-选取节点" aria-hidden="true">#</a> 2.1 选取节点</h3><p>下面列出了最有用的路径表达式：</p><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点。</td></tr><tr><td>/</td><td>从根节点选取。</td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td>.</td><td>选取当前节点。</td></tr><tr><td>..</td><td>选取当前节点的父节点。</td></tr><tr><td>@</td><td>选取属性。</td></tr></tbody></table><p>XPath 通配符可用来选取未知的 XML 元素。</p><table><thead><tr><th>通配符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配任何元素节点。</td></tr><tr><td>@*</td><td>匹配任何属性节点。</td></tr><tr><td>node()</td><td>匹配任何类型的节点。</td></tr></tbody></table><p>通过在路径表达式中使用“|”运算符，可以选取若干个路径，“|”两边的表达式是互相独立的，并非是一个表达式下。</p><h4 id="_2-2-谓语" tabindex="-1"><a class="header-anchor" href="#_2-2-谓语" aria-hidden="true">#</a> 2.2 <strong>谓语</strong></h4><p>通过以上介绍我们基本可以进行选取节点了，但是有可能选的节点有点多，那么这时候就需要用谓语了。谓语就是用来做过滤的，过滤条件均写在<code>[]</code>中。</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>/bookstore/book[1]</td><td>选取属于 bookstore 子元素的第一个 book 元素。</td></tr><tr><td>/bookstore/book[last()]</td><td>选取属于 bookstore 子元素的最后一个 book 元素。</td></tr><tr><td>/bookstore/book[last()-1]</td><td>选取属于 bookstore 子元素的倒数第二个 book 元素。</td></tr><tr><td>/bookstore/book[position()❤️]</td><td>选取最前面的两个属于 bookstore 元素的子元素的 book 元素。</td></tr><tr><td>//title[@lang]</td><td>选取所有拥有名为 lang 的属性的 title 元素。</td></tr><tr><td>//title[@lang=&#39;eng&#39;]</td><td>选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性。</td></tr><tr><td>/bookstore/book[price&gt;35.00]</td><td>选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。</td></tr><tr><td>/bookstore/book[price&gt;35.00]/title</td><td>选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。</td></tr></tbody></table><h2 id="_3-lxml用法" tabindex="-1"><a class="header-anchor" href="#_3-lxml用法" aria-hidden="true">#</a> 3. lxml用法</h2><h3 id="_3-1-初步使用" tabindex="-1"><a class="header-anchor" href="#_3-1-初步使用" aria-hidden="true">#</a> 3.1 初步使用</h3><p>利用他解析Html代码</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree
text <span class="token operator">=</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;
&lt;div&gt;
    &lt;ul&gt;
         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;
         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;
         &lt;li class=&quot;item-inactive&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;
         &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;
         &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;
     &lt;/ul&gt;
 &lt;/div&gt;
&#39;&#39;&#39;</span>
html <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
result <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>html<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 lxml 的 etree 库</li><li>利用 etree.HTML 初始化</li><li>最后将其打印出来</li></ul><p>里体现了 lxml 的一个非常实用的功能就是自动修正 html 代码，大家应该注意到了，最后一个 li 标签，其实我把尾标签删掉了，是不闭合的。不过，lxml 因为继承了 libxml2 的特性，具有自动修正 HTML 代码的功能。 所以输出结果是这样的</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&lt;</span>html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link1.html&quot;</span><span class="token operator">&gt;</span>first item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link2.html&quot;</span><span class="token operator">&gt;</span>second item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-inactive&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link3.html&quot;</span><span class="token operator">&gt;</span>third item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link4.html&quot;</span><span class="token operator">&gt;</span>fourth item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link5.html&quot;</span><span class="token operator">&gt;</span>fifth item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不仅补全了 li 标签，还添加了 body，html 标签。</p><h3 id="_3-2-文件读取" tabindex="-1"><a class="header-anchor" href="#_3-2-文件读取" aria-hidden="true">#</a> 3.2 文件读取</h3><p>除了直接读取字符串，还支持从文件读取内容。比如我们新建一个文件叫做 hello.html，内容为</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link1.html&quot;</span><span class="token operator">&gt;</span>first item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link2.html&quot;</span><span class="token operator">&gt;</span>second item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-inactive&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link3.html&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;bold&quot;</span><span class="token operator">&gt;</span>third item<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link4.html&quot;</span><span class="token operator">&gt;</span>fourth item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span>li <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;item-0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;link5.html&quot;</span><span class="token operator">&gt;</span>fifth item<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
 <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>利用 parse 方法来读取文件。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>from lxml import etree
html = etree.parse(&#39;hello.html&#39;)
result = etree.tostring(html, pretty_print=True)
print(result)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样可以得到相同的结果。</p><h3 id="_3-3-xpath-实例测试" tabindex="-1"><a class="header-anchor" href="#_3-3-xpath-实例测试" aria-hidden="true">#</a> 3.3 XPath 实例测试</h3><p>依然以上一段程序为例 （1）</p><h4 id="_3-3-1-获取所有的标签" tabindex="-1"><a class="header-anchor" href="#_3-3-1-获取所有的标签" aria-hidden="true">#</a> 3.3.1 获取所有的标签</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>from lxml import etree
html = etree.parse(&#39;hello.html&#39;)
print (&quot;type(html):     &quot;+str(type(html)))
result = html.xpath(&#39;//li&#39;)
print (&quot;result:     &quot;+str(result))
print (&quot;len(result):    &quot;+str(len(result)))
print (&quot;type(result):   &quot;+str(type(result)))
print (&quot;type(result[0]):    &quot;+str(type(result[0])))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token builtin">type</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;lxml.etree._ElementTree&#39;</span><span class="token operator">&gt;</span>
result<span class="token punctuation">:</span>     <span class="token punctuation">[</span><span class="token operator">&lt;</span>Element li at <span class="token number">0x56b8e80</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Element li at <span class="token number">0x562d6c0</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Element li at <span class="token number">0x56dab80</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Element li at <span class="token number">0x56dabc0</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Element li at <span class="token number">0x56dac00</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
<span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token number">5</span>
<span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;list&#39;</span><span class="token operator">&gt;</span>
<span class="token builtin">type</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;lxml.etree._Element&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可见，etree.parse 的类型是 ElementTree，通过调用 xpath 以后，得到了一个列表，包含了 5 个元素，每个元素都是 Element 类型</p><h4 id="_3-3-2-获取标签所有的class" tabindex="-1"><a class="header-anchor" href="#_3-3-2-获取标签所有的class" aria-hidden="true">#</a> 3.3.2 获取标签所有的class</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//li/@class&#39;)
print(result )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[&#39;item-0&#39;, &#39;item-1&#39;, &#39;item-inactive&#39;, &#39;item-1&#39;, &#39;item-0&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-3-3-获取标签下href-为link1-html-的-标签" tabindex="-1"><a class="header-anchor" href="#_3-3-3-获取标签下href-为link1-html-的-标签" aria-hidden="true">#</a> 3.3.3 获取标签下href 为link1.html 的 标签</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//li/a[@href=&quot;link1.html&quot;]&#39;)
print(result )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[&lt;Element a at 0x5587b00&gt;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-3-4-获取标签下的所有-标签" tabindex="-1"><a class="header-anchor" href="#_3-3-4-获取标签下的所有-标签" aria-hidden="true">#</a> 3.3.4 获取标签下的所有 标签</h4><p><strong>错误写法</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//li/span&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因为 / 是用来获取子元素的，这样获取得为空数组。所以要用双斜杠</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//li//span&#39;)
print(result )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[&lt;Element span at 0x5636d80&gt;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-3-5-获取最后一个href" tabindex="-1"><a class="header-anchor" href="#_3-3-5-获取最后一个href" aria-hidden="true">#</a> 3.3.5 获取最后一个href</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//li[last()]/a/@href&#39;)print result
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[&#39;link5.html&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-3-6-获取倒数第二个元素的内容" tabindex="-1"><a class="header-anchor" href="#_3-3-6-获取倒数第二个元素的内容" aria-hidden="true">#</a> 3.3.6 获取倒数第二个元素的内容</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//li[last()-1]/a&#39;)
print result[0].text

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fourth item

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-7-获取-class-为-bold-的标签名" tabindex="-1"><a class="header-anchor" href="#_3-3-7-获取-class-为-bold-的标签名" aria-hidden="true">#</a> 3.3.7 获取 class 为 bold 的标签名</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>result = html.xpath(&#39;//*[@class=&quot;bold&quot;]&#39;)
print result[0].tag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>span
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,63),c={href:"https://cuiqingcai.com/2621.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.jianshu.com/p/e084c2b2b66d",target:"_blank",rel:"noopener noreferrer"};function k(m,h){const s=r("ExternalLinkIcon");return o(),l("div",null,[d,a("p",null,[a("a",c,[t("Python 爬虫利器三之 Xpath 语法与 lxml 库的用法"),n(s)])]),a("p",null,[a("a",u,[t("lxml 学习笔记"),n(s)])])])}const g=e(i,[["render",k],["__file","python-lxml.html.vue"]]);export{g as default};
