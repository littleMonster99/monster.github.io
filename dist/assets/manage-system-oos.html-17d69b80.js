import{_ as n,W as s,X as a,a0 as t}from"./framework-f64bc974.js";const p={},e=t(`<h1 id="后台管理-oss对象存储适配" tabindex="-1"><a class="header-anchor" href="#后台管理-oss对象存储适配" aria-hidden="true">#</a> 后台管理 - OSS对象存储适配</h1><h2 id="_1-流程" tabindex="-1"><a class="header-anchor" href="#_1-流程" aria-hidden="true">#</a> 1. 流程</h2><h3 id="_1-1-通过applicationrunner-在项目启动的时候、初始化" tabindex="-1"><a class="header-anchor" href="#_1-1-通过applicationrunner-在项目启动的时候、初始化" aria-hidden="true">#</a> 1.1 通过ApplicationRunner 在项目启动的时候、初始化</h3><ol><li>从数据库中取出中存储状态正常的oos配置、并设置到redis中</li><li>通过redis 的发布订阅、通知其他服务器刷新配置</li><li>初始化OSS工厂、实例化OssClient</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceApplicationRunner</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationRunner</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ISysOssConfigService</span> ossConfigService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ApplicationArguments</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        ossConfigService<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;初始化OSS配置成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 项目启动时，初始化参数到缓存，加载配置类
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysOssConfig</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 加载OSS初始化配置</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SysOssConfig</span> config <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> configKey <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">RedisUtils</span><span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token class-name">OssConstant</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CONFIG_KEY</span><span class="token punctuation">,</span> configKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">setConfigCache</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 初始化OSS工厂</span>
        <span class="token class-name">OssFactory</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

 <span class="token doc-comment comment">/**
     * 如果操作成功 则更新缓存
     *
     * <span class="token keyword">@param</span> <span class="token parameter">flag</span>   操作状态
     * <span class="token keyword">@param</span> <span class="token parameter">config</span> 配置
     * <span class="token keyword">@return</span> 返回操作状态
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">setConfigCache</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> flag<span class="token punctuation">,</span> <span class="token class-name">SysOssConfig</span> config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">CacheUtils</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">CacheNames</span><span class="token punctuation">.</span><span class="token constant">SYS_OSS_CONFIG</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">toJsonString</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">RedisUtils</span><span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token class-name">OssConstant</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CONFIG_KEY</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msg <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;发布刷新OSS配置 =&gt; &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OssFactory</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">OssClient</span><span class="token punctuation">&gt;</span></span> <span class="token constant">CLIENT_CACHE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 初始化工厂
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;初始化OSS工厂&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RedisUtils</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">OssConstant</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_CONFIG_KEY</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> configKey <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">OssClient</span> client <span class="token operator">=</span> <span class="token function">getClient</span><span class="token punctuation">(</span>configKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 未初始化不处理</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>client <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">refresh</span><span class="token punctuation">(</span>configKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;订阅刷新OSS配置 =&gt; &quot;</span> <span class="token operator">+</span> configKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token class-name">String</span> configKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token class-name">CacheUtils</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">CacheNames</span><span class="token punctuation">.</span><span class="token constant">SYS_OSS_CONFIG</span><span class="token punctuation">,</span> configKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>json <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OssException</span><span class="token punctuation">(</span><span class="token string">&quot;系统异常, &#39;&quot;</span> <span class="token operator">+</span> configKey <span class="token operator">+</span> <span class="token string">&quot;&#39;配置信息不存在!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">OssProperties</span> properties <span class="token operator">=</span> <span class="token class-name">JsonUtils</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">OssProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">CLIENT_CACHE</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>configKey<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">OssClient</span><span class="token punctuation">(</span>configKey<span class="token punctuation">,</span> properties<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建OssClient,创建桶与响应的协议</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">OssClient</span><span class="token punctuation">(</span><span class="token class-name">String</span> configKey<span class="token punctuation">,</span> <span class="token class-name">OssProperties</span> ossProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>configKey <span class="token operator">=</span> configKey<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>properties <span class="token operator">=</span> ossProperties<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">AwsClientBuilder<span class="token punctuation">.</span>EndpointConfiguration</span> endpointConfig <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">AwsClientBuilder<span class="token punctuation">.</span>EndpointConfiguration</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> properties<span class="token punctuation">.</span><span class="token function">getRegion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">AWSCredentials</span> credentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicAWSCredentials</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getAccessKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> properties<span class="token punctuation">.</span><span class="token function">getSecretKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AWSCredentialsProvider</span> credentialsProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AWSStaticCredentialsProvider</span><span class="token punctuation">(</span>credentials<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientConfiguration</span> clientConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClientConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">OssConstant</span><span class="token punctuation">.</span><span class="token constant">IS_HTTPS</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getIsHttps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            clientConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token class-name">Protocol</span><span class="token punctuation">.</span><span class="token constant">HTTPS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            clientConfig<span class="token punctuation">.</span><span class="token function">setProtocol</span><span class="token punctuation">(</span><span class="token class-name">Protocol</span><span class="token punctuation">.</span><span class="token constant">HTTP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">AmazonS3ClientBuilder</span> build <span class="token operator">=</span> <span class="token class-name">AmazonS3Client</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">withEndpointConfiguration</span><span class="token punctuation">(</span>endpointConfig<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">withClientConfiguration</span><span class="token punctuation">(</span>clientConfig<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">withCredentials</span><span class="token punctuation">(</span>credentialsProvider<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">disableChunkedEncoding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">containsAny</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">OssConstant</span><span class="token punctuation">.</span><span class="token constant">CLOUD_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// minio 使用https限制使用域名访问 需要此配置 站点填域名</span>
            build<span class="token punctuation">.</span><span class="token function">enablePathStyleAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">=</span> build<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">createBucket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">OssException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OssException</span><span class="token punctuation">(</span><span class="token string">&quot;配置错误! 请检查系统配置:[&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createBucket</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> bucketName <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>client<span class="token punctuation">.</span><span class="token function">doesBucketExistV2</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">CreateBucketRequest</span> createBucketRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreateBucketRequest</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AccessPolicyType</span> accessPolicy <span class="token operator">=</span> <span class="token function">getAccessPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        createBucketRequest<span class="token punctuation">.</span><span class="token function">setCannedAcl</span><span class="token punctuation">(</span>accessPolicy<span class="token punctuation">.</span><span class="token function">getAcl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        client<span class="token punctuation">.</span><span class="token function">createBucket</span><span class="token punctuation">(</span>createBucketRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        client<span class="token punctuation">.</span><span class="token function">setBucketPolicy</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> <span class="token function">getPolicy</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">,</span> accessPolicy<span class="token punctuation">.</span><span class="token function">getPolicyType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OssException</span><span class="token punctuation">(</span><span class="token string">&quot;创建Bucket失败, 请核对配置信息:[&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * 获取当前桶权限类型
     *
     * <span class="token keyword">@return</span> 当前桶权限类型code
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">AccessPolicyType</span> <span class="token function">getAccessPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">AccessPolicyType</span><span class="token punctuation">.</span><span class="token function">getByType</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getAccessPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getPolicy</span><span class="token punctuation">(</span><span class="token class-name">String</span> bucketName<span class="token punctuation">,</span> <span class="token class-name">PolicyType</span> policyType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;{\\n\\&quot;Statement\\&quot;: [\\n{\\n\\&quot;Action\\&quot;: [\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>policyType <span class="token operator">==</span> <span class="token class-name">PolicyType</span><span class="token punctuation">.</span><span class="token constant">WRITE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;s3:GetBucketLocation\\&quot;,\\n\\&quot;s3:ListBucketMultipartUploads\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>policyType <span class="token operator">==</span> <span class="token class-name">PolicyType</span><span class="token punctuation">.</span><span class="token constant">READ_WRITE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;s3:GetBucketLocation\\&quot;,\\n\\&quot;s3:ListBucket\\&quot;,\\n\\&quot;s3:ListBucketMultipartUploads\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;s3:GetBucketLocation\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;],\\n\\&quot;Effect\\&quot;: \\&quot;Allow\\&quot;,\\n\\&quot;Principal\\&quot;: \\&quot;*\\&quot;,\\n\\&quot;Resource\\&quot;: \\&quot;arn:aws:s3:::&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;\\n},\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>policyType <span class="token operator">==</span> <span class="token class-name">PolicyType</span><span class="token punctuation">.</span><span class="token constant">READ</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;{\\n\\&quot;Action\\&quot;: [\\n\\&quot;s3:ListBucket\\&quot;\\n],\\n\\&quot;Effect\\&quot;: \\&quot;Deny\\&quot;,\\n\\&quot;Principal\\&quot;: \\&quot;*\\&quot;,\\n\\&quot;Resource\\&quot;: \\&quot;arn:aws:s3:::&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;\\n},\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;{\\n\\&quot;Action\\&quot;: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>policyType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token constant">WRITE</span><span class="token operator">:</span>
                builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;[\\n\\&quot;s3:AbortMultipartUpload\\&quot;,\\n\\&quot;s3:DeleteObject\\&quot;,\\n\\&quot;s3:ListMultipartUploadParts\\&quot;,\\n\\&quot;s3:PutObject\\&quot;\\n],\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token constant">READ_WRITE</span><span class="token operator">:</span>
                builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;[\\n\\&quot;s3:AbortMultipartUpload\\&quot;,\\n\\&quot;s3:DeleteObject\\&quot;,\\n\\&quot;s3:GetObject\\&quot;,\\n\\&quot;s3:ListMultipartUploadParts\\&quot;,\\n\\&quot;s3:PutObject\\&quot;\\n],\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;s3:GetObject\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\&quot;Effect\\&quot;: \\&quot;Allow\\&quot;,\\n\\&quot;Principal\\&quot;: \\&quot;*\\&quot;,\\n\\&quot;Resource\\&quot;: \\&quot;arn:aws:s3:::&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;/*\\&quot;\\n}\\n],\\n\\&quot;Version\\&quot;: \\&quot;2012-10-17\\&quot;\\n}\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-上传文件" tabindex="-1"><a class="header-anchor" href="#_1-2-上传文件" aria-hidden="true">#</a> 1.2 上传文件</h3><ol><li>上传oss</li><li>保存文件信息到数据库</li><li>返回文件简单VO</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 文件服务
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RemoteFileService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 上传文件
     *
     * <span class="token keyword">@param</span> <span class="token parameter">file</span> 文件信息
     * <span class="token keyword">@return</span> 结果
     */</span>
    <span class="token class-name">SysFile</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> originalFilename<span class="token punctuation">,</span> <span class="token class-name">String</span> contentType<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> file<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServiceException</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@DubboService</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RemoteFileServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">RemoteFileService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SysOssMapper</span> sysOssMapper<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 文件上传请求
     */</span>
    <span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">SysFile</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> originalFilename<span class="token punctuation">,</span> <span class="token class-name">String</span> contentType<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> file<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServiceException</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> suffix <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">,</span> originalFilename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> originalFilename<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">OssClient</span> storage <span class="token operator">=</span> <span class="token class-name">OssFactory</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">UploadResult</span> uploadResult <span class="token operator">=</span> storage<span class="token punctuation">.</span><span class="token function">uploadSuffix</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> suffix<span class="token punctuation">,</span> contentType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 保存文件信息</span>
            <span class="token class-name">SysOss</span> oss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysOss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oss<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oss<span class="token punctuation">.</span><span class="token function">setFileSuffix</span><span class="token punctuation">(</span>suffix<span class="token punctuation">)</span><span class="token punctuation">;</span>
            oss<span class="token punctuation">.</span><span class="token function">setFileName</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            oss<span class="token punctuation">.</span><span class="token function">setOriginalName</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>
            oss<span class="token punctuation">.</span><span class="token function">setService</span><span class="token punctuation">(</span>storage<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sysOssMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>oss<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SysFile</span> sysFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sysFile<span class="token punctuation">.</span><span class="token function">setOssId</span><span class="token punctuation">(</span>oss<span class="token punctuation">.</span><span class="token function">getOssId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sysFile<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">.</span><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sysFile<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>uploadResult<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> sysFile<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;上传文件失败&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token string">&quot;上传文件失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-查询资源" tabindex="-1"><a class="header-anchor" href="#_1-3-查询资源" aria-hidden="true">#</a> 1.3 查询资源</h3><p>如果是私有资源、需要对资源设置临时访问权限</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">TableDataInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysOssVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryPageList</span><span class="token punctuation">(</span><span class="token class-name">SysOssBo</span> bo<span class="token punctuation">,</span> <span class="token class-name">PageQuery</span> pageQuery<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysOss</span><span class="token punctuation">&gt;</span></span> lqw <span class="token operator">=</span> <span class="token function">buildQueryWrapper</span><span class="token punctuation">(</span>bo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysOssVo</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> baseMapper<span class="token punctuation">.</span><span class="token function">selectVoPage</span><span class="token punctuation">(</span>pageQuery<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lqw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysOssVo</span><span class="token punctuation">&gt;</span></span> filterResult <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">matchingUrl</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">setRecords</span><span class="token punctuation">(</span>filterResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">TableDataInfo</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 匹配Url
 *
 * <span class="token keyword">@param</span> <span class="token parameter">oss</span> OSS对象
 * <span class="token keyword">@return</span> oss 匹配Url的OSS对象
 */</span>
<span class="token keyword">private</span> <span class="token class-name">SysOssVo</span> <span class="token function">matchingUrl</span><span class="token punctuation">(</span><span class="token class-name">SysOssVo</span> oss<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">OssClient</span> storage <span class="token operator">=</span> <span class="token class-name">OssFactory</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span>oss<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 仅修改桶类型为 private 的URL，临时URL时长为120s</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">AccessPolicyType</span><span class="token punctuation">.</span><span class="token constant">PRIVATE</span> <span class="token operator">==</span> storage<span class="token punctuation">.</span><span class="token function">getAccessPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oss<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>storage<span class="token punctuation">.</span><span class="token function">getPrivateUrl</span><span class="token punctuation">(</span>oss<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> oss<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPrivateUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> objectKey<span class="token punctuation">,</span> <span class="token class-name">Integer</span> second<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">GeneratePresignedUrlRequest</span> generatePresignedUrlRequest <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">GeneratePresignedUrlRequest</span><span class="token punctuation">(</span>properties<span class="token punctuation">.</span><span class="token function">getBucketName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> objectKey<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">withMethod</span><span class="token punctuation">(</span><span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">withExpiration</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1000L</span> <span class="token operator">*</span> second<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">URL</span> url <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">generatePresignedUrl</span><span class="token punctuation">(</span>generatePresignedUrlRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> url<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","manage-system-oos.html.vue"]]);export{k as default};
