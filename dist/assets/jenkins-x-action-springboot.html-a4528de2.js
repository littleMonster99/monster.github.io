import{_ as t,W as l,X as p,Y as n,Z as s,$ as e,a0 as i,D as o}from"./framework-f64bc974.js";const c={},r=i('<h1 id="jenkins打包部署springboot应用" tabindex="-1"><a class="header-anchor" href="#jenkins打包部署springboot应用" aria-hidden="true">#</a> Jenkins打包部署SpringBoot应用</h1><blockquote><p>跟原文的主要区别是，他用docker部署，我是传统的文件上传形式，命令执行</p></blockquote><h2 id="_1-准备项目" tabindex="-1"><a class="header-anchor" href="#_1-准备项目" aria-hidden="true">#</a> 1. 准备项目</h2><blockquote><p>这里我们使用<code>mall-learning</code>项目中的<code>mall-tiny-jenkins</code>模块代码来演示下如何使Jenkins一键打包部署SpringBoot应用。</p></blockquote>',4),u=n("code",null,"mall-tiny-jenkins",-1),d={href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmacrozheng%2Fmall-learning%2Ftree%2Fmaster%2Fmall-tiny-jenkins",target:"_blank",rel:"noopener noreferrer"},g=n("li",null,[n("p",null,"将mall-tiny-jenkins 上传到我们自己的gitlab 或者github 等")],-1),m=n("li",null,[n("p",null,"上传完成后Gitlab中的展示效果如下："),n("p",null,"我这里简单上传到gitee 做测试")],-1),k=i('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915191550138.png" alt="image-20210915191550138" tabindex="0" loading="lazy"><figcaption>image-20210915191550138</figcaption></figure><h2 id="_2-补充插件-publish-over-ssh" tabindex="-1"><a class="header-anchor" href="#_2-补充插件-publish-over-ssh" aria-hidden="true">#</a> 2. 补充插件 Publish Over SSH</h2><h3 id="_2-1-背景" tabindex="-1"><a class="header-anchor" href="#_2-1-背景" aria-hidden="true">#</a> 2.1 背景</h3><p>我们经常需要打包完后，将文件上传到服务器。但是</p><p>Jenkins配置任务默认是无 send files execute commands over SSH 的。</p><h3 id="_2-2-解决" tabindex="-1"><a class="header-anchor" href="#_2-2-解决" aria-hidden="true">#</a> 2.2 解决</h3><p>安装插件 Publish Over SSH</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915201704009.png" alt="image-20210915201704009" tabindex="0" loading="lazy"><figcaption>image-20210915201704009</figcaption></figure><h3 id="_2-3-配置-ssh-servers" tabindex="-1"><a class="header-anchor" href="#_2-3-配置-ssh-servers" aria-hidden="true">#</a> 2.3 配置 SSH Servers</h3><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915202547951.png" alt="image-20210915202547951" tabindex="0" loading="lazy"><figcaption>image-20210915202547951</figcaption></figure><p>最下面设置</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915202923163.png" alt="image-20210915202923163" tabindex="0" loading="lazy"><figcaption>image-20210915202923163</figcaption></figure><h3 id="_2-4-测试连接" tabindex="-1"><a class="header-anchor" href="#_2-4-测试连接" aria-hidden="true">#</a> 2.4 测试连接</h3><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915204217543.png" alt="image-20210915204217543" tabindex="0" loading="lazy"><figcaption>image-20210915204217543</figcaption></figure><h2 id="_3-脚本设置" tabindex="-1"><a class="header-anchor" href="#_3-脚本设置" aria-hidden="true">#</a> 3. 脚本设置</h2>',15),b={href:"http://deploy.sh",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token comment"># author ygn</span>
<span class="token comment"># ./deploy.sh start 启动</span>
<span class="token comment"># ./deploy.sh stop 停止</span>
<span class="token comment"># ./deploy.sh restart 重启</span>
<span class="token comment"># ./deploy.sh status 状态</span>
<span class="token assign-left variable">AppName</span><span class="token operator">=</span>mall-tiny-jenkins-1.0-SNAPSHOT.jar

<span class="token comment"># JVM参数</span>
<span class="token assign-left variable">JVM_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Dname=<span class="token variable">$AppName</span>  -Duser.timezone=Asia/Shanghai -Xms512M -Xmx512M -XX:PermSize=256M -XX:MaxPermSize=512M -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDateStamps  -XX:+PrintGCDetails -XX:NewRatio=1 -XX:SurvivorRatio=30 -XX:+UseParallelGC -XX:+UseParallelOldGC&quot;</span>
<span class="token assign-left variable">APP_HOME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">LOG_PATH</span><span class="token operator">=</span><span class="token variable">$APP_HOME</span>/logs/<span class="token variable">$AppName</span>.log

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[0;31m 未输入操作名 <span class="token entity" title="\\033">\\033</span>[0m  <span class="token entity" title="\\033">\\033</span>[0;34m {start|stop|restart|status} <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$AppName</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[0;31m 未输入应用名 <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>

<span class="token keyword">function</span> <span class="token function-name function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span><span class="token operator">|</span><span class="token function">grep</span> $AppName<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>

	<span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
	    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$AppName</span> is running...&quot;</span>
	<span class="token keyword">else</span>
	  <span class="token builtin class-name">echo</span> <span class="token string">&quot;启动完整命令： nohup java -jar  <span class="token variable">$JVM_OPTS</span> <span class="token variable">$AppName</span>  &gt; /dev/null 2&gt;&amp;1 &amp;&quot;</span>
		<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span>  <span class="token variable">$JVM_OPTS</span> <span class="token variable">$AppName</span> <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
		<span class="token builtin class-name">echo</span> <span class="token string">&quot;Start <span class="token variable">$AppName</span> success...&quot;</span>
	<span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-name function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Stop <span class="token variable">$AppName</span>&quot;</span>
	
	<span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token string">&quot;&quot;</span>
	<span class="token function-name function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span><span class="token operator">|</span><span class="token function">grep</span> $AppName<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>
	<span class="token punctuation">}</span>

	query
	<span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
		<span class="token function">kill</span> <span class="token parameter variable">-TERM</span> <span class="token variable">$PID</span>
		<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$AppName</span> (pid:<span class="token variable">$PID</span>) exiting...&quot;</span>
		<span class="token keyword">while</span> <span class="token punctuation">[</span> x<span class="token string">&quot;<span class="token variable">$PID</span>&quot;</span> <span class="token operator">!=</span> x<span class="token string">&quot;&quot;</span> <span class="token punctuation">]</span>
		<span class="token keyword">do</span>
			<span class="token function">sleep</span> <span class="token number">1</span>
			query
		<span class="token keyword">done</span>
		<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$AppName</span> exited.&quot;</span>
	<span class="token keyword">else</span>
		<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$AppName</span> already stopped.&quot;</span>
	<span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-name function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    stop
    <span class="token function">sleep</span> <span class="token number">2</span>
    start
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">java</span><span class="token operator">|</span><span class="token function">grep</span> $AppName<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">\`</span></span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$PID</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$AppName</span> is running...&quot;</span>
    <span class="token keyword">else</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$AppName</span> is not running...&quot;</span>
    <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token keyword">case</span> <span class="token variable">$1</span> <span class="token keyword">in</span>
    start<span class="token punctuation">)</span>
    start<span class="token punctuation">;</span><span class="token punctuation">;</span>
    stop<span class="token punctuation">)</span>
    stop<span class="token punctuation">;</span><span class="token punctuation">;</span>
    restart<span class="token punctuation">)</span>
    restart<span class="token punctuation">;</span><span class="token punctuation">;</span>
    status<span class="token punctuation">)</span>
    status<span class="token punctuation">;</span><span class="token punctuation">;</span>
    *<span class="token punctuation">)</span>

<span class="token keyword">esac</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-在jenkins中创建执行任务" tabindex="-1"><a class="header-anchor" href="#_4-在jenkins中创建执行任务" aria-hidden="true">#</a> 4. 在Jenkins中创建执行任务</h2><h3 id="_4-1-创建新任务" tabindex="-1"><a class="header-anchor" href="#_4-1-创建新任务" aria-hidden="true">#</a> 4.1 创建新任务</h3><ul><li><p>首先我们需要新建一个任务：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915192136448.png" alt="image-20210915192136448" tabindex="0" loading="lazy"><figcaption>image-20210915192136448</figcaption></figure></li><li><p>设置任务名称后选择构建一个自由风格的软件项目：</p></li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915192225320.png" alt="image-20210915192225320" tabindex="0" loading="lazy"><figcaption>image-20210915192225320</figcaption></figure><h3 id="_4-2-配置仓库地址" tabindex="-1"><a class="header-anchor" href="#_4-2-配置仓库地址" aria-hidden="true">#</a> 4.2 配置仓库地址</h3>`,6),h={href:"https://gitee.com/zszdevelop/mall-tiny-jenkins.git",target:"_blank",rel:"noopener noreferrer"},f=n("figure",null,[n("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915194454588.png",alt:"image-20210915194454588",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210915194454588")],-1),z=n("li",null,[n("p",null,"此时需要添加一个凭据，也就是我们git仓库的账号密码：")],-1),y=i('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915192628228.png" alt="image-20210915192628228" tabindex="0" loading="lazy"><figcaption>image-20210915192628228</figcaption></figure><h3 id="_4-3-构建打包" tabindex="-1"><a class="header-anchor" href="#_4-3-构建打包" aria-hidden="true">#</a> 4.3 构建打包</h3><ul><li><p>之后我们需要添加一个构建，选择调用顶层maven目标</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915192834926.png" alt="image-20210915192834926" tabindex="0" loading="lazy"><figcaption>image-20210915192834926</figcaption></figure></li><li><p>选择我们的maven版本，然后设置maven命令和指定pom文件位置：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915193207921.png" alt="image-20210915193207921" tabindex="0" loading="lazy"><figcaption>image-20210915193207921</figcaption></figure></li></ul><h3 id="_4-4-构建后续步骤-将文件发送到服务端" tabindex="-1"><a class="header-anchor" href="#_4-4-构建后续步骤-将文件发送到服务端" aria-hidden="true">#</a> 4.4 构建后续步骤（将文件发送到服务端）</h3><ol><li>选择</li></ol><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915205201650.png" alt="image-20210915205201650" tabindex="0" loading="lazy"><figcaption>image-20210915205201650</figcaption></figure><ol start="2"><li><p>配置发送到远程的位置</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915205234136.png" alt="image-20210915205234136" tabindex="0" loading="lazy"><figcaption>image-20210915205234136</figcaption></figure></li></ol><h3 id="_4-5-构建环境-构建完后执行" tabindex="-1"><a class="header-anchor" href="#_4-5-构建环境-构建完后执行" aria-hidden="true">#</a> 4.5 构建环境（构建完后执行）</h3><ul><li><p>需要设置执行的shell命令如下：/mydata/sh/mall-tiny-jenkins.sh</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915194403946.png" alt="image-20210915194403946" tabindex="0" loading="lazy"><figcaption>image-20210915194403946</figcaption></figure></li></ul><h3 id="_4-6-执行任务" tabindex="-1"><a class="header-anchor" href="#_4-6-执行任务" aria-hidden="true">#</a> 4.6 执行任务</h3><ul><li>之后点击保存操作，我们的任务就创建完成了，在任务列表中我们可以点击运行来执行该任务；</li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915194616357.png" alt="image-20210915194616357" tabindex="0" loading="lazy"><figcaption>image-20210915194616357</figcaption></figure><h3 id="_4-7-查看控制台" tabindex="-1"><a class="header-anchor" href="#_4-7-查看控制台" aria-hidden="true">#</a> 4.7 查看控制台</h3><ul><li>我们可以通过控制台输出来查看整个任务的执行过程：</li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915194756234.png" alt="image-20210915194756234" tabindex="0" loading="lazy"><figcaption>image-20210915194756234</figcaption></figure><h3 id="_4-8-查看项目效果" tabindex="-1"><a class="header-anchor" href="#_4-8-查看项目效果" aria-hidden="true">#</a> 4.8 查看项目效果</h3><p>运行成功后，访问该地址即可查看API文档</p>',17),_={href:"http://youip:8088/swagger-ui.html",target:"_blank",rel:"noopener noreferrer"},x=n("figure",null,[n("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210915194921830.png",alt:"image-20210915194921830",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210915194921830")],-1),q=n("h2",{id:"参考文章",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),s(" 参考文章")],-1),j={href:"https://juejin.cn/post/6844904022097264648",target:"_blank",rel:"noopener noreferrer"};function w($,P){const a=o("ExternalLinkIcon");return l(),p("div",null,[r,n("ul",null,[n("li",null,[n("p",null,[u,s("项目源码地址："),n("a",d,[s("github.com/macrozheng/…"),e(a)])])]),g,m]),k,n("p",null,[s("新建脚本 "),n("a",b,[s("deploy.sh"),e(a)])]),v,n("ul",null,[n("li",null,[n("p",null,[s("然后在源码管理中添加我们的git仓库地址："),n("a",h,[s("https://gitee.com/zszdevelop/mall-tiny-jenkins.git"),e(a)])]),f]),z]),y,n("p",null,[n("a",_,[s("http://youip:8088/swagger-ui.html"),e(a)])]),x,q,n("p",null,[n("a",j,[s("使用Jenkins一键打包部署SpringBoot应用，就是这么6！"),e(a)])])])}const A=t(c,[["render",w],["__file","jenkins-x-action-springboot.html.vue"]]);export{A as default};
