import{_ as e,W as c,X as o,Y as n,Z as s,$ as t,a0 as p,D as i}from"./framework-f64bc974.js";const u={},l=p('<h1 id="minio基础-java集成minio之存储桶操作api使用详解" tabindex="-1"><a class="header-anchor" href="#minio基础-java集成minio之存储桶操作api使用详解" aria-hidden="true">#</a> Minio基础 - Java集成Minio之存储桶操作API使用详解</h1><h2 id="_1-前言" tabindex="-1"><a class="header-anchor" href="#_1-前言" aria-hidden="true">#</a> 1. 前言</h2><h3 id="_1-1-多种sdk" tabindex="-1"><a class="header-anchor" href="#_1-1-多种sdk" aria-hidden="true">#</a> 1.1 多种SDK</h3>',3),k={href:"https://docs.min.io/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/minio/minio-java",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"前端和后端都可以直接集成minio",-1),v=p(`<img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723133217901.png" alt="image-20220723133217901"><h3 id="_1-2-技术方案" tabindex="-1"><a class="header-anchor" href="#_1-2-技术方案" aria-hidden="true">#</a> 1.2 技术方案</h3><p>每个OSS的用户都会用到上传服务。Web端常见的上传方法是用户在浏览器或App端上传文件到<strong>应用服务器</strong>，<strong>应用服务器</strong>再把文件上传到OSS。具体流程如下图所示。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723133304095.png" alt="image-20220723133304095" tabindex="0" loading="lazy"><figcaption>image-20220723133304095</figcaption></figure><p>和数据直传到OSS相比，以上方法有三个缺点：</p><ul><li>上传慢：用户数据需先上传到应用服务器，之后再上传到OSS。网络传输时间比直传到OSS多一倍。如果用户数据不通过应用服务器中转，而是直传到OSS，速度将大大提升。而且OSS采用BGP带宽，能保证各地各运营商之间的传输速度。</li><li>扩展性差：如果后续用户多了，应用服务器会成为瓶颈。</li><li>费用高：需要准备多台应用服务器。由于OSS上传流量是免费的，如果数据直传到OSS，不通过应用服务器，那么将能省下几台应用服务器。</li></ul><p>目前通过Web前端技术上传文件到OSS，有三种技术方案：</p><ul><li><p>利用OSS js SDK将文件上传到OSS，也就是前端直连OSS，但是容易暴露认证信息，安全性不太高。</p></li><li><p>使用表单上传方式，将文件上传到OSS。利用OSS提供的接口临时接口，使用表单上传方式将文件上传到OSS。然后请求后端，告知上传完成，进行后续处理。</p></li><li><p>先上传到应用服务器，再请求OSS上传，这种安全性较高，可以对数据和认证进行管控，但是性能最差。</p></li></ul><h2 id="_2-集成-java-sdk" tabindex="-1"><a class="header-anchor" href="#_2-集成-java-sdk" aria-hidden="true">#</a> 2. 集成 JAVA SDK</h2><p>因为一般的非互联网项目，对性能要求不高，所以采用JAVA SDK集成MInio，然后提供接口给Web端调用就行了。</p><h3 id="_2-1-环境搭建" tabindex="-1"><a class="header-anchor" href="#_2-1-环境搭建" aria-hidden="true">#</a> 2.1 环境搭建</h3><p>首先搭建一个Maven基础工程，引入相关依赖，这里引入的是最新的8.3.1版本。还引入了okhttp的最新包，不然某些API会提示版本太低。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
  			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
  			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>minio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.squareup.okhttp3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>okhttp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.9.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-初始化客户端" tabindex="-1"><a class="header-anchor" href="#_2-2-初始化客户端" aria-hidden="true">#</a> 2.2 初始化客户端</h3><p>可以看到现在minio都是采用Builder构建者模式来构造对象，和之前有很大的区别，所以需要注意。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token comment">// 初始化客户端</span>
        <span class="token class-name">MinioClient</span> minioClient <span class="token operator">=</span>
                <span class="token class-name">MinioClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token comment">// minio服务端地址URL</span>
                        <span class="token punctuation">.</span><span class="token function">endpoint</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:9000&quot;</span><span class="token punctuation">)</span>
                        <span class="token comment">// 用户名及密码（访问密钥/密钥）</span>
                        <span class="token punctuation">.</span><span class="token function">credentials</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin123&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-存储桶基础操作" tabindex="-1"><a class="header-anchor" href="#_2-3-存储桶基础操作" aria-hidden="true">#</a> 2.3 存储桶基础操作</h3><h4 id="_2-3-1-存储桶是否存在" tabindex="-1"><a class="header-anchor" href="#_2-3-1-存储桶是否存在" aria-hidden="true">#</a> 2.3.1 存储桶是否存在</h4><p>检查存储桶是否存在。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">bucketExists</span><span class="token punctuation">(</span><span class="token class-name">BucketExistsArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token comment">// 1.存储桶是否存在</span>
    <span class="token keyword">boolean</span> found <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">bucketExists</span><span class="token punctuation">(</span><span class="token class-name">BucketExistsArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname does not exist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-2-创建存储桶" tabindex="-1"><a class="header-anchor" href="#_2-3-2-创建存储桶" aria-hidden="true">#</a> 2.3.2 创建存储桶</h4><p>创建一个启用给定区域和对象锁定功能的存储桶。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">makeBucket</span><span class="token punctuation">(</span><span class="token class-name">MakeBucketArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 2.1 my-bucketname 存储桶不存在则创建</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minioClient<span class="token punctuation">.</span><span class="token function">makeBucket</span><span class="token punctuation">(</span><span class="token class-name">MakeBucketArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname is created successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 2.2 创建存储桶my-bucketname-in-eu 并指定区域为eu-west-1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>minioClient<span class="token punctuation">.</span><span class="token function">bucketExists</span><span class="token punctuation">(</span>
            <span class="token class-name">BucketExistsArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minioClient<span class="token punctuation">.</span><span class="token function">makeBucket</span><span class="token punctuation">(</span>
                <span class="token class-name">MakeBucketArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">region</span><span class="token punctuation">(</span><span class="token string">&quot;eu-west-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu is created successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 2.3 创建存储桶 &#39;my-bucketname-in-eu-with-object-lock&#39; 区域为 &#39;eu-west-1&#39; ，</span>
    <span class="token comment">// 并且锁定对象，功能不可用</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>minioClient<span class="token punctuation">.</span><span class="token function">bucketExists</span><span class="token punctuation">(</span>
            <span class="token class-name">BucketExistsArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu-with-object-lock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minioClient<span class="token punctuation">.</span><span class="token function">makeBucket</span><span class="token punctuation">(</span>
                <span class="token class-name">MakeBucketArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu-with-object-lock&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">region</span><span class="token punctuation">(</span><span class="token string">&quot;eu-west-1&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">objectLock</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu-with-object-lock is created successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建后，就可以在控制台看到这些存储桶了，最后那个被锁定的存储桶，上传文件及删除后，发现还是会显示存在这些对象，实际磁盘上的文件并没有删除</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723134100336.png" alt="image-20220723134100336" tabindex="0" loading="lazy"><figcaption>image-20220723134100336</figcaption></figure><h4 id="_2-3-3-查询存储桶信息列表" tabindex="-1"><a class="header-anchor" href="#_2-3-3-查询存储桶信息列表" aria-hidden="true">#</a> 2.3.3 查询存储桶信息列表</h4><p>列出所有桶的桶信息。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bucket</span><span class="token punctuation">&gt;</span></span> <span class="token function">listBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 3.  存储桶信息列表。</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bucket</span><span class="token punctuation">&gt;</span></span> bucketList <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">listBuckets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Bucket</span> bucket <span class="token operator">:</span> bucketList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span><span class="token function">creationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> bucket<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印信息如下，返回的创建时间是美国时间，需要注意。 <img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723134451441.png" alt="image-20220723134451441" loading="lazy"></p><h4 id="_2-3-4-删除存储桶" tabindex="-1"><a class="header-anchor" href="#_2-3-4-删除存储桶" aria-hidden="true">#</a> 2.3.4 删除存储桶</h4><p>删除一个空桶。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeBucket</span><span class="token punctuation">(</span><span class="token class-name">RemoveBucketArgs</span> args<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 4. 删除存储桶</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minioClient<span class="token punctuation">.</span><span class="token function">removeBucket</span><span class="token punctuation">(</span><span class="token class-name">RemoveBucketArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname is removed successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname does not exist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果存储桶存在对象不为空时，删除会报错。 <img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723134556833.png" alt="image-20220723134556833" loading="lazy"></p><h3 id="_2-4-设置存储桶操作" tabindex="-1"><a class="header-anchor" href="#_2-4-设置存储桶操作" aria-hidden="true">#</a> 2.4 设置存储桶操作</h3><h4 id="_2-4-1-加密配置" tabindex="-1"><a class="header-anchor" href="#_2-4-1-加密配置" aria-hidden="true">#</a> 2.4.1 加密配置</h4><p>设置桶的加密配置，以允许在该桶中上传对象时，采用对应加密配置对数据进行加密。当前支持配置的服务端加密方式为KMS托管密钥的服务端加密(SSE-KMS)，及AES256加密。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">SseAlgorithm</span> <span class="token punctuation">{</span>
    <span class="token function">AES256</span><span class="token punctuation">(</span><span class="token string">&quot;AES256&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">AWS_KMS</span><span class="token punctuation">(</span><span class="token string">&quot;aws:kms&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置桶的加密配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketEncryption</span><span class="token punctuation">(</span><span class="token class-name">SetBucketEncryptionArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取桶的加密配置:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SseConfiguration</span> <span class="token function">getBucketEncryption</span><span class="token punctuation">(</span><span class="token class-name">GetBucketEncryptionArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>案例需要配置KMS，后续后出详细文档。</p><h4 id="_2-4-2-生命周期" tabindex="-1"><a class="header-anchor" href="#_2-4-2-生命周期" aria-hidden="true">#</a> 2.4.2 生命周期</h4><p>生命周期管理可适用于以下典型场景：</p><ul><li>周期性上传的日志文件，可能只需要保留一个星期或一个月。到期后要删除它们。</li><li>某些文档在一段时间内经常访问，但是超过一定时间后便可能不再访问了。这些文档需要在一定时间后转化为低频访问存储，归档存储或者删除。</li></ul><p>存储桶生命周期配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketLifecycle</span><span class="token punctuation">(</span><span class="token class-name">SetBucketLifecycleArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取桶的生命周期配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">LifecycleConfiguration</span> <span class="token function">getBucketLifecycle</span><span class="token punctuation">(</span><span class="token class-name">GetBucketLifecycleArgs</span> args<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 5. 生命周期</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LifecycleRule</span><span class="token punctuation">&gt;</span></span> rules <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 配置生命周期规则</span>
    rules<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">LifecycleRule</span><span class="token punctuation">(</span>
                    <span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">ENABLED</span><span class="token punctuation">,</span> <span class="token comment">// 开启状态</span>
                    <span class="token keyword">null</span><span class="token punctuation">,</span>
                    <span class="token keyword">new</span> <span class="token class-name">Expiration</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ZonedDateTime</span><span class="token punctuation">)</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">365</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 保存365天</span>
                    <span class="token keyword">new</span> <span class="token class-name">RuleFilter</span><span class="token punctuation">(</span><span class="token string">&quot;logs/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 目录配置</span>
                    <span class="token string">&quot;rule2&quot;</span><span class="token punctuation">,</span>
                    <span class="token keyword">null</span><span class="token punctuation">,</span>
                    <span class="token keyword">null</span><span class="token punctuation">,</span>
                    <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LifecycleConfiguration</span> lifecycleConfiguration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LifecycleConfiguration</span><span class="token punctuation">(</span>rules<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 添加生命周期配置</span>
    minioClient<span class="token punctuation">.</span><span class="token function">setBucketLifecycle</span><span class="token punctuation">(</span>
            <span class="token class-name">SetBucketLifecycleArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span>lifecycleConfiguration<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取配置</span>
    <span class="token class-name">LifecycleConfiguration</span> lifecycleConfiguration1111 <span class="token operator">=</span>
            minioClient<span class="token punctuation">.</span><span class="token function">getBucketLifecycle</span><span class="token punctuation">(</span>
                    <span class="token class-name">GetBucketLifecycleArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LifecycleRule</span><span class="token punctuation">&gt;</span></span> rules1 <span class="token operator">=</span> lifecycleConfiguration1111<span class="token punctuation">.</span><span class="token function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rules1<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lifecycle status is &quot;</span> <span class="token operator">+</span> rules1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lifecycle prefix is &quot;</span> <span class="token operator">+</span> rules1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Lifecycle expiration days is &quot;</span> <span class="token operator">+</span> rules1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expiration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">days</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果如下：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723135014971.png" alt="image-20220723135014971" tabindex="0" loading="lazy"><figcaption>image-20220723135014971</figcaption></figure><h4 id="_2-4-3-通知配置" tabindex="-1"><a class="header-anchor" href="#_2-4-3-通知配置" aria-hidden="true">#</a> 2.4.3 通知配置</h4><p>可以使用存储桶事件通知来监控存储桶中对象上发生的事件。</p><p>MinIO 服务器支持的各种事件类型有：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723135138733.png" alt="image-20220723135138733" tabindex="0" loading="lazy"><figcaption>image-20220723135138733</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723135150879.png" alt="image-20220723135150879" tabindex="0" loading="lazy"><figcaption>image-20220723135150879</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723135214401.png" alt="image-20220723135214401" tabindex="0" loading="lazy"><figcaption>image-20220723135214401</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723135233435.png" alt="image-20220723135233435" tabindex="0" loading="lazy"><figcaption>image-20220723135233435</figcaption></figure><p>存储桶配置通知：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketPolicy</span><span class="token punctuation">(</span><span class="token class-name">SetBucketPolicyArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取桶的通知配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">NotificationConfiguration</span> <span class="token function">getBucketNotification</span><span class="token punctuation">(</span><span class="token class-name">GetBucketNotificationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token comment">// 6. 通知配置 </span>
        <span class="token comment">// Add a new SQS configuration.</span>
        <span class="token class-name">NotificationConfiguration</span> notificationConfiguration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">QueueConfiguration</span><span class="token punctuation">&gt;</span></span> queueConfigurationList <span class="token operator">=</span> notificationConfiguration<span class="token punctuation">.</span><span class="token function">queueConfigurationList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">QueueConfiguration</span> queueConfiguration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueueConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queueConfiguration<span class="token punctuation">.</span><span class="token function">setQueue</span><span class="token punctuation">(</span><span class="token string">&quot;arn:minio:sqs::1:webhook&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EventType</span><span class="token punctuation">&gt;</span></span> eventList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">EventType</span><span class="token punctuation">.</span><span class="token constant">OBJECT_CREATED_PUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        eventList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">EventType</span><span class="token punctuation">.</span><span class="token constant">OBJECT_CREATED_COPY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queueConfiguration<span class="token punctuation">.</span><span class="token function">setEvents</span><span class="token punctuation">(</span>eventList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        queueConfiguration<span class="token punctuation">.</span><span class="token function">setPrefixRule</span><span class="token punctuation">(</span><span class="token string">&quot;images&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queueConfiguration<span class="token punctuation">.</span><span class="token function">setSuffixRule</span><span class="token punctuation">(</span><span class="token string">&quot;pg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        queueConfigurationList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>queueConfiguration<span class="token punctuation">)</span><span class="token punctuation">;</span>
        notificationConfiguration<span class="token punctuation">.</span><span class="token function">setQueueConfigurationList</span><span class="token punctuation">(</span>queueConfigurationList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Set updated notification configuration.</span>
        minioClient<span class="token punctuation">.</span><span class="token function">setBucketNotification</span><span class="token punctuation">(</span>
                <span class="token class-name">SetBucketNotificationArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span>notificationConfiguration<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bucket notification is set successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">NotificationConfiguration</span> minioClientBucketNotification <span class="token operator">=</span>
                minioClient<span class="token punctuation">.</span><span class="token function">getBucketNotification</span><span class="token punctuation">(</span>
                        <span class="token class-name">GetBucketNotificationArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>minioClientBucketNotification<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-4-4-策略配置" tabindex="-1"><a class="header-anchor" href="#_2-4-4-策略配置" aria-hidden="true">#</a> 2.4.4 策略配置</h4><p>添加存储桶策略配置。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public void setBucketPolicy(SetBucketPolicyArgs args) 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取桶的桶策略配置。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public String getBucketPolicy(GetBucketPolicyArgs args)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>内容较多，后续后出详细文档。</p><h4 id="_2-4-5-复制配置" tabindex="-1"><a class="header-anchor" href="#_2-4-5-复制配置" aria-hidden="true">#</a> 2.4.5 复制配置</h4><p>存储桶复制旨在将存储桶中的选定对象复制到目标存储桶，内容较多，后续补上</p><p>添加存储桶的复制配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketReplication</span><span class="token punctuation">(</span><span class="token class-name">SetBucketReplicationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取桶的桶复制配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ReplicationConfiguration</span> <span class="token function">getBucketReplication</span><span class="token punctuation">(</span><span class="token class-name">GetBucketReplicationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-4-6-存储桶标签" tabindex="-1"><a class="header-anchor" href="#_2-4-6-存储桶标签" aria-hidden="true">#</a> 2.4.6 存储桶标签</h4><p>当为桶添加标签时，该桶上所有请求产生的计费话单里都会带上这些标签，从而可以针对话单报表做分类筛选，进行更详细的成本分析。例如：某个应用程序在运行过程会往桶里上传数据，我们可以用应用名称作为标签，设置到被使用的桶上。在分析话单时，就可以通过应用名称的标签来分析此应用的成本。</p><p>setBucketTags可以为存储桶设置标签。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketTags</span><span class="token punctuation">(</span><span class="token class-name">SetBucketTagsArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>getBucketTags获取桶的标签。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Tags</span> <span class="token function">getBucketTags</span><span class="token punctuation">(</span><span class="token class-name">GetBucketTagsArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 1. 存储桶标签</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Project&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Project One&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jsmith&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置标签</span>
    minioClient<span class="token punctuation">.</span><span class="token function">setBucketTags</span><span class="token punctuation">(</span><span class="token class-name">SetBucketTagsArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tags</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询标签</span>
    <span class="token class-name">Tags</span> bucketTags <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getBucketTags</span><span class="token punctuation">(</span><span class="token class-name">GetBucketTagsArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bucketTags<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果： <img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723135753042.png" alt="image-20220723135753042" loading="lazy"></p><h4 id="_2-4-7-多版本设置" tabindex="-1"><a class="header-anchor" href="#_2-4-7-多版本设置" aria-hidden="true">#</a> 2.4.7 多版本设置</h4><p>若开启了多版本控制，上传对象时，OBS自动为每个对象创建唯一的版本号。上传同名的对象将以不同的版本号同时保存在OBS中。</p><p>若未开启多版本控制，向同一个文件夹中上传同名的对象时，新上传的对象将覆盖原有的对象。</p><p>某些功能（例如版本控制、对象锁定和存储桶复制）需要使用擦除编码分布式部署 MinIO。开启了版本控制后，允许在同一密钥下保留同一对象的多个版本。</p><p>设置存储桶的版本控制配置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketVersioning</span><span class="token punctuation">(</span><span class="token class-name">SetBucketVersioningArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取存储桶的版本控制配置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">VersioningConfiguration</span> <span class="token function">getBucketVersioning</span><span class="token punctuation">(</span><span class="token class-name">GetBucketVersioningArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 2. 版本配置</span>
    <span class="token comment">// &#39;my-bucketname&#39;启用版本控制</span>
    minioClient<span class="token punctuation">.</span><span class="token function">setBucketVersioning</span><span class="token punctuation">(</span>
            <span class="token class-name">SetBucketVersioningArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VersioningConfiguration</span><span class="token punctuation">(</span><span class="token class-name">VersioningConfiguration<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">ENABLED</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bucket versioning is enabled successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//  &#39;my-bucketname&#39;暂停版本控制</span>
    minioClient<span class="token punctuation">.</span><span class="token function">setBucketVersioning</span><span class="token punctuation">(</span>
            <span class="token class-name">SetBucketVersioningArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VersioningConfiguration</span><span class="token punctuation">(</span><span class="token class-name">VersioningConfiguration<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">SUSPENDED</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bucket versioning is suspended successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在控制台可以查看是否开启版本控制。 <img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723140041004.png" alt="image-20220723140041004" loading="lazy"></p><h4 id="_2-4-8-对象锁定配置" tabindex="-1"><a class="header-anchor" href="#_2-4-8-对象锁定配置" aria-hidden="true">#</a> 2.4.8 对象锁定配置</h4><p>对象锁定设置后，删除对象后，会仍然存在磁盘中。</p><p>在存储桶中设置对象锁定配置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setObjectLockConfiguration</span><span class="token punctuation">(</span><span class="token class-name">SetObjectLockConfigurationArgs</span> args<span class="token punctuation">)</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取存储桶中的对象锁配置。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ObjectLockConfiguration</span> <span class="token function">getObjectLockConfiguration</span><span class="token punctuation">(</span><span class="token class-name">GetObjectLockConfigurationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要先设置存储桶为对象锁定模式，示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// 3. 将保留模式设置为Compliance，且持续时间为100天</span>
    <span class="token comment">// 设置锁定对象的保留模式及时限</span>
    <span class="token class-name">ObjectLockConfiguration</span> config <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">ObjectLockConfiguration</span><span class="token punctuation">(</span><span class="token class-name">RetentionMode</span><span class="token punctuation">.</span><span class="token constant">COMPLIANCE</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RetentionDurationDays</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    minioClient<span class="token punctuation">.</span><span class="token function">setObjectLockConfiguration</span><span class="token punctuation">(</span>
            <span class="token class-name">SetObjectLockConfigurationArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname-in-eu-with-object-lock&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;object-lock configuration is set successfully&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 获取锁定配置</span>
    <span class="token class-name">ObjectLockConfiguration</span> objectLockConfiguration <span class="token operator">=</span>
            minioClient<span class="token punctuation">.</span><span class="token function">getObjectLockConfiguration</span><span class="token punctuation">(</span>
                    <span class="token class-name">GetObjectLockConfigurationArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-lock-enabled-bucketname&quot;</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Object-lock configuration of bucket&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Mode: &quot;</span> <span class="token operator">+</span> objectLockConfiguration<span class="token punctuation">.</span><span class="token function">mode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Duration: &quot;</span> <span class="token operator">+</span> objectLockConfiguration<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以在控制台查看是否开启对象锁定，及保留模式设置的策略及保留天数。 <img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723140224863.png" alt="image-20220723140224863" loading="lazy"></p><h4 id="_2-4-9-删除配置" tabindex="-1"><a class="header-anchor" href="#_2-4-9-删除配置" aria-hidden="true">#</a> 2.4.9 删除配置</h4><p>minio提供了一些列的delete方法用于删除配置，比较简单，就不距离说明了。</p><ol><li>删除桶的加密配置</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteBucketEncryption</span><span class="token punctuation">(</span><span class="token class-name">DeleteBucketEncryptionArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>删除存储桶的生命周期配置</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteBucketLifecycle</span><span class="token punctuation">(</span><span class="token class-name">DeleteBucketLifecycleArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>删除桶的标签</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteBucketTags</span><span class="token punctuation">(</span><span class="token class-name">DeleteBucketTagsArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>删除桶的桶策略配置</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteBucketPolicy</span><span class="token punctuation">(</span><span class="token class-name">DeleteBucketPolicyArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>删除存储桶的存储桶复制配置</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">deleteBucketReplication</span><span class="token punctuation">(</span><span class="token class-name">DeleteBucketReplicationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>删除桶的通知配置</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteBucketNotification</span><span class="token punctuation">(</span><span class="token class-name">DeleteBucketNotificationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>删除存储桶中的对象锁定配置</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteObjectLockConfiguration</span><span class="token punctuation">(</span><span class="token class-name">DeleteObjectLockConfigurationArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,132),m={href:"https://yunyanchengyu.blog.csdn.net/article/details/120841843",target:"_blank",rel:"noopener noreferrer"};function g(b,f){const a=i("ExternalLinkIcon");return c(),o("div",null,[l,n("p",null,[n("a",k,[s("官方文档"),t(a)]),n("a",d,[s("minio-java"),t(a)]),s(" Minio提供了多种语言的SDK，比如java、go、python等。JAVA开发平台可以选择JS和java SDK，也就是"),r,s("。")]),v,n("p",null,[n("a",m,[s("JAVA集成Minio之存储桶操作API使用详解"),t(a)])])])}const y=e(u,[["render",g],["__file","minio-bucket-api.html.vue"]]);export{y as default};
