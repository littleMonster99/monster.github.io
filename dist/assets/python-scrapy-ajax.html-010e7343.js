import{_ as i,W as o,X as p,Y as n,Z as a,$ as e,a0 as t,D as l}from"./framework-f64bc974.js";const c={},r=t('<h1 id="scrapy入门-四-抓取ajax异步加载网页" tabindex="-1"><a class="header-anchor" href="#scrapy入门-四-抓取ajax异步加载网页" aria-hidden="true">#</a> Scrapy入门（四）-抓取AJAX异步加载网页</h1><h2 id="_1-什么是ajax" tabindex="-1"><a class="header-anchor" href="#_1-什么是ajax" aria-hidden="true">#</a> 1. 什么是AJAX?</h2><blockquote><p>AJAX即“Asynchronous Javascript And XML”（异步JavaScript和XML），是指一种创建交互式网页应用的网页开发技术。</p><p>AJAX = 异步 JavaScript和XML（标准通用标记语言的子集）。</p><p>AJAX 是一种用于创建快速动态网页的技术。</p><p>通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p></blockquote><h2 id="_2-两个chrome插件" tabindex="-1"><a class="header-anchor" href="#_2-两个chrome插件" aria-hidden="true">#</a> 2. 两个Chrome插件</h2>',4),u=n("p",null,"Toggle JavaScript",-1),d=n("p",null,"这个插件可以帮助我们快速直观地检测网页里哪些信息是通过AJAX异步加载而来的",-1),g={href:"https://link.zhihu.com/?target=https%3A//chrome.google.com/webstore/detail/toggle-javascript/cidlcjdalomndpeagkjpnefhljffbnlo%3Futm_source%3Dchrome-app-launcher-info-dialog",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,"JSON-handle",-1),k={href:"https://link.zhihu.com/?target=https%3A//chrome.google.com/webstore/detail/json-handle/iahnhfdhidomcpggpaimmmahffihkfnj",target:"_blank",rel:"noopener noreferrer"},h=n("h2",{id:"_3-分析过程-分析页面是否采用ajax",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-分析过程-分析页面是否采用ajax","aria-hidden":"true"},"#"),a(" 3. 分析过程（分析页面是否采用AJAX）")],-1),b={href:"https://link.zhihu.com/?target=https%3A//movie.douban.com/typerank%3Ftype_name%3D%E5%8A%A8%E4%BD%9C%26type%3D5%26interval_id%3D100%3A90%26action%3D",target:"_blank",rel:"noopener noreferrer"},v=t(`<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311151244551.png" alt="image-20210311151244551" tabindex="0" loading="lazy"><figcaption>image-20210311151244551</figcaption></figure><ul><li><p>方案1：</p><p>如果网络慢，会看到影片列表在别的页面显示后才慢慢展示出来，试着把界面往下滑会不断有新的电影信息更新出来。 遇到这种情况初步就可以认定这个页面是采用AJAX异步加载的</p></li><li><p>方案2：</p><p>右键查看网页源码来鉴别。比如说你右键查看源码ctrl+f搜索这个杀手不太冷这几个字，你会发现源码里没有。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311152003444.png" alt="image-20210311152003444" tabindex="0" loading="lazy"><figcaption>image-20210311152003444</figcaption></figure></li><li><p>方案3：</p><p>方案1和2，虽然能用，但是都不太方便，还记得上面推荐的那个chrome插件Toggle JavaScript吗？</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311152349107.png" alt="image-20210311152349107" tabindex="0" loading="lazy"><figcaption>image-20210311152349107</figcaption></figure><p>安好这个插件它就会出现在chrome浏览器的右边，试着轻轻点一下。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311152426689.png" alt="image-20210311152426689" tabindex="0" loading="lazy"><figcaption>image-20210311152426689</figcaption></figure><p>刚才的电影信息都不见了！还记得AJAX的介绍吗？AJAX = 异步 JavaScript和XML。当我们点击了插件就代表这个我们封禁了JavaScript,这个页面里的JavaScript代码无法执行，那么通过AJAX异步加载而来的信息当然就无法出现了。通过这种方法我们能快速精确地知道哪些信息是异步加载而来的。</p></li></ul><h2 id="_4-如何抓取ajax异步加载页面" tabindex="-1"><a class="header-anchor" href="#_4-如何抓取ajax异步加载页面" aria-hidden="true">#</a> 4. 如何抓取AJAX异步加载页面</h2><p>对于这种网页我们一般会采用两种方法：</p><ol><li>通过抓包找到AJAX异步加载的请求地址；</li><li>通过使用PhantomJS等无头浏览器执行JS代码后再对网页进行抓取。</li></ol><p>通常情况下我会采用第一种方法，因为使用无头浏览器会大大降低抓取效率，而且第一种方法得到的数据格式往往以Json为主，非常干净。在这里我只讲解第一种方法，第二种方法作为爬虫的终极武器我会在后续的教程中进行讲解。 回到我们需要抓取的页面，还记得我说过页面的一个细节吗，下拉更新。进入页面后我们按F12打开chrome浏览器的开发者工具选择Network，然后实现一次下拉更新。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311152726896.png" alt="image-20210311152726896" tabindex="0" loading="lazy"><figcaption>image-20210311152726896</figcaption></figure><p>你会在Network里发现一个Response为Json格式的请求，仔细看看Json里的内容你会明白这些都是网页上显示的电影信息。右键该请求地址选择Open Link in New Tab,如果你装了JSON-handle插件你会以下面这种更友好的方式查看这个Json串。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311152753926.png" alt="image-20210311152753926" tabindex="0" loading="lazy"><figcaption>image-20210311152753926</figcaption></figure><p>接着再让我们看一该请求的Header信息</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311152818193.png" alt="image-20210311152818193" tabindex="0" loading="lazy"><figcaption>image-20210311152818193</figcaption></figure><p>首先我们可以看出这是一个get请求，多看几个下拉请求的地址后你会发现地中的start=xxx在不断变化，每次增加20。所以我们只用更改这个参数就可以实现翻页不断获取新数据</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># @Time     : 2017/4/9 14:32</span>
<span class="token comment"># @Author   : woodenrobot</span>


<span class="token keyword">import</span> re
<span class="token keyword">import</span> json


<span class="token keyword">from</span> scrapy <span class="token keyword">import</span> Request
<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>spiders <span class="token keyword">import</span> Spider
<span class="token keyword">from</span> scrapyspider<span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanMovieItem


<span class="token keyword">class</span> <span class="token class-name">DoubanAJAXSpider</span><span class="token punctuation">(</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> <span class="token string">&#39;douban_ajax&#39;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">def</span> <span class="token function">start_requests</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string">&#39;https://movie.douban.com/j/chart/top_list?type=5&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20&#39;</span>
        <span class="token keyword">yield</span> Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
        datas <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
        item <span class="token operator">=</span> DoubanMovieItem<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> datas<span class="token punctuation">:</span>
            <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span>
                item<span class="token punctuation">[</span><span class="token string">&#39;ranking&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;rank&#39;</span><span class="token punctuation">]</span>
                item<span class="token punctuation">[</span><span class="token string">&#39;movie_name&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span>
                item<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;score&#39;</span><span class="token punctuation">]</span>
                item<span class="token punctuation">[</span><span class="token string">&#39;score_num&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;vote_count&#39;</span><span class="token punctuation">]</span>
                <span class="token keyword">yield</span> item

            <span class="token comment"># 如果datas存在数据则对下一页进行采集</span>
            page_num <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;start=(\\d+)&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            page_num <span class="token operator">=</span> <span class="token string">&#39;start=&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>page_num<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">)</span>
            next_url <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;start=\\d+&#39;</span><span class="token punctuation">,</span> page_num<span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
            <span class="token keyword">yield</span> Request<span class="token punctuation">(</span>next_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>self<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在Scrapy工程文件的spiders里写好爬虫文件后在settings.py所在的目录下打开终端运行以下代码就能输出相应的电影数据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy crawl douban_ajax <span class="token operator">-</span>o douban_movie<span class="token punctuation">.</span>csv
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-更好的查看json" tabindex="-1"><a class="header-anchor" href="#_5-更好的查看json" aria-hidden="true">#</a> 5. 更好的查看json</h2><ol><li><p>点击JSON-handle 查看</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311153418508.png" alt="image-20210311153418508" tabindex="0" loading="lazy"><figcaption>image-20210311153418508</figcaption></figure></li><li><p>将JSON文本复制进来，点击确定</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311153308124.png" alt="image-20210311153308124" tabindex="0" loading="lazy"><figcaption>image-20210311153308124</figcaption></figure></li><li><p>查看结果</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210311153405800.png" alt="image-20210311153405800" tabindex="0" loading="lazy"><figcaption>image-20210311153405800</figcaption></figure></li></ol><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,18),f={href:"https://zhuanlan.zhihu.com/p/26257790",target:"_blank",rel:"noopener noreferrer"};function _(y,z){const s=l("ExternalLinkIcon");return o(),p("div",null,[r,n("ul",null,[n("li",null,[u,d,n("p",null,[a("chrome商店下载地址："),n("a",g,[a("https://chrome.google.com/webstore/detail/toggle-javascript/cidlcjdalomndpeagkjpnefhljffbnlo?utm_source=chrome-app-launcher-info-dialog"),e(s)])])]),n("li",null,[m,n("p",null,[a("这个插件可以帮我们格式化Json串,从而让我们以一个更友好的方式查看Json内的信息。 chrome商店下载地址："),n("a",k,[a("https://chrome.google.com/webstore/detail/json-handle/iahnhfdhidomcpggpaimmmahffihkfnj"),e(s)])])])]),h,n("p",null,[a("首先我们打"),n("a",b,[a("开豆瓣电影分类排行榜 - 动作片"),e(s)]),a("栏目。")]),v,n("p",null,[n("a",f,[a("Scrapy爬虫框架教程（四）-- 抓取AJAX异步加载网页"),e(s)])])])}const x=i(c,[["render",_],["__file","python-scrapy-ajax.html.vue"]]);export{x as default};
