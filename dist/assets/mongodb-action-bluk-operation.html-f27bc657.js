import{_ as p,W as o,X as e,Y as n,Z as s,$ as t,a0 as c,D as l}from"./framework-f64bc974.js";const u={},i=n("h1",{id:"springmongotemplate批量操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springmongotemplate批量操作","aria-hidden":"true"},"#"),s(" SpringMongoTemplate批量操作")],-1),k=n("h2",{id:"_1-简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-简介","aria-hidden":"true"},"#"),s(" 1. 简介")],-1),r={href:"https://so.csdn.net/so/search?q=MongoDB&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},d=c(`<h2 id="_2-批量插入" tabindex="-1"><a class="header-anchor" href="#_2-批量插入" aria-hidden="true">#</a> 2. 批量插入</h2><h3 id="_2-1-方式一-mongotemplate-insert" tabindex="-1"><a class="header-anchor" href="#_2-1-方式一-mongotemplate-insert" aria-hidden="true">#</a> 2.1 方式一：mongoTemplate.insert</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 批量新增博客
     *
     * <span class="token keyword">@param</span> <span class="token parameter">addBatchParam</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ApiResult</span> <span class="token function">addBatch</span><span class="token punctuation">(</span><span class="token class-name">BlogAddBatchParam</span> addBatchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> blogEntityList <span class="token operator">=</span> addBatchParam<span class="token punctuation">.</span><span class="token function">getBlogList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>blogAddParam <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">BlogEntity</span> blogEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>blogAddParam<span class="token punctuation">,</span> blogEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> blogEntity<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        mongoTemplate<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>blogEntityList<span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ApiResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-方式二-bulkops" tabindex="-1"><a class="header-anchor" href="#_2-2-方式二-bulkops" aria-hidden="true">#</a> 2.2 方式二：bulkOps</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BulkOperations</span> operations <span class="token operator">=</span> mongoTemplate<span class="token punctuation">.</span><span class="token function">bulkOps</span><span class="token punctuation">(</span><span class="token class-name">BulkOperations<span class="token punctuation">.</span>BulkMode</span><span class="token punctuation">.</span><span class="token constant">UNORDERED</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>
operations<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>insertDataList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BulkWriteResult</span> result <span class="token operator">=</span> operations<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-批量更新" tabindex="-1"><a class="header-anchor" href="#_3-批量更新" aria-hidden="true">#</a> 3. 批量更新</h2><h3 id="_3-1-方式一-bulkops" tabindex="-1"><a class="header-anchor" href="#_3-1-方式一-bulkops" aria-hidden="true">#</a> 3.1 方式一：bulkOps</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 批量更新博客
     *
     * <span class="token keyword">@param</span> <span class="token parameter">updateBatchParam</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ApiResult</span> <span class="token function">updateBatch</span><span class="token punctuation">(</span><span class="token class-name">BlogUpdateBatchParam</span> updateBatchParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> blogEntityList <span class="token operator">=</span> updateBatchParam<span class="token punctuation">.</span><span class="token function">getBlogList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>blogUpdateParam <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">BlogEntity</span> blogEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>blogUpdateParam<span class="token punctuation">,</span> blogEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> blogEntity<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BulkOperations</span> operations <span class="token operator">=</span> mongoTemplate<span class="token punctuation">.</span><span class="token function">bulkOps</span><span class="token punctuation">(</span><span class="token class-name">BulkOperations<span class="token punctuation">.</span>BulkMode</span><span class="token punctuation">.</span><span class="token constant">UNORDERED</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">BlogEntity</span> blogEntity <span class="token operator">:</span> blogEntityList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Update</span> update <span class="token operator">=</span> <span class="token class-name">Update</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;author&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getAuthor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;countRead&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getCountRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;countLike&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getCountLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;clientTimestamp&quot;</span><span class="token punctuation">,</span> blogEntity<span class="token punctuation">.</span><span class="token function">getClientTimestamp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            operations<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token class-name">Query</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">Criteria</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>blogEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        operations<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ApiResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量更新的操作稍微复杂一点，需要针对每个更新的属性进行赋值。</p><h2 id="_4-批量插入或更新" tabindex="-1"><a class="header-anchor" href="#_4-批量插入或更新" aria-hidden="true">#</a> 4. 批量插入或更新</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span> dataList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>；
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pair</span><span class="token punctuation">&lt;</span><span class="token class-name">Query</span><span class="token punctuation">,</span> <span class="token class-name">Update</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> updateList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>dataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BulkOperations</span> operations <span class="token operator">=</span> mongoTemplate<span class="token punctuation">.</span><span class="token function">bulkOps</span><span class="token punctuation">(</span><span class="token class-name">BulkOperations<span class="token punctuation">.</span>BulkMode</span><span class="token punctuation">.</span><span class="token constant">UNORDERED</span><span class="token punctuation">,</span> collectionName<span class="token punctuation">)</span><span class="token punctuation">;</span>
dataList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>data <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>undefined
<span class="token class-name">Query</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token keyword">new</span>
<span class="token class-name">Criteria</span><span class="token punctuation">(</span>field1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>value1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addCriteria</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Criteria</span><span class="token punctuation">(</span>field2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>value2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Update</span> update <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> dataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>undefined
<span class="token class-name">String</span> key <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> value <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
　　update<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token class-name">Pair</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Query</span><span class="token punctuation">,</span> <span class="token class-name">Update</span><span class="token punctuation">&gt;</span></span> updatePair <span class="token operator">=</span> <span class="token class-name">Pair</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
updateList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>updatePair<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
operations<span class="token punctuation">.</span><span class="token function">upsert</span><span class="token punctuation">(</span>updateList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">BulkWriteResult</span> result <span class="token operator">=</span> operations<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,12),m={href:"https://blog.csdn.net/Mrqiang9001/article/details/121352249",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.csdn.net/weixin_42554772/article/details/122437425",target:"_blank",rel:"noopener noreferrer"};function b(g,h){const a=l("ExternalLinkIcon");return o(),e("div",null,[i,k,n("p",null,[s("MongoTemplate 作为 Spring 对 "),n("a",r,[s("MongoDB"),t(a)]),s(" 提供的操作类，支持数据的批量操作。本文将介绍使用 MongoTemplate 实现批量插入和批量更新的功能。")]),d,n("p",null,[n("a",m,[s("Springboot 2.X MongoTemplate 实现批量插入以及批量更新"),t(a)])]),n("p",null,[n("a",v,[s("MongoTemplate批量操作"),t(a)])])])}const y=p(u,[["render",b],["__file","mongodb-action-bluk-operation.html.vue"]]);export{y as default};
