const e=JSON.parse('{"key":"v-57ac0d8a","path":"/java/thread/java-thread-x-lock-reentrantlock-source2.html","title":"ReentrantLock源码分析(二)-获取锁细节","lang":"zh-CN","frontmatter":{"description":"1. ReentrantLock 中线程加入等待队列 1.1 加入队列的时机 当执行Acquire(1)时，会通过tryAcquire获取锁。在这种情况下，如果获取锁失败，就会调用 addWaiter加入到等待队列中去。 在AQS 中 在 ReentrantLock 1.2 如何加入队列 获取锁失败后，会执行 addWaiter(Node.EXCLUS...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/thread/java-thread-x-lock-reentrantlock-source2.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"ReentrantLock源码分析(二)-获取锁细节"}],["meta",{"property":"og:description","content":"1. ReentrantLock 中线程加入等待队列 1.1 加入队列的时机 当执行Acquire(1)时，会通过tryAcquire获取锁。在这种情况下，如果获取锁失败，就会调用 addWaiter加入到等待队列中去。 在AQS 中 在 ReentrantLock 1.2 如何加入队列 获取锁失败后，会执行 addWaiter(Node.EXCLUS..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. ReentrantLock 中线程加入等待队列","slug":"_1-reentrantlock-中线程加入等待队列","link":"#_1-reentrantlock-中线程加入等待队列","children":[{"level":3,"title":"1.1 加入队列的时机","slug":"_1-1-加入队列的时机","link":"#_1-1-加入队列的时机","children":[]},{"level":3,"title":"1.2 如何加入队列","slug":"_1-2-如何加入队列","link":"#_1-2-如何加入队列","children":[]},{"level":3,"title":"1.3 线程获取锁 过程总结","slug":"_1-3-线程获取锁-过程总结","link":"#_1-3-线程获取锁-过程总结","children":[]},{"level":3,"title":"1.4 公平锁加锁时判断等待队列中是否存在有效节点","slug":"_1-4-公平锁加锁时判断等待队列中是否存在有效节点","link":"#_1-4-公平锁加锁时判断等待队列中是否存在有效节点","children":[]},{"level":3,"title":"1.5 等待队列中线程出队列时机","slug":"_1-5-等待队列中线程出队列时机","link":"#_1-5-等待队列中线程出队列时机","children":[]}]},{"level":2,"title":"2. CANCELLED状态节点生成","slug":"_2-cancelled状态节点生成","link":"#_2-cancelled状态节点生成","children":[]},{"level":2,"title":"3. 如何解锁","slug":"_3-如何解锁","link":"#_3-如何解锁","children":[]},{"level":2,"title":"4. 中断恢复后的执行流程","slug":"_4-中断恢复后的执行流程","link":"#_4-中断恢复后的执行流程","children":[]},{"level":2,"title":"5. 小结","slug":"_5-小结","link":"#_5-小结","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":16.94,"words":5082},"filePathRelative":"java/thread/java-thread-x-lock-reentrantlock-source2.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
