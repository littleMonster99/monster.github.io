const t=JSON.parse('{"key":"v-4bfb2b9e","path":"/java/jvm/java-jvm-classload-tomcat.html","title":"tomcat类加载器","lang":"zh-CN","frontmatter":{"category":["Java","JVM"],"description":"通过前文我们已经了解了类加载器以及双亲委派模型，并且了解为什么使用双亲委派模型。但我们考虑一下我们tomcat 中的场景 一个web容器可能需要部署两个应用程序，不同的应用程序可能会依赖同一个第三方类库的不同版本。不能要求同一个类库在同一个服务器只有一份，因此要保证每个应用程序的类库都是独立的，保证相互隔离。; 如果我们使用双亲委派模型就不能保证他们的...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/jvm/java-jvm-classload-tomcat.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"tomcat类加载器"}],["meta",{"property":"og:description","content":"通过前文我们已经了解了类加载器以及双亲委派模型，并且了解为什么使用双亲委派模型。但我们考虑一下我们tomcat 中的场景 一个web容器可能需要部署两个应用程序，不同的应用程序可能会依赖同一个第三方类库的不同版本。不能要求同一个类库在同一个服务器只有一份，因此要保证每个应用程序的类库都是独立的，保证相互隔离。; 如果我们使用双亲委派模型就不能保证他们的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. 如何破坏双亲委派模型","slug":"_1-如何破坏双亲委派模型","link":"#_1-如何破坏双亲委派模型","children":[]},{"level":2,"title":"2. Tomcat 的类加载器是怎么设计的？","slug":"_2-tomcat-的类加载器是怎么设计的","link":"#_2-tomcat-的类加载器是怎么设计的","children":[{"level":3,"title":"2.1 tomcat是个web容器，那么他要解决什么问题","slug":"_2-1-tomcat是个web容器-那么他要解决什么问题","link":"#_2-1-tomcat是个web容器-那么他要解决什么问题","children":[]},{"level":3,"title":"2.2 Tomcat 如何实现自己独特的类加载机制？","slug":"_2-2-tomcat-如何实现自己独特的类加载机制","link":"#_2-2-tomcat-如何实现自己独特的类加载机制","children":[]},{"level":3,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":6.62,"words":1985},"filePathRelative":"java/jvm/java-jvm-classload-tomcat.md","localizedDate":"2023年3月30日","autoDesc":true}');export{t as data};
