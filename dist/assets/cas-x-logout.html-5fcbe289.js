import{_ as e,W as o,X as c,Y as n,Z as s,$ as t,a0 as p,D as i}from"./framework-f64bc974.js";const l={},u=n("h1",{id:"cas单点登录-springboot自动-手动配置方式集成cas单点登出",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cas单点登录-springboot自动-手动配置方式集成cas单点登出","aria-hidden":"true"},"#"),s(" CAS单点登录 - SpringBoot自动/手动配置方式集成CAS单点登出")],-1),r=n("h2",{id:"_1-本文目标",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-本文目标","aria-hidden":"true"},"#"),s(" 1. 本文目标")],-1),k=n("p",null,"基于SpringBoot + Maven 分别使用自动配置与手动配置过滤器方式实现CAS客户端登出及单点登出。",-1),d={href:"https://www.cnblogs.com/hellxz/p/15768700.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/hellxz/cas-integration-demo",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="_2-cas服务端配置" tabindex="-1"><a class="header-anchor" href="#_2-cas服务端配置" aria-hidden="true">#</a> 2. CAS服务端配置</h2><p>单点登出跟随 <code>service</code> 给出的跳转地址重定向功能 在 CAS 服务端默认是关闭的，所以需要先开启它。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> webapps/cas/WEB-INF/classes/application.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在最下方追加配置项 <code>cas.logout.followServiceRedirects=true</code>，保存重启CAS服务端。</p><h2 id="_3-代码目录结构" tabindex="-1"><a class="header-anchor" href="#_3-代码目录结构" aria-hidden="true">#</a> 3. 代码目录结构</h2><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216205639273.png" alt="image-20230216205639273" tabindex="0" loading="lazy"><figcaption>image-20230216205639273</figcaption></figure><blockquote><p>以上红字仅对本文修改的部分进行说明，其余请参考之前单点登录的实现文章。</p></blockquote><h2 id="_4-代码实现" tabindex="-1"><a class="header-anchor" href="#_4-代码实现" aria-hidden="true">#</a> 4. 代码实现</h2><blockquote><p>仅增量介绍关键类</p></blockquote><h3 id="_4-1-springboot自动配置登出实现" tabindex="-1"><a class="header-anchor" href="#_4-1-springboot自动配置登出实现" aria-hidden="true">#</a> 4.1 SpringBoot自动配置登出实现</h3><p>CasClientConfigurerImpl.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hellxz<span class="token punctuation">.</span>cas</span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">CasClientConfigurer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>
 
<span class="token doc-comment comment">/**
 * cas-client-support-springboot 依赖提供了CAS客户端的自动配置，
 * 当自动配置不满足需要时，可通过实现<span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">CasClientConfigurer</span></span><span class="token punctuation">}</span>接口来重写需要自定义的逻辑
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CasClientConfigurerImpl</span> <span class="token keyword">implements</span> <span class="token class-name">CasClientConfigurer</span> <span class="token punctuation">{</span>
 
    <span class="token doc-comment comment">/**
     * 配置认证过滤器，添加忽略参数，使/logoutPage登出提示页免登录
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;rawtypes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;unchecked&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureAuthenticationFilter</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">FilterRegistrationBean</span> authenticationFilter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span> initParameters <span class="token operator">=</span> authenticationFilter<span class="token punctuation">.</span><span class="token function">getInitParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initParameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ignorePattern&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>上边这个配置类的作用是自定义认证过滤器，将 <code>/logoutPage</code> 排除不走认证逻辑，此页面用于显示登出提示。</p></blockquote><p>CasAutoConfigApp.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hellxz<span class="token punctuation">.</span>cas</span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpSession</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableCasClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>
 
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@EnableCasClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CasAutoConfigApp</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${custom.cas.single-logout-url:}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> casSingleLogoutUrl<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CasAutoConfigApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;服务A测试通过&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * 首页，需要登录
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//@formatter:off</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&lt;h1&gt;登录成功&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;/logout\\&quot;&gt;退出登录&lt;/a&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;&quot;</span> <span class="token operator">+</span> casSingleLogoutUrl <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&gt;全局退出登录&lt;/a&gt;&quot;</span><span class="token punctuation">;</span>
      <span class="token comment">//@formatter:on</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 登出提示页，免登录
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">logoutPage</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//@formatter:off</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&lt;h1&gt;您已退出登录成功。&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;/index\\&quot;&gt;去登录&lt;/a&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;&quot;</span> <span class="token operator">+</span> casSingleLogoutUrl <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&gt;全局退出登录&lt;/a&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//@formatter:on</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 退出登录，跳转登出提示页
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/logout&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 过期会话</span>
            session<span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 跳转登出提示页</span>
        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>
 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>较上一迭代新增了 <code>/index</code>（主页）、<code>/logoutPage</code>（登出提示页）、<code>/logout</code> （客户端退出登录）这三个接口。其中只有 <code>/logout</code> 接口是免登录的，为了防止出现重定向回来自动登录的情况。</p></blockquote><p>application.properties</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210134009.png" alt="image-20230216210134009" tabindex="0" loading="lazy"><figcaption>image-20230216210134009</figcaption></figure><blockquote><p>这里启用了单点登出配置项，<code>CasClientConfiguration</code> 中的 <code>casSingleSignOutFilter()</code> 与 <code>casSingleSignOutListener()</code> 这两个方法激活，注册Bean到MVC容器中。</p><p>自定义单点登出地址相当于拼接 CAS服务端登出地址与回调重定向地址，这里配置成免登录的客户端地址 <code>/logoutPage</code>。</p></blockquote><h3 id="_4-2-手动配置登出实现" tabindex="-1"><a class="header-anchor" href="#_4-2-手动配置登出实现" aria-hidden="true">#</a> 4.2 手动配置登出实现</h3><p>CasConfig.java，是上一迭代的Config.java重命名而来。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hellxz<span class="token punctuation">.</span>cas</span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">EventListener</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>authentication<span class="token punctuation">.</span></span><span class="token class-name">AuthenticationFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SingleSignOutFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>session<span class="token punctuation">.</span></span><span class="token class-name">SingleSignOutHttpSessionListener</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequestWrapperFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>jasig<span class="token punctuation">.</span>cas<span class="token punctuation">.</span>client<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span><span class="token class-name">Cas30ProxyReceivingTicketValidationFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletListenerRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Order</span></span><span class="token punctuation">;</span>
 
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CasConfig</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 自定义cas服务地址
     */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${custom.cas.casServerUrlPrefix:}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> casServerUrlPrefix<span class="token punctuation">;</span>
 
    <span class="token doc-comment comment">/**
     * 自定义服务标识，格式为<span class="token punctuation">{</span>protocol<span class="token punctuation">}</span>:<span class="token punctuation">{</span>hostName<span class="token punctuation">}</span>:<span class="token punctuation">{</span>port<span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${custom.cas.serverName:}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> serverName<span class="token punctuation">;</span>
 
    <span class="token doc-comment comment">/**
     * 监听登出事件，清除session与token之间的映射关系及CAS会话记录
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServletListenerRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EventListener</span><span class="token punctuation">&gt;</span></span> <span class="token function">casSingleSignOutListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServletListenerRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">EventListener</span><span class="token punctuation">&gt;</span></span> singleSignOutListener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletListenerRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        singleSignOutListener<span class="token punctuation">.</span><span class="token function">setListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SingleSignOutHttpSessionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> singleSignOutListener<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SingleSignOutFilter</span><span class="token punctuation">&gt;</span></span> <span class="token function">casSingleSignOutFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SingleSignOutFilter</span><span class="token punctuation">&gt;</span></span> registration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SingleSignOutFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;CAS Single Sign Out Filter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> initParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;casServerUrlPrefix&quot;</span><span class="token punctuation">,</span> casServerUrlPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// CAS服务端地址，会拼接为登录地址</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;serverName&quot;</span><span class="token punctuation">,</span> serverName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 服务地址</span>
        registration<span class="token punctuation">.</span><span class="token function">setInitParameters</span><span class="token punctuation">(</span>initParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 拦截所有请求，将未携带票据与会话中无票据的请求都重定向到CAS登录地址
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthenticationFilter</span><span class="token punctuation">&gt;</span></span> <span class="token function">casAuthenticationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthenticationFilter</span><span class="token punctuation">&gt;</span></span> registration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AuthenticationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;CAS Authentication Filter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> initParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;casServerUrlPrefix&quot;</span><span class="token punctuation">,</span> casServerUrlPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// CAS服务端地址，会拼接为登录地址</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;serverName&quot;</span><span class="token punctuation">,</span> serverName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 服务地址</span>
 
        <span class="token comment">// 自定义忽略认证的路径或表达式，这里用来免登录访问【退出登录提示】页面</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ignorePattern&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        registration<span class="token punctuation">.</span><span class="token function">setInitParameters</span><span class="token punctuation">(</span>initParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 拦截所有请求，使用获取的票据向CAS服务端发起校验票据请求
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cas30ProxyReceivingTicketValidationFilter</span><span class="token punctuation">&gt;</span></span> <span class="token function">cas30TicketValidationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Cas30ProxyReceivingTicketValidationFilter</span><span class="token punctuation">&gt;</span></span> registration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Cas30ProxyReceivingTicketValidationFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;CAS30 Ticket Validation Filter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> initParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;casServerUrlPrefix&quot;</span><span class="token punctuation">,</span> casServerUrlPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// CAS服务端地址，会拼接为服务校验地址</span>
        initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;serverName&quot;</span><span class="token punctuation">,</span> serverName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setInitParameters</span><span class="token punctuation">(</span>initParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 包装HttpServletRequest，使CAS登录成功的用户名等信息存入请求中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     * 登录成功后以下两个方法将不再返回null: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     * 
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>
     <span class="token code-section">* <span class="token line"><span class="token code language-java"><span class="token class-name">HttpServletRequest</span>#<span class="token function">getUserPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span>
     * <span class="token line"><span class="token code language-java"><span class="token class-name">HttpServletRequest</span>#<span class="token function">getRemoteUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span>
     *</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpServletRequestWrapperFilter</span><span class="token punctuation">&gt;</span></span> <span class="token function">httpServletRequestWrapperFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpServletRequestWrapperFilter</span><span class="token punctuation">&gt;</span></span> registration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpServletRequestWrapperFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;HttpServletRequest Wrapper Filter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>新增了 <code>casSingleSignOutListener()</code> （配置单点登出监听器）、<code>casSingleSignOutFilter()</code>（单点登出过滤器）以及 将登出提示页从认证过滤器处放行。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 自定义忽略认证的路径或表达式，这里用来免登录访问【退出登录提示】页面</span>
initParams<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ignorePattern&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>需注意单点登出过滤器的排序要早于认证过滤器、校验票据过滤器。</p></blockquote><p>CasManualConfigApp.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>hellxz<span class="token punctuation">.</span>cas</span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpSession</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>
 
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CasManualConfigApp</span> <span class="token punctuation">{</span>
 
    <span class="token doc-comment comment">/**
     * 自定义全局单点登出地址，由cas服务端地址/logout?service=当前serviceName/logoutPage组成<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     * 当cas全局登出（带TGC访问cas的/logout接口）成功后，会重定向service参数地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>
     * 
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">&gt;</span></span>
     <span class="token code-section">* <span class="token line"><span class="token code language-java">需注意：service参数必须含登录时注册给<span class="token constant">CAS</span>的serviceName，否则只废弃<span class="token constant">CAS</span>会话而不会重定向</span></span>
     *</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${custom.cas.casSingleLogoutUrl:}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> casSingleLogoutUrl<span class="token punctuation">;</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CasManualConfigApp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;服务B测试通过&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 首页，需要登录
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//@formatter:off</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&lt;h1&gt;登录成功&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;/logout\\&quot;&gt;退出登录&lt;/a&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;&quot;</span> <span class="token operator">+</span> casSingleLogoutUrl <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&gt;全局退出登录&lt;/a&gt;&quot;</span><span class="token punctuation">;</span>
      <span class="token comment">//@formatter:on</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 登出提示页，免登录
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">logoutPage</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//@formatter:off</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&lt;h1&gt;您已退出登录成功。&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;/index\\&quot;&gt;去登录&lt;/a&gt;&lt;br&gt;&lt;br&gt;&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;&lt;a href=\\&quot;&quot;</span> <span class="token operator">+</span> casSingleLogoutUrl <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&gt;全局退出登录&lt;/a&gt;&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//@formatter:on</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * 退出登录，跳转登出提示页
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/logout&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>session <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 过期会话</span>
            session<span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 跳转登出提示页</span>
        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">&quot;/logoutPage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>与 自动配置实现基本一致，添加几个接口供测试</p></blockquote><p>application.properties</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210236234.png" alt="image-20230216210236234" tabindex="0" loading="lazy"><figcaption>image-20230216210236234</figcaption></figure><h2 id="_5-验证实现" tabindex="-1"><a class="header-anchor" href="#_5-验证实现" aria-hidden="true">#</a> 5. 验证实现</h2><blockquote><p>以本地IP为 10.2.6.63，自动配置端口8081，手动配置端口 8082，CAS服务端192.168.56.104:8088/cas 为例</p></blockquote><h3 id="_5-1-单点登录" tabindex="-1"><a class="header-anchor" href="#_5-1-单点登录" aria-hidden="true">#</a> 5.1 单点登录</h3>`,31),g={href:"http://10.2.6.63:8081/index",target:"_blank",rel:"noopener noreferrer"},b=p('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210331574.png" alt="image-20230216210331574" tabindex="0" loading="lazy"><figcaption>image-20230216210331574</figcaption></figure><p>输入用户名与密码，casuser/Mellon，登录。如下图单点登录成功</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210404288.png" alt="image-20230216210404288" tabindex="0" loading="lazy"><figcaption>image-20230216210404288</figcaption></figure><h3 id="_5-2-客户端登出" tabindex="-1"><a class="header-anchor" href="#_5-2-客户端登出" aria-hidden="true">#</a> 5.2 客户端登出</h3><p>先验证退出客户端登出，点 <code>退出登录</code>。如图进入登出成功提示页面</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210441988.png" alt="image-20230216210441988" tabindex="0" loading="lazy"><figcaption>image-20230216210441988</figcaption></figure><p>检察下 /logout 接口的 cookie值，此处是 <code>95E21E8D67C363A7432C342EDACB4DE8</code></p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210536528.png" alt="image-20230216210536528" tabindex="0" loading="lazy"><figcaption>image-20230216210536528</figcaption></figure><p>再点击 <code>去登录</code>，这是访问 /index，可以看到又登录成功了，而且这次没有手输账号密码，查看了cookie中的会话id为 <code>6157E88046280B3E90A502016F98549A</code>，与退出之前不是同一会话</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210613247.png" alt="image-20230216210613247" tabindex="0" loading="lazy"><figcaption>image-20230216210613247</figcaption></figure><h3 id="_5-3-单点登出" tabindex="-1"><a class="header-anchor" href="#_5-3-单点登出" aria-hidden="true">#</a> 5.3 单点登出</h3><p>接下来验证CAS单点登出，点击 <code>全局退出登录</code>。如下图，可见访问CAS服务端 /logout接口，并传递了回调地址为登出提示页面，最终回到了提示页面。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210654135.png" alt="image-20230216210654135" tabindex="0" loading="lazy"><figcaption>image-20230216210654135</figcaption></figure><p>我们再试验一下 <code>去登录</code>，验证是否需要手输账号密码登录。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230216210723870.png" alt="image-20230216210723870" tabindex="0" loading="lazy"><figcaption>image-20230216210723870</figcaption></figure><p>如上图，的确需要手输账号才能登录，说明单点登出功能正常。</p><h3 id="_5-4-cas客户端单点登出日志" tabindex="-1"><a class="header-anchor" href="#_5-4-cas客户端单点登出日志" aria-hidden="true">#</a> 5.4 CAS客户端单点登出日志</h3><p>由于自动配置项目我没配置单点登出 <code>trace</code> 等级日志，我们用 手动配置服务登录再全局退出下，看看日志。</p>',18),f={href:"http://10.2.6.63:8082/index%EF%BC%8C%E7%99%BB%E5%BD%95%E5%90%8E%E5%86%8D%E5%85%A8%E5%B1%80%E9%80%80%E5%87%BA%E3%80%82%E6%97%A5%E5%BF%97%E5%A6%82%E4%B8%8B%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},q=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:38.237 TRACE <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-1<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Ignoring URI <span class="token keyword">for</span> logout: /index
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:40.401 TRACE <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-4<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Received a token request
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:40.406 DEBUG <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-4<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Recording session <span class="token keyword">for</span> token ST-61-aJ6BwiVkekqtkqlIXmmyWAYq6sMlocalhost
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:40.535 TRACE <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-3<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Ignoring URI <span class="token keyword">for</span> logout: /index
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:43.698 TRACE <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-5<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Received a <span class="token builtin class-name">logout</span> request
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:43.699 TRACE <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-5<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Logout request:
<span class="token operator">&lt;</span>samlp:LogoutRequest xmlns:samlp<span class="token operator">=</span><span class="token string">&quot;urn:oasis:names:tc:SAML:2.0:protocol&quot;</span> <span class="token assign-left variable">ID</span><span class="token operator">=</span><span class="token string">&quot;LR-37-W7V-UYdTLhGkwl7P2w2somtR&quot;</span> <span class="token assign-left variable">Version</span><span class="token operator">=</span><span class="token string">&quot;2.0&quot;</span> <span class="token assign-left variable">IssueInstant</span><span class="token operator">=</span><span class="token string">&quot;2022-01-18T10:22:43Z&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>saml:NameID xmlns:saml<span class="token operator">=</span><span class="token string">&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;</span><span class="token operator">&gt;</span>@NOT_USED@<span class="token operator">&lt;</span>/saml:NameID<span class="token operator">&gt;</span><span class="token operator">&lt;</span>samlp:SessionIndex<span class="token operator">&gt;</span>ST-61-aJ6BwiVkekqtkqlIXmmyWAYq6sMlocalhost<span class="token operator">&lt;</span>/samlp:SessionIndex<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/samlp:LogoutRequest<span class="token operator">&gt;</span>
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:43.702 DEBUG <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-5<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Invalidating session <span class="token punctuation">[</span>DB43DC21DCC1663D64968E8DBD48B247<span class="token punctuation">]</span> <span class="token keyword">for</span> token <span class="token punctuation">[</span>ST-61-aJ6BwiVkekqtkqlIXmmyWAYq6sMlocalhost<span class="token punctuation">]</span>
<span class="token number">2022</span>-01-18 <span class="token number">23</span>:22:43.712 TRACE <span class="token number">24016</span> --- <span class="token punctuation">[</span>nio-8082-exec-2<span class="token punctuation">]</span> o.j.c.c.session.SingleSignOutHandler     <span class="token builtin class-name">:</span> Ignoring URI <span class="token keyword">for</span> logout: /logoutPage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到：</p><ul><li>登录成功的日志 <code>Recording session for token ST-61-aJ6BwiVkekqtkqlIXmmyWAYq6sMlocalhost</code></li><li>单点登出的日志： <code>Received a logout request</code> 和 <code>Logout request: &lt;samlp:LogoutRequest xmlns:samlp=&quot;urn:oasis:names:tc:SAML:2.0:protocol&quot; ID=&quot;LR-37-W7V-UYdTLhGkwl7P2w2somtR&quot; Version=&quot;2.0&quot; IssueInstant=&quot;2022-01-18T10:22:43Z&quot;&gt;&lt;saml:NameID xmlns:saml=&quot;urn:oasis:names:tc:SAML:2.0:assertion&quot;&gt;@NOT_USED@&lt;/saml:NameID&gt;&lt;samlp:SessionIndex&gt;ST-61-aJ6BwiVkekqtkqlIXmmyWAYq6sMlocalhost&lt;/samlp:SessionIndex&gt;&lt;/samlp:LogoutRequest&gt;</code></li><li>过期当前客户端会话的 <code>Invalidating session [DB43DC21DCC1663D64968E8DBD48B247] for token [ST-61-aJ6BwiVkekqtkqlIXmmyWAYq6sMlocalhost]</code></li></ul><p>至此验证客户端登出及单点登出功能一切正常。</p><blockquote><p>自动配置和手动配置这两个工程的效果是一样的，笔者已经亲身测试OK，就不在此重复表述了。</p></blockquote><h2 id="_6-总结" tabindex="-1"><a class="header-anchor" href="#_6-总结" aria-hidden="true">#</a> 6. 总结</h2><p>本次编写的 demo 恰如其分地验证了CAS客户端登出与单点登出的流程，即客户端登出（过期自己）及单点登出（过期自己以及所有相关客户端）。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,8),h={href:"https://www.cnblogs.com/hellxz/p/15820465.html",target:"_blank",rel:"noopener noreferrer"};function w(S,y){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,k,n("blockquote",null,[n("p",null,[s("本文基于《"),n("a",d,[s("CAS学习笔记三：SpringBoot自动/手动配置方式集成CAS单点登录"),t(a)]),s("》的代码扩充而来，完整代码见 "),n("a",m,[s("https://github.com/hellxz/cas-integration-demo"),t(a)])])]),v,n("p",null,[s("启动自动配置服务，访问本地端口号8081，我这里是 "),n("a",g,[s("http://10.2.6.63:8081/index"),t(a)]),s(" ，访问首页立即跳转CAS登录页面")]),b,n("p",null,[s("启动手动配置服务，访问 "),n("a",f,[s("http://10.2.6.63:8082/index，登录后再全局退出。日志如下："),t(a)])]),q,n("p",null,[n("a",h,[s("CAS学习笔记五：SpringBoot自动/手动配置方式集成CAS单点登出"),t(a)])])])}const x=e(l,[["render",w],["__file","cas-x-logout.html.vue"]]);export{x as default};
