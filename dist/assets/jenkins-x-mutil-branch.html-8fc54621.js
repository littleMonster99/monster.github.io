import{_ as i,W as n,X as r,Y as e,$ as t,a0 as s,D as o}from"./framework-f64bc974.js";const c={},h=s('<h1 id="jenkins多分支流水线指定分支" tabindex="-1"><a class="header-anchor" href="#jenkins多分支流水线指定分支" aria-hidden="true">#</a> jenkins多分支流水线指定分支</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>随着项目的发展，建的分支越来越多。在多分支流水线上的分支也变得异常凌乱，很多老版本的分支已经不用了。也存在着。我们希望能过滤掉一些无用的分支</p><h2 id="_2-多分支流水线过滤" tabindex="-1"><a class="header-anchor" href="#_2-多分支流水线过滤" aria-hidden="true">#</a> 2. 多分支流水线过滤</h2><p>进入流水线的配置界面，在<code>Branch Sources</code>里找到了<code>Behaviours</code>选项，可以添加很多行为，这里面有两个我们需要的：</p><ul><li>Filter by name(with regular expression)</li><li>Fliter by name(with wildcards)</li></ul><h3 id="_2-1-使用正则表达式或通配符来过滤" tabindex="-1"><a class="header-anchor" href="#_2-1-使用正则表达式或通配符来过滤" aria-hidden="true">#</a> 2.1 使用正则表达式或通配符来过滤</h3><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20220323094256012.png" alt="image-20220323094256012" tabindex="0" loading="lazy"><figcaption>image-20220323094256012</figcaption></figure><h3 id="_2-2-根据分支名来过滤" tabindex="-1"><a class="header-anchor" href="#_2-2-根据分支名来过滤" aria-hidden="true">#</a> 2.2 根据分支名来过滤</h3><p>Fliter by name(with wildcards)</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20220323094604488.png" alt="image-20220323094604488" tabindex="0" loading="lazy"><figcaption>image-20220323094604488</figcaption></figure><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>',12),l={href:"https://jerrymei.cn/jenkins-multibranch-filter/",target:"_blank",rel:"noopener noreferrer"},d=e("strong",null,"Jenkins 多分支项目过滤及 when 的高级用法",-1);function g(_,m){const a=o("ExternalLinkIcon");return n(),r("div",null,[h,e("p",null,[e("a",l,[d,t(a)])])])}const f=i(c,[["render",g],["__file","jenkins-x-mutil-branch.html.vue"]]);export{f as default};
