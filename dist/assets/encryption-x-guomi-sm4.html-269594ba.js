import{_ as p,W as e,X as o,Y as n,Z as s,$ as t,a0 as c,D as l}from"./framework-f64bc974.js";const i={},u=c(`<h1 id="国密sm4加密使用-java-和-vue" tabindex="-1"><a class="header-anchor" href="#国密sm4加密使用-java-和-vue" aria-hidden="true">#</a> 国密SM4加密使用（java 和 vue）</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>公司业务需求国产加密，要求使用国密SM4</p><p>特别注意：</p><ul><li><p>加密串的编码GBK 和 utf8 是有区别的</p></li><li><p>前后端的参数要严格保持统一</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210928152557678.png" alt="image-20210928152557678" tabindex="0" loading="lazy"><figcaption>image-20210928152557678</figcaption></figure></li></ul><h2 id="_2-java后端集成" tabindex="-1"><a class="header-anchor" href="#_2-java后端集成" aria-hidden="true">#</a> 2. java后端集成</h2><h3 id="_2-1-添加pom依赖" tabindex="-1"><a class="header-anchor" href="#_2-1-添加pom依赖" aria-hidden="true">#</a> 2.1 添加pom依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.hutool<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>hutool-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
 
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.bouncycastle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>bcprov-jdk15to18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.66<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-编写测试类" tabindex="-1"><a class="header-anchor" href="#_2-2-编写测试类" aria-hidden="true">#</a> 2.2 编写测试类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">CharsetUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>symmetric<span class="token punctuation">.</span></span><span class="token class-name">SM4</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>symmetric<span class="token punctuation">.</span></span><span class="token class-name">SymmetricCrypto</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Mode</span><span class="token punctuation">.</span><span class="token static">CBC</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Padding</span><span class="token punctuation">.</span><span class="token static">ZeroPadding</span></span><span class="token punctuation">;</span>
 
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Sm4EncryptUtil</span> <span class="token punctuation">{</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token class-name">String</span> plainTxt<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> cipherTxt <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">SymmetricCrypto</span> sm4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SM4</span><span class="token punctuation">(</span><span class="token constant">CBC</span><span class="token punctuation">,</span> <span class="token class-name">ZeroPadding</span><span class="token punctuation">,</span> <span class="token string">&quot;abc1111111111333&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">CHARSET_UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;iviviviviviviviv&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">CHARSET_UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> encrypHex <span class="token operator">=</span> sm4<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>plainTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cipherTxt <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>encrypHex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;{SM4}&quot;</span> <span class="token operator">+</span> cipherTxt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token class-name">String</span> cipherTxt<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cipherTxt<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;{SM4}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> cipherTxt<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cipherTxt <span class="token operator">=</span> cipherTxt<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> plainTxt <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">SymmetricCrypto</span> sm4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SM4</span><span class="token punctuation">(</span><span class="token constant">CBC</span><span class="token punctuation">,</span> <span class="token class-name">ZeroPadding</span><span class="token punctuation">,</span> <span class="token string">&quot;abc1111111111333&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">CHARSET_UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;iviviviviviviviv&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">CHARSET_UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cipherHex <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>cipherTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        plainTxt <span class="token operator">=</span> sm4<span class="token punctuation">.</span><span class="token function">decryptStr</span><span class="token punctuation">(</span>cipherHex<span class="token punctuation">,</span> <span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">CHARSET_UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> plainTxt<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> argc<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> originTxt <span class="token operator">=</span> <span class="token string">&quot;测试&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;原文: &quot;</span> <span class="token operator">+</span> originTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cipherTxt <span class="token operator">=</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>originTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;密文: &quot;</span> <span class="token operator">+</span> cipherTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> plainTxt <span class="token operator">=</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>cipherTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;解密结果: &quot;</span> <span class="token operator">+</span> plainTxt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-vue实现" tabindex="-1"><a class="header-anchor" href="#_3-vue实现" aria-hidden="true">#</a> 3. vue实现</h2><h3 id="_3-1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_3-1-添加依赖" aria-hidden="true">#</a> 3.1 添加依赖</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install gm-crypt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-代码实现" tabindex="-1"><a class="header-anchor" href="#_3-2-代码实现" aria-hidden="true">#</a> 3.2 代码实现</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">Account</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//用户账号</span>
      <span class="token literal-property property">Pwd</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">//用户密码</span>
      <span class="token literal-property property">time</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 登录</span>
    <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 引用sm4包进行加密</span>
      <span class="token keyword">const</span> <span class="token constant">SM4</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;gm-crypt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sm4<span class="token punctuation">;</span>
      <span class="token keyword">let</span> sm4Config <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token comment">//配置sm4参数</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;HENG1AN2WEN3YIN4&quot;</span><span class="token punctuation">,</span><span class="token comment">//这里这个key值是跟后端要的</span>
        <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&quot;ecb&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 加密的方式有两种，ecb和cbc两种，也是看后端如何定义的，不过要是cbc的话下面还要加一个iv的参数，ecb不用</span>
        <span class="token literal-property property">cipherType</span><span class="token operator">:</span> <span class="token string">&quot;base64&quot;</span> <span class="token comment">// </span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token keyword">let</span> sm4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SM4</span><span class="token punctuation">(</span>sm4Config<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这里new一个函数，将上面的sm4Config作为参数传递进去。然后就可以开心的加密了</span>
      <span class="token keyword">let</span> Account <span class="token operator">=</span> sm4<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Account<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//账号加密</span>
      <span class="token keyword">let</span> Pwd <span class="token operator">=</span> sm4<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>Pwd<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//密码加密</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-在线测试" tabindex="-1"><a class="header-anchor" href="#_4-在线测试" aria-hidden="true">#</a> 4. 在线测试</h2>`,16),r={href:"https://the-x.cn/cryptography/Sm4.aspx",target:"_blank",rel:"noopener noreferrer"},k=n("figure",null,[n("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210928152433988.png",alt:"image-20210928152433988",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210928152433988")],-1),d=n("h2",{id:"参考文章",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),s(" 参考文章")],-1),m={href:"https://blog.csdn.net/ljzgood/article/details/117966293",target:"_blank",rel:"noopener noreferrer"};function v(g,b){const a=l("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[s("在线测试网站"),t(a)])]),k,d,n("p",null,[n("a",m,[s("SM4加解密算法工具类JAVA实现（基于hutool-all以及bcprov-jdk15to18实现） 支持MODE以及自定义Key以及iv的设定"),t(a)])])])}const y=p(i,[["render",v],["__file","encryption-x-guomi-sm4.html.vue"]]);export{y as default};
