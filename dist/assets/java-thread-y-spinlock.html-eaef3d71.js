const e=JSON.parse('{"key":"v-f84c7022","path":"/java/thread/java-thread-y-spinlock.html","title":"java自旋锁","lang":"zh-CN","frontmatter":{"description":"1. 简介 自旋锁（spinlock）：是指当一个线程在获取锁的时候，如果锁已经被其它线程获取，那么该线程将循环等待，然后不断的判断锁是否能够被成功获取，直到获取到锁才会退出循环。 获取锁的线程一直处于活跃状态，但是并没有执行任何有效的任务，使用这种锁会造成 busy-waiting。 2. Java 如何实现自旋锁 lock（)方法利用的CAS， 1...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/thread/java-thread-y-spinlock.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"java自旋锁"}],["meta",{"property":"og:description","content":"1. 简介 自旋锁（spinlock）：是指当一个线程在获取锁的时候，如果锁已经被其它线程获取，那么该线程将循环等待，然后不断的判断锁是否能够被成功获取，直到获取到锁才会退出循环。 获取锁的线程一直处于活跃状态，但是并没有执行任何有效的任务，使用这种锁会造成 busy-waiting。 2. Java 如何实现自旋锁 lock（)方法利用的CAS， 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. Java 如何实现自旋锁","slug":"_2-java-如何实现自旋锁","link":"#_2-java-如何实现自旋锁","children":[]},{"level":2,"title":"3. 自旋锁的缺点","slug":"_3-自旋锁的缺点","link":"#_3-自旋锁的缺点","children":[]},{"level":2,"title":"4. 自旋锁的优点","slug":"_4-自旋锁的优点","link":"#_4-自旋锁的优点","children":[]},{"level":2,"title":"5. 支持可重入自旋锁","slug":"_5-支持可重入自旋锁","link":"#_5-支持可重入自旋锁","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":3.02,"words":905},"filePathRelative":"java/thread/java-thread-y-spinlock.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
