const e=JSON.parse('{"key":"v-5d52bc9e","path":"/java/thread/java-thread-y-atomic.html","title":"Atomic原子类","lang":"zh-CN","frontmatter":{"description":"1. 简介 Java从JDK1.5开始提供了java.util.concurrent.atomic包，atomic包中的类用于在多线程环境下实现单个变量多个独立操作（比如读-写）的连续原子性。 并且都比较高效，因为它们都是由基于偏移量（类似于指针）的非阻塞CAS算法实现，用于替代锁的使用。 无锁的进行原子操作，用于替代锁的使用 原理：volatile字...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/thread/java-thread-y-atomic.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"Atomic原子类"}],["meta",{"property":"og:description","content":"1. 简介 Java从JDK1.5开始提供了java.util.concurrent.atomic包，atomic包中的类用于在多线程环境下实现单个变量多个独立操作（比如读-写）的连续原子性。 并且都比较高效，因为它们都是由基于偏移量（类似于指针）的非阻塞CAS算法实现，用于替代锁的使用。 无锁的进行原子操作，用于替代锁的使用 原理：volatile字..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. JUC包中的4类原子类","slug":"_2-juc包中的4类原子类","link":"#_2-juc包中的4类原子类","children":[{"level":3,"title":"2.1 基本类型","slug":"_2-1-基本类型","link":"#_2-1-基本类型","children":[]},{"level":3,"title":"2.2 数组类型","slug":"_2-2-数组类型","link":"#_2-2-数组类型","children":[]},{"level":3,"title":"2.3 引用类型","slug":"_2-3-引用类型","link":"#_2-3-引用类型","children":[]},{"level":3,"title":"2.4 对象的属性修改类型","slug":"_2-4-对象的属性修改类型","link":"#_2-4-对象的属性修改类型","children":[]}]},{"level":2,"title":"3. 带版本号的原子类","slug":"_3-带版本号的原子类","link":"#_3-带版本号的原子类","children":[{"level":3,"title":"3.1 为什么需要带版本号？（ABA问题）","slug":"_3-1-为什么需要带版本号-aba问题","link":"#_3-1-为什么需要带版本号-aba问题","children":[]},{"level":3,"title":"3.2 如何解决ABA问题","slug":"_3-2-如何解决aba问题","link":"#_3-2-如何解决aba问题","children":[]}]},{"level":2,"title":"4. AtomicInteger 的使用","slug":"_4-atomicinteger-的使用","link":"#_4-atomicinteger-的使用","children":[]},{"level":2,"title":"5. AtomicInteger 类的原理","slug":"_5-atomicinteger-类的原理","link":"#_5-atomicinteger-类的原理","children":[]},{"level":2,"title":"6. JDK1.8中新增的原子加强类","slug":"_6-jdk1-8中新增的原子加强类","link":"#_6-jdk1-8中新增的原子加强类","children":[{"level":3,"title":"6.1 jdk1.8 新增的原子加强类","slug":"_6-1-jdk1-8-新增的原子加强类","link":"#_6-1-jdk1-8-新增的原子加强类","children":[]},{"level":3,"title":"6.2 为什么需要加强","slug":"_6-2-为什么需要加强","link":"#_6-2-为什么需要加强","children":[]}]},{"level":2,"title":"7. atomic 合适场景","slug":"_7-atomic-合适场景","link":"#_7-atomic-合适场景","children":[]},{"level":2,"title":"8. 总结","slug":"_8-总结","link":"#_8-总结","children":[]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":6.6,"words":1981},"filePathRelative":"java/thread/java-thread-y-atomic.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
