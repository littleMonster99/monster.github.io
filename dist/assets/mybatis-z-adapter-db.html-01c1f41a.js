import{_ as n,W as s,X as a,a0 as t}from"./framework-f64bc974.js";const e={},p=t(`<h1 id="mybatis适配多种数据库" tabindex="-1"><a class="header-anchor" href="#mybatis适配多种数据库" aria-hidden="true">#</a> Mybatis适配多种数据库</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p><strong>动态切换数据库</strong>，如在<strong>MySQL、PostgreSQL与Oracle之间进行切换，并使用同一个Dao接口。如何进行同一个函数调用mapper中不同的sql语句</strong>？</p><h2 id="_2-区分具体数据库" tabindex="-1"><a class="header-anchor" href="#_2-区分具体数据库" aria-hidden="true">#</a> 2. 区分具体数据库</h2><h3 id="_2-1-理论" tabindex="-1"><a class="header-anchor" href="#_2-1-理论" aria-hidden="true">#</a> 2.1 理论</h3><p>若在MyBatis配置文件中设置了databaseIdProvider，则可以使用 _databaseId 参数</p><p>这样就可以根据不同的数据库厂商构建特定的语句。_databaseId 就是代表当前数据库的别名Oracle。</p><p>databaseIdProvider配置：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>databaseIdProvider</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DB_VENDOR<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>MySQL<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mysql<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    ……
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>databaseIdProvider</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-在springboot-中如何配置" tabindex="-1"><a class="header-anchor" href="#_2-2-在springboot-中如何配置" aria-hidden="true">#</a> 2.2 在springboot 中如何配置</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisConfig</span>
<span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DatabaseIdProvider</span> <span class="token function">getDatabaseIdProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DatabaseIdProvider</span> databaseIdProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VendorDatabaseIdProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;MySQL&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mysql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;Oracle&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;oracle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        databaseIdProvider<span class="token punctuation">.</span><span class="token function">setProperties</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> databaseIdProvider<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
  
        <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SqlSessionFactory</span> <span class="token function">sqlSessionFactory</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> dataSource<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">SqlSessionFactoryBean</span> sessionFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sessionFactory<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
      	<span class="token comment">// 重点是这句需要配置上 </span>
        sessionFactory<span class="token punctuation">.</span><span class="token function">setDatabaseIdProvider</span><span class="token punctuation">(</span><span class="token function">getDatabaseIdProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">return</span> sessionFactory<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-前置配置" tabindex="-1"><a class="header-anchor" href="#_3-前置配置" aria-hidden="true">#</a> 3. 前置配置</h2><h3 id="_3-1-mysql-前置配置" tabindex="-1"><a class="header-anchor" href="#_3-1-mysql-前置配置" aria-hidden="true">#</a> 3.1 Mysql 前置配置</h3><h4 id="_3-1-1-序列支持" tabindex="-1"><a class="header-anchor" href="#_3-1-1-序列支持" aria-hidden="true">#</a> 3.1.1 序列支持</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- ----------------------------</span>
<span class="token comment">-- Table structure for sys_sequence</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>sys_sequence<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
                                <span class="token identifier"><span class="token punctuation">\`</span>sequence_name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;序列名称&#39;</span><span class="token punctuation">,</span>
                                <span class="token identifier"><span class="token punctuation">\`</span>sequence_value<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;序列值&#39;</span><span class="token punctuation">,</span>
                                <span class="token identifier"><span class="token punctuation">\`</span>increment_value<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;增量值&#39;</span><span class="token punctuation">,</span>
                                <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>sequence_name<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">USING</span> <span class="token keyword">BTREE</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 ROW_FORMAT<span class="token operator">=</span>DYNAMIC <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;序列&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- Records of sys_sequence</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>sys_sequence<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;seq_sys_dept&#39;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>sys_sequence<span class="token punctuation">\`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;seq_sys_user&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-nextval函数-兼容oracle-序列" tabindex="-1"><a class="header-anchor" href="#_3-1-2-nextval函数-兼容oracle-序列" aria-hidden="true">#</a> 3.1.2 nextval函数：兼容oracle 序列</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- ----------------------------</span>
<span class="token comment">-- Function structure for nextval</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> <span class="token identifier"><span class="token punctuation">\`</span>nextval<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>seq_name <span class="token keyword">varchar</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">RETURNS</span> <span class="token keyword">int</span>
    <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
<span class="token keyword">begin</span> <span class="token keyword">declare</span>
sequence <span class="token keyword">int</span><span class="token punctuation">;</span> <span class="token keyword">set</span>
sequence <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> sequence_value <span class="token keyword">from</span> sys_sequence <span class="token keyword">where</span> sequence_name <span class="token operator">=</span> seq_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">update</span> sys_sequence
<span class="token keyword">set</span> sequence_value <span class="token operator">=</span> sequence_value <span class="token operator">+</span> increment_value
<span class="token keyword">where</span> sequence_name <span class="token operator">=</span> seq_name<span class="token punctuation">;</span>
<span class="token keyword">return</span> sequence<span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-oracle-前置配置" tabindex="-1"><a class="header-anchor" href="#_3-2-oracle-前置配置" aria-hidden="true">#</a> 3.2 Oracle 前置配置</h3><h4 id="_3-2-1-find-in-set函数-兼容mysql" tabindex="-1"><a class="header-anchor" href="#_3-2-1-find-in-set函数-兼容mysql" aria-hidden="true">#</a> 3.2.1 find_in_set函数，兼容mysql</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- ----------------------------</span>
<span class="token comment">-- 函数 ，代替mysql的find_in_set</span>
<span class="token comment">-- 例如： select * from sys_dept where FIND_IN_SET (101,ancestors) &lt;&gt; 0</span>
<span class="token comment">-- mysql可接受0或其它number做为where 条件，oracle只接受表达式做为where 条件</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">create</span> <span class="token operator">or</span> <span class="token keyword">replace</span> <span class="token keyword">function</span> find_in_set<span class="token punctuation">(</span>arg1 <span class="token operator">in</span> varchar2<span class="token punctuation">,</span>arg2 <span class="token operator">in</span> <span class="token keyword">varchar</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> number <span class="token operator">is</span> Result number<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
<span class="token keyword">select</span> instr<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token operator">||</span>arg2<span class="token operator">||</span><span class="token string">&#39;,&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token operator">||</span>arg1<span class="token operator">||</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token keyword">into</span> Result <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
<span class="token keyword">return</span><span class="token punctuation">(</span>Result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span> find_in_set<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-项目前置配置" tabindex="-1"><a class="header-anchor" href="#_3-3-项目前置配置" aria-hidden="true">#</a> 3.3 项目前置配置</h3><h4 id="_3-3-1-数据库工具类" tabindex="-1"><a class="header-anchor" href="#_3-3-1-数据库工具类" aria-hidden="true">#</a> 3.3.1 数据库工具类</h4><p>根据不同数据库获取不同的函数</p><p>例如</p><ul><li>mysql 的日期：now()</li><li>oracle的当前时间：sysdate</li></ul><h5 id="_3-3-1-1-dbutils" tabindex="-1"><a class="header-anchor" href="#_3-3-1-1-dbutils" aria-hidden="true">#</a> 3.3.1.1 DBUtils</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 数据库操作工具类
 * 此工具类目的是为了兼容多个数据库
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBUtils</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">VendorDatabaseIdProvider</span> databaseIdProvider<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">private</span> <span class="token class-name">DataSource</span> dataSource<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DBType</span> <span class="token constant">DB_TYPE</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DBUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 初始化</span>
        <span class="token class-name">String</span> databaseId <span class="token operator">=</span> databaseIdProvider<span class="token punctuation">.</span><span class="token function">getDatabaseId</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">DB_TYPE</span> <span class="token operator">=</span> <span class="token class-name">DBType</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">upperCase</span><span class="token punctuation">(</span>databaseId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 获得当前时间
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DB_TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">DBType</span><span class="token punctuation">.</span><span class="token constant">MYSQL</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token constant">DB_TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">DBType</span><span class="token punctuation">.</span><span class="token constant">POSTGRESQL</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token string">&quot;now()&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DB_TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">DBType</span><span class="token punctuation">.</span><span class="token constant">ORACLE</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token string">&quot;sysdate&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3-1-2-dbtype" tabindex="-1"><a class="header-anchor" href="#_3-3-1-2-dbtype" aria-hidden="true">#</a> 3.3.1.2 DBType</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 支持数据库类型
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">DBType</span> <span class="token punctuation">{</span>
    <span class="token constant">MYSQL</span><span class="token punctuation">,</span>
    <span class="token constant">ORACLE</span><span class="token punctuation">,</span>
    <span class="token constant">POSTGRESQL</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-3-1-3-引用" tabindex="-1"><a class="header-anchor" href="#_3-3-1-3-引用" aria-hidden="true">#</a> 3.3.1.3 引用</h5><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> update sys_config
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>configName != null and configName != &#39;&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>config_name = #{configName},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
            update_time = \${@com.faduit.common.utils.DBUtils@getCurrentTime()}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">&gt;</span></span>
        where config_id = #{configId}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-适配" tabindex="-1"><a class="header-anchor" href="#_4-适配" aria-hidden="true">#</a> 4. 适配</h2><h3 id="_4-1-自增id问题" tabindex="-1"><a class="header-anchor" href="#_4-1-自增id问题" aria-hidden="true">#</a> 4.1 自增id问题</h3><ul><li>mysql 的字段本身就可以设置自增</li><li>Oracle 中使用序列做自增id</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selectKey</span> <span class="token attr-name">keyProperty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userId<span class="token punctuation">&quot;</span></span> <span class="token attr-name">order</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BEFORE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Long<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;oracle&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				select seq_sys_user.nextval as userId from DUAL
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;postgresql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				select nextval(&#39;seq_sys_user&#39;::regclass) as userId
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;mysql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				select nextval(&#39;seq_sys_user&#39;) as userId
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selectKey</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-分页问题" tabindex="-1"><a class="header-anchor" href="#_4-2-分页问题" aria-hidden="true">#</a> 4.2 分页问题</h3><ul><li>Mysql :使用<strong>limit</strong></li><li>oracle ：使用 <strong>rownum</strong></li></ul><p>例如这里需要查询是否已经存在用户名</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkUserNameUnique<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>String<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;oracle&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			select count(1) from sys_user where user_name = #{userName} and rownum <span class="token cdata">&lt;![CDATA[ &lt;= ]]&gt;</span> 1
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;postgresql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			select count(1) from sys_user where user_name = #{userName} limit 1
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;mysql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			select count(1) from sys_user where user_name = #{userName} limit 1
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-null值转换为一个实际的值" tabindex="-1"><a class="header-anchor" href="#_4-3-null值转换为一个实际的值" aria-hidden="true">#</a> 4.3 null值转换为一个实际的值</h3><ul><li>mysql: 使用ifnull 函数</li><li>oracle： 使用nvl 函数</li><li>postgresql：使用COALESCE 函数</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;oracle&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			select distinct m.menu_id,  nvl(m.perms,&#39;&#39;) as perms
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;postgresql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			select distinct m.menu_id, COALESCE(m.perms,&#39;&#39;) as perms
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;mysql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			select distinct m.menu_id, ifnull(m.perms,&#39;&#39;) as perms
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-批量更新语法" tabindex="-1"><a class="header-anchor" href="#_4-4-批量更新语法" aria-hidden="true">#</a> 4.4 批量更新语法</h3><ul><li>mysql: 一个 insert into 插入values的值可以为多个，逗号分隔</li><li>oracle：insert all 插入多个 into table，最后 SELECT 1 FROM DUAL</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>batchUserRole<span class="token punctuation">&quot;</span></span> <span class="token attr-name">useGeneratedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;oracle&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			insert all
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				into sys_user_role(user_id, role_id) values (#{item.userId},#{item.roleId})
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">&gt;</span></span>
			SELECT 1 FROM DUAL
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_databaseId == &#39;mysql&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
			insert into sys_user_role(user_id, role_id) values
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
				(#{item.userId},#{item.roleId})
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-获取当前时间" tabindex="-1"><a class="header-anchor" href="#_4-5-获取当前时间" aria-hidden="true">#</a> 4.5 获取当前时间</h3><p>引入外部函数</p><ul><li>mysql 的日期：now()</li><li>oracle的当前时间：sysdate</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> update sys_config
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>configName != null and configName != &#39;&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>config_name = #{configName},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
            update_time = \${@com.faduit.common.utils.DBUtils@getCurrentTime()}
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">&gt;</span></span>
        where config_id = #{configId}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","mybatis-z-adapter-db.html.vue"]]);export{r as default};
