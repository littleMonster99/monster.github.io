import{_ as s,W as t,X as g,Y as a,Z as i,$ as n,a0 as o,D as c}from"./framework-f64bc974.js";const l={},r=o(`<h1 id="idea-插件" tabindex="-1"><a class="header-anchor" href="#idea-插件" aria-hidden="true">#</a> IDEA 插件</h1><p>工欲善其事必先利其器，分享几个比较好用的IDEA 插件</p><h2 id="lombok" tabindex="-1"><a class="header-anchor" href="#lombok" aria-hidden="true">#</a> <strong>Lombok</strong></h2><blockquote><p>Lombok目前已经是开发Java应用的标配了，不仅SpringBoot默认支持它，连IDEA也内置了Lombok插件，无需安装即可使用。Lombok是一款Java代码功能增强库，通过Lombok的注解，你可以不用再写getter、setter、equals等方法，Lombok将在编译时为你自动生成。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170738919.png" alt="image-20220830170738919" tabindex="0" loading="lazy"><figcaption>image-20220830170738919</figcaption></figure><p>举个例子，当我们给一个类添加@Getter和@Setter注解后；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 修改订单费用信息参数
 * Created by macro on 2018/10/29.
 */</span>
<span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@Setter</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OmsMoneyInfoParam</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;订单ID&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> orderId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;运费金额&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> freightAmount<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;管理员后台调整订单所使用的折扣金额&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> discountAmount<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;订单状态：0-&gt;待付款；1-&gt;待发货；2-&gt;已发货；3-&gt;已完成；4-&gt;已关闭；5-&gt;无效订单&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),p={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247488419&idx=1&sn=8fcd89fe0727a5b3fc4179db3aaf9891&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},d=o('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170825950.png" alt="image-20220830170825950" tabindex="0" loading="lazy"><figcaption>image-20220830170825950</figcaption></figure><h2 id="maven-helper-maven依赖分析工具" tabindex="-1"><a class="header-anchor" href="#maven-helper-maven依赖分析工具" aria-hidden="true">#</a> <strong>Maven Helper</strong>（Maven依赖分析工具）</h2><blockquote><p>解决Maven依赖冲突的好帮手，可以快速查找项目中的依赖冲突，并予以解决！</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170334839.png" alt="image-20220830170334839" tabindex="0" loading="lazy"><figcaption>image-20220830170334839</figcaption></figure><p>我们可以通过<code>pom.xml</code>文件底部的<code>依赖分析</code>标签页查看当前项目中的所有依赖。</p><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/640.png" alt="640"><p>通过<code>冲突</code>按钮我们可以筛选出所有冲突的依赖，当前项目<code>guava</code>依赖有冲突，目前使用的是<code>18.0</code>版本。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170442742.png" alt="image-20220830170442742" tabindex="0" loading="lazy"><figcaption>image-20220830170442742</figcaption></figure><p>选中有冲突的依赖，点击<code>Exclude</code>按钮可以直接排除该依赖。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170500791.png" alt="image-20220830170500791" tabindex="0" loading="lazy"><figcaption>image-20220830170500791</figcaption></figure><p>同时<code>pom.xml</code>中也会对该依赖添加<code>&lt;exclusion&gt;</code>标签，是不是很方便啊！</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170517332.png" alt="image-20220830170517332" tabindex="0" loading="lazy"><figcaption>image-20220830170517332</figcaption></figure><h2 id="restfultoolkit" tabindex="-1"><a class="header-anchor" href="#restfultoolkit" aria-hidden="true">#</a> RestfulToolkit</h2><p>一套 RESTful 服务开发辅助工具集。</p><p>1.根据 URL 直接跳转到对应的方法定义 ( 快捷键搜索 Ctrl + Alt + N 或者 Ctrl + \\ ); ---这个个人感觉非常好用，和Ctrl + F一样重要。</p><p>2.提供了一个 Services tree 的显示窗口;</p><p>3.一个简单的 http 请求工具;</p><p>4.在请求方法上添加了有用功能: 复制生成 URL;,复制方法参数...</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830172628438.png" alt="image-20220830172628438" tabindex="0" loading="lazy"><figcaption>image-20220830172628438</figcaption></figure><h2 id="save-actions-优化保存插件" tabindex="-1"><a class="header-anchor" href="#save-actions-优化保存插件" aria-hidden="true">#</a> Save Actions（优化保存插件）</h2><p>Save Actions是IDEA一款格式自动化的插件，当程序员将代码保存后，插件会自动进行格式化，代码洁癖者的福音。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171935784.png" alt="image-20220830171935784" tabindex="0" loading="lazy"><figcaption>image-20220830171935784</figcaption></figure><h2 id="codeglance-代码编辑区缩略图插件" tabindex="-1"><a class="header-anchor" href="#codeglance-代码编辑区缩略图插件" aria-hidden="true">#</a> CodeGlance (代码编辑区缩略图插件)</h2><p>CodeGlance是一款代码编辑区缩略图插件，可以快速定位代码，使用起来比拖动滚动条方便多了</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830172526366.png" alt="image-20220830172526366" tabindex="0" loading="lazy"><figcaption>image-20220830172526366</figcaption></figure><h2 id="mybatisx" tabindex="-1"><a class="header-anchor" href="#mybatisx" aria-hidden="true">#</a> <strong>MyBatisX</strong></h2><blockquote><p>MybatisX是一款基于IDEA的快速开发插件，由MyBatis-Plus团队开发维护，提示很全功能也很强大。支持xml和Mapper接口之间的跳转，自带图形化的代码生成器，可以通过类似JPA的方式，直接根据方法名称生成SQL实现。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170916236.png" alt="image-20220830170916236" tabindex="0" loading="lazy"><figcaption>image-20220830170916236</figcaption></figure><p>我们点击Mapper接口方法左侧的图标可以直接跳转到xml中对应的SQL实现，在xml点击左侧图标也可以直接跳转到Mapper接口中对应的方法。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/640 (2).gif" alt="640 (2)" tabindex="0" loading="lazy"><figcaption>640 (2)</figcaption></figure>',30),m={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247502551&idx=1&sn=5017e6bf5b9aaabebcad8fb9f3fc7d89&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},u=o('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/640 (3).gif" alt="640 (3)" tabindex="0" loading="lazy"><figcaption>640 (3)</figcaption></figure><h2 id="gsonformatplus" tabindex="-1"><a class="header-anchor" href="#gsonformatplus" aria-hidden="true">#</a> GsonFormatPlus</h2><blockquote><p>一款能根据JSON字符串自动生成实体类的插件，支持Lombok。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830165920278.png" alt="image-20220830165920278" tabindex="0" loading="lazy"><figcaption>image-20220830165920278</figcaption></figure><p>选择类名，右键生成，输入JSON字符串即可快速生成对应实体类。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/640.gif" alt="640" tabindex="0" loading="lazy"><figcaption>640</figcaption></figure><h2 id="alibaba-java-coding-guidelines" tabindex="-1"><a class="header-anchor" href="#alibaba-java-coding-guidelines" aria-hidden="true">#</a> <strong>Alibaba Java Coding Guidelines</strong></h2><blockquote><p>阿里巴巴《Java 开发手册》配套插件，可以实时检测代码中不符合手册规约的地方，助你码出高效，码出质量。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170124136.png" alt="image-20220830170124136" tabindex="0" loading="lazy"><figcaption>image-20220830170124136</figcaption></figure><p>比如说手册里有这么一条：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170143315.png" alt="image-20220830170143315" tabindex="0" loading="lazy"><figcaption>image-20220830170143315</figcaption></figure><p>当我们违反手册规约时，该插件会自动检测并进行提示。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170205756.png" alt="image-20220830170205756" tabindex="0" loading="lazy"><figcaption>image-20220830170205756</figcaption></figure><p>同时提供了一键检测所有代码规约情况和切换语言的功能。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170232658.png" alt="image-20220830170232658" tabindex="0" loading="lazy"><figcaption>image-20220830170232658</figcaption></figure><p>如果你想修改某条规约的检测规则的话，可以通过设置的<code>Editor-&gt;Inspections</code>进行修改。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170254540.png" alt="image-20220830170254540" tabindex="0" loading="lazy"><figcaption>image-20220830170254540</figcaption></figure><h2 id="arthas-idea" tabindex="-1"><a class="header-anchor" href="#arthas-idea" aria-hidden="true">#</a> <strong>arthas idea</strong></h2><blockquote><p>基于IDEA开发的Arthas命令生成插件，支持Arthas官方常用的命令，比如 watch、trace、ognl static、ognl bean method、field、monitor、stack 、tt等命令。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171417627.png" alt="image-20220830171417627" tabindex="0" loading="lazy"><figcaption>image-20220830171417627</figcaption></figure>',20),b={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247499910&idx=1&sn=05c3177e74009bcaf309d5abd27ec4d5&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},f=o('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171438377.png" alt="image-20220830171438377" tabindex="0" loading="lazy"><figcaption>image-20220830171438377</figcaption></figure><h2 id="key-promoter-x" tabindex="-1"><a class="header-anchor" href="#key-promoter-x" aria-hidden="true">#</a> <strong>Key Promoter X</strong></h2><blockquote><p>Key Promoter X 是一款帮助你快速学习IDEA快捷键的插件，当你在IDEA中用鼠标点击某些功能时，它会自动提示你使用该功能的快捷键。它能让你更轻松地摆脱使用鼠标功能，从而只使用键盘来开发，这大概是刚开始使用IDEA的程序员最需要的插件了。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830170623783.png" alt="image-20220830170623783" tabindex="0" loading="lazy"><figcaption>image-20220830170623783</figcaption></figure><p>当我们使用鼠标完成某些工作时，Key Promoter X会提示对应的快捷键，方便我们更快地掌握IDEA的快捷键。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/640 (1).gif" alt="640 (1)" tabindex="0" loading="lazy"><figcaption>640 (1)</figcaption></figure><h2 id="sequencediagram-方法调的深度-生产时序图" tabindex="-1"><a class="header-anchor" href="#sequencediagram-方法调的深度-生产时序图" aria-hidden="true">#</a> <strong>SequenceDiagram</strong>（方法调的深度，生产时序图）</h2><blockquote><p>SequenceDiagram是一款能根据代码生成时序图的插件，还支持在时序图上直接导航到对应代码以及导出为图片或PlantUML文件。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171149521.png" alt="image-20220830171149521" tabindex="0" loading="lazy"><figcaption>image-20220830171149521</figcaption></figure>',9),z={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247502397&idx=1&sn=f741bdcb205cc3304ae754fe9403ae7e&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},h=a("figure",null,[a("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171209255.png",alt:"image-20220830171209255",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20220830171209255")],-1),y=a("h2",{id:"plantuml",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#plantuml","aria-hidden":"true"},"#"),i(),a("strong",null,"PlantUML")],-1),k=a("blockquote",null,[a("p",null,"PlantUML是一款开源的UML图绘制工具，支持通过文本来生成图形，使用起来非常高效。可以支持时序图、类图、对象图、活动图、思维导图等图形的绘制。")],-1),x=a("figure",null,[a("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171240320.png",alt:"image-20220830171240320",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20220830171240320")],-1),_={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247494438&idx=1&sn=d077f02bbe50276c9939d0c652809f4b&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},v=a("figure",null,[a("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/640 (4).gif",alt:"640 (4)",tabindex:"0",loading:"lazy"}),a("figcaption",null,"640 (4)")],-1),j=a("h2",{id:"docker",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),i(),a("strong",null,"Docker")],-1),q=a("blockquote",null,[a("p",null,"IDEA官方提供的Docker插件，已内置，支持远程Docker环境的镜像和容器管理，同时支持使用Docker Compose实现批量部署。")],-1),M=a("figure",null,[a("img",{src:"https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171521120.png",alt:"image-20220830171521120",tabindex:"0",loading:"lazy"}),a("figcaption",null,"image-20220830171521120")],-1),A={href:"https://mp.weixin.qq.com/s?__biz=MzU1Nzg4NjgyMw==&mid=2247500482&idx=1&sn=713a30c88cea125f4768e6a0df939600&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},w=o('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171535473.png" alt="image-20220830171535473" tabindex="0" loading="lazy"><figcaption>image-20220830171535473</figcaption></figure><h2 id="grep-console" tabindex="-1"><a class="header-anchor" href="#grep-console" aria-hidden="true">#</a> <strong>Grep Console</strong></h2><blockquote><p>一款帮你分析控制台日志的插件，可以对不同级别的日志进行不同颜色的高亮显示，还可以用来按关键字搜索日志内容。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171557762.png" alt="image-20220830171557762" tabindex="0" loading="lazy"><figcaption>image-20220830171557762</figcaption></figure><p>当项目打印日志的时候，可以发现不同日志级别的日志会以不同颜色来显示。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171614137.png" alt="image-20220830171614137" tabindex="0" loading="lazy"><figcaption>image-20220830171614137</figcaption></figure><p>如果你需要修改配色方案的话，可以通过<code>Tools</code>打开该插件的配置菜单。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171626774.png" alt="image-20220830171626774" tabindex="0" loading="lazy"><figcaption>image-20220830171626774</figcaption></figure><p>然后通过配置菜单修改配色方案。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171641735.png" alt="image-20220830171641735" tabindex="0" loading="lazy"><figcaption>image-20220830171641735</figcaption></figure><p>可以通过在控制台右键并使用<code>Grep</code>按钮来调出日志分析的窗口。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171654853.png" alt="image-20220830171654853" tabindex="0" loading="lazy"><figcaption>image-20220830171654853</figcaption></figure><p>然后直接通过关键字来搜索即可。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171705764.png" alt="image-20220830171705764" tabindex="0" loading="lazy"><figcaption>image-20220830171705764</figcaption></figure><h2 id="statistic" tabindex="-1"><a class="header-anchor" href="#statistic" aria-hidden="true">#</a> <strong>Statistic</strong></h2><blockquote><p>一款代码统计工具，可以用来统计当前项目中代码的行数和大小。</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171751793.png" alt="image-20220830171751793" tabindex="0" loading="lazy"><figcaption>image-20220830171751793</figcaption></figure><p>我们可以通过顶部菜单中的<code>View-&gt;Tool Windows-&gt;Statistic</code>按钮开启该功能。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171806817.png" alt="image-20220830171806817" tabindex="0" loading="lazy"><figcaption>image-20220830171806817</figcaption></figure><p>此时就可以看到我们项目代码的统计情况了，比如我的开源项目<code>mall</code>中<code>java</code>代码大小为<code>2818kB</code>，行数为<code>85645</code>。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830171820145.png" alt="image-20220830171820145" tabindex="0" loading="lazy"><figcaption>image-20220830171820145</figcaption></figure><h2 id="javadoc-javadoc生成插件" tabindex="-1"><a class="header-anchor" href="#javadoc-javadoc生成插件" aria-hidden="true">#</a> Javadoc（Javadoc生成插件）</h2><p>该插件可以在java类元素（如字段、方法等）上生成javadoc的插件。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220830172336635.png" alt="image-20220830172336635" tabindex="0" loading="lazy"><figcaption>image-20220830172336635</figcaption></figure><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>',25),D={href:"https://mp.weixin.qq.com/s/KiXWyhteyAiHo6FkYr2wXg",target:"_blank",rel:"noopener noreferrer"},L={href:"https://developer.aliyun.com/article/803464",target:"_blank",rel:"noopener noreferrer"};function I(E,S){const e=c("ExternalLinkIcon");return t(),g("div",null,[r,a("p",null,[i("Lombok就会为我们自动生成所有属性的Getter和Setter方法，无需我们再手写，具体使用可以参考"),a("a",p,[i("Lombok的使用"),n(e)]),i(" 。")]),d,a("p",null,[i("当我们创建符合JPA规范的方法时，能直接生成SQL实现无需手写，MyBatisX的功能很强大，详细使用可以参考"),a("a",m,[i("MybatisX插件的使用"),n(e)]),i(" 。")]),u,a("p",null,[i("直接打开右键菜单，选择Arthas命令即可快速生成命令，具体使用可以参考"),a("a",b,[i("Arthas使用教程"),n(e)]),i(" 。")]),f,a("p",null,[i("下面是一张使用SequenceDiagram制作的时序图，还是非常不错的，具体使用可以参考"),a("a",z,[i("SequenceDiagram插件的使用"),n(e)]),i(" 。")]),h,y,k,x,a("p",null,[i("下面使用PlantUML来绘制一张流程图，可以实时预览，速度也很快，具体使用可以参考"),a("a",_,[i("PlantUML插件的使用"),n(e)]),i(" 。")]),v,j,q,M,a("p",null,[i("通过它能自动打包应用的镜像，jar包会直接上传到远程服务器并打包成镜像，具体使用可以参考"),a("a",A,[i("IDEA官方Docker插件的使用"),n(e)]),i(" 。")]),w,a("p",null,[a("a",D,[i("看了我常用的IDEA插件，同事也开始悄悄安装了..."),n(e)])]),a("p",null,[a("a",L,[i("IntelliJ IDEA常用插件推荐"),n(e)])])])}const P=s(l,[["render",I],["__file","idea-plugin.html.vue"]]);export{P as default};
