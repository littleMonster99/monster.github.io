import{_ as i,W as e,X as o,a0 as d}from"./framework-f64bc974.js";const a={},n=d('<h1 id="css属性box-sizing" tabindex="-1"><a class="header-anchor" href="#css属性box-sizing" aria-hidden="true">#</a> CSS属性box-sizing</h1><h2 id="_1-问题原理简介" tabindex="-1"><a class="header-anchor" href="#_1-问题原理简介" aria-hidden="true">#</a> 1. 问题原理简介</h2><p>CSS的盒子模型(box model)，它控制着页面各元素的宽与高，盒子模型多少会让人产生一些困惑，尤其当涉及到高度和宽度计算的时候。<strong>真正盒子的宽度(在页面呈现出来的宽度)和高度，需要加上一些其它的属性</strong>，例如：</p><ul><li><code>padding</code> + <code>border</code> + <code>width</code>= 盒子的宽度</li><li><code>padding</code>+ <code>border</code> + <code>height</code> = 盒子的高度</li></ul><p>这看起来并不是那么直观，那么我们看一个图：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/img01.png" alt="image-20200828153545384" tabindex="0" loading="lazy"><figcaption>image-20200828153545384</figcaption></figure><p>我们要设置这样一个宽200px的盒子的时候，还需要去计算border和padding 实现太麻烦了，如何解决呢？我们可以设置box-sizing 的属性值为<strong>border-box</strong></p><h2 id="_2-box-sizing的设定值" tabindex="-1"><a class="header-anchor" href="#_2-box-sizing的设定值" aria-hidden="true">#</a> 2. box-sizing的设定值</h2><ul><li><p>content-box：预设值，实际宽高＝所设定的数值＋border＋padding</p></li><li><p><strong>border-box</strong>：实际宽高＝所设定的数值(已包含border和padding)</p></li></ul>',9),r=[n];function s(c,t){return e(),o("div",null,r)}const l=i(a,[["render",s],["__file","css-box-sizing.html.vue"]]);export{l as default};
