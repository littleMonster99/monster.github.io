import{_ as a,W as i,X as e,a0 as n}from"./framework-f64bc974.js";const l={},r=n('<h1 id="联合索引-最左匹配原则成因" tabindex="-1"><a class="header-anchor" href="#联合索引-最左匹配原则成因" aria-hidden="true">#</a> 联合索引-最左匹配原则成因</h1><h2 id="_1-什么是联合索引" tabindex="-1"><a class="header-anchor" href="#_1-什么是联合索引" aria-hidden="true">#</a> 1. 什么是联合索引</h2><p>联合索引就是由多列组合成的索引</p><h2 id="_2-什么是最左匹配原则" tabindex="-1"><a class="header-anchor" href="#_2-什么是最左匹配原则" aria-hidden="true">#</a> 2. 什么是最左匹配原则</h2><h3 id="_2-1-简单概述" tabindex="-1"><a class="header-anchor" href="#_2-1-简单概述" aria-hidden="true">#</a> 2.1 简单概述</h3><p>假设我们有两列a，b。我们对ab设置一个联合索引，我们再where 语句中</p><ul><li>调用a=？ and b=?,他就会走ab索引。</li><li>调用where a=？ 他也会走ab索引</li><li>调用where b=？，不走ab 索引</li></ul><h3 id="_2-2-定义" tabindex="-1"><a class="header-anchor" href="#_2-2-定义" aria-hidden="true">#</a> 2.2 定义</h3><ol><li>mysql 会一直向右匹配知道遇到范围查询（&gt;、&lt;、between、like）就会停止匹配，比如a=3 and b=4 and c&gt;5 and d=6 如果建立（a,b,c,d）顺序的所有，d是用不到索引的，如果建立（a,b,d,c）的索引则都可以用到，a、b、d的顺序可以任意调整</li><li>=和in 可以乱序，比如a=1 and b=2 and c=3 建立（a,b,c）索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式</li></ol><h2 id="_3-示例" tabindex="-1"><a class="header-anchor" href="#_3-示例" aria-hidden="true">#</a> 3. 示例</h2><ol><li><p>包含联合索引的表信息</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210405235609971.png" alt="image-20210405235609971" tabindex="0" loading="lazy"><figcaption>image-20210405235609971</figcaption></figure></li><li><p>走联合索引情况</p><p>查询</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210405235710376.png" alt="image-20210405235710376" tabindex="0" loading="lazy"><figcaption>image-20210405235710376</figcaption></figure><p>使用explain 查询</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210405235731210.png" alt="image-20210405235731210" tabindex="0" loading="lazy"><figcaption>image-20210405235731210</figcaption></figure></li><li><p>我们删了area，不走索引</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20210406000020398.png" alt="image-20210406000020398" tabindex="0" loading="lazy"><figcaption>image-20210406000020398</figcaption></figure><p>此时的type：ALL</p></li></ol><h2 id="_4-成因分析" tabindex="-1"><a class="header-anchor" href="#_4-成因分析" aria-hidden="true">#</a> 4. 成因分析</h2><p>建立复合索引会对第一个字段排序，再对第二个字段排序，类似于order by 字段1 ，再order by 字段2、所以的第一个字段是绝对有序的，所以直接使用第二个字段是用不到索引的</p>',13),t=[r];function d(g,s){return i(),e("div",null,t)}const o=a(l,[["render",d],["__file","mysql-c-index-right.html.vue"]]);export{o as default};
