import{_ as i,W as a,X as s,Y as e,Z as d,$ as t,a0 as r,D as l}from"./framework-f64bc974.js";const c={},u=r(`<h1 id="nginx设置开机自启动" tabindex="-1"><a class="header-anchor" href="#nginx设置开机自启动" aria-hidden="true">#</a> nginx设置开机自启动</h1><blockquote><p>centos 7开机自启动有两种不同的设置方式，如果是yum直接安装的软件服务，则直接开启即可，如果是源码编译安装的，则需要在系统服务（system）创建service文件，然后才能设置。</p></blockquote><h2 id="_1-前言" tabindex="-1"><a class="header-anchor" href="#_1-前言" aria-hidden="true">#</a> 1. 前言</h2><p>centos 7以上是用Systemd进行系统初始化的，Systemd 是 Linux 系统中最新的初始化系统（init），它主要的设计目标是克服 sysvinit 固有的缺点，提高系统的启动速度。</p><h2 id="_2-安装方式为-yum直接安装nginx服务" tabindex="-1"><a class="header-anchor" href="#_2-安装方式为-yum直接安装nginx服务" aria-hidden="true">#</a> 2. 安装方式为：yum直接安装Nginx服务</h2><p>Systemd服务文件以<code>.service</code>结尾，比如现在要建立nginx为开机启动，如果用<code>yum install</code>命令安装的，yum命令会自动创建<code>nginx.service</code>文件，直接用命令:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemcel <span class="token builtin class-name">enable</span> nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-安装方式为-源码编译安装" tabindex="-1"><a class="header-anchor" href="#_3-安装方式为-源码编译安装" aria-hidden="true">#</a> 3.安装方式为： 源码编译安装</h2><p>在这里我是用源码编译安装的，所以要手动创建<code>nginx.service</code>服务文件。开机没有登陆情况下就能运行的程序，存在系统服务（system）里，即：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/lib/systemd/system/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-1-创建nginx-service文件" tabindex="-1"><a class="header-anchor" href="#_3-1-创建nginx-service文件" aria-hidden="true">#</a> 3.1 创建nginx.service文件</h3><p>在系统服务目录里创建nginx.service文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim /lib/systemd/system/nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>写入内容如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[Unit]
Description=nginx
After=network.target
  
[Service]
Type=forking
ExecStart=/usr/local/nginx/sbin/nginx
ExecReload=/usr/local/nginx/sbin/nginx -s reload
ExecStop=/usr/local/nginx/sbin/nginx -s quit
PrivateTmp=true
  
[Install]
WantedBy=multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>[Unit]:服务的说明</strong></p><p>Description:描述服务 After:描述服务类别 [Service]服务运行参数的设置 Type=forking是后台运行的形式 ExecStart为服务的具体运行命令 ExecReload为重启命令 ExecStop为停止命令 PrivateTmp=True表示给服务分配独立的临时空间 注意：[Service]的启动、重启、停止命令全部要求使用绝对路径 [Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</p><h3 id="_3-2-设置开机启动" tabindex="-1"><a class="header-anchor" href="#_3-2-设置开机启动" aria-hidden="true">#</a> 3.2 设置开机启动</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl enable nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-查看nginx状态" tabindex="-1"><a class="header-anchor" href="#_3-3-查看nginx状态" aria-hidden="true">#</a> 3.3 查看nginx状态</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl status nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-其他命令" tabindex="-1"><a class="header-anchor" href="#_3-4-其他命令" aria-hidden="true">#</a> 3.4 其他命令</h3><p>启动nginx服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl start nginx.service　
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置开机自启动</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl enable nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>停止开机自启动</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl disable nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看服务当前状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl status nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新启动服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl status nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看所有已启动的服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl list-units --type=service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,35),v={href:"https://segmentfault.com/a/1190000022665540",target:"_blank",rel:"noopener noreferrer"};function o(x,m){const n=l("ExternalLinkIcon");return a(),s("div",null,[u,e("p",null,[e("a",v,[d("CentOS7.5 设置 Nginx 开机自启动"),t(n)])])])}const h=i(c,[["render",o],["__file","nginx-y-auto-started.html.vue"]]);export{h as default};
