import{_ as i,W as c,X as l,Y as n,Z as s,$ as e,a0 as t,D as o}from"./framework-f64bc974.js";const p={},u=t(`<h1 id="docker基础-仓库-镜像-容器详解" tabindex="-1"><a class="header-anchor" href="#docker基础-仓库-镜像-容器详解" aria-hidden="true">#</a> Docker基础 - 仓库，镜像，容器详解</h1><h2 id="_1-仓库-镜像-容器的关系" tabindex="-1"><a class="header-anchor" href="#_1-仓库-镜像-容器的关系" aria-hidden="true">#</a> 1. 仓库，镜像，容器的关系</h2><blockquote><p>我们再回顾下仓库，镜像，容器的关系（这是官网的图）</p></blockquote><p>通过下图可以得知，<code>Docker</code>在运行时分为<code>Docker引擎（服务端守护进程）</code>和<code>客户端工具</code>，我们日常使用各种<code>docker命令</code>，其实就是在使用<code>客户端工具</code>与<code>Docker</code>引擎进行交互。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220613201437616.png" alt="image-20220613201437616" tabindex="0" loading="lazy"><figcaption>image-20220613201437616</figcaption></figure><h2 id="_2-docker-镜像" tabindex="-1"><a class="header-anchor" href="#_2-docker-镜像" aria-hidden="true">#</a> 2. Docker 镜像</h2><p>当运行容器时，使用的镜像如果在本地中不存在，docker 就会自动从 docker 镜像仓库中下载，默认是从 Docker Hub 公共镜像源下载。</p><p>下面我们来学 1、管理和使用本地 Docker 主机镜像 2、创建镜像</p><h3 id="_2-1-镜像列表" tabindex="-1"><a class="header-anchor" href="#_2-1-镜像列表" aria-hidden="true">#</a> 2.1 镜像列表</h3><p>我们可以使用 docker images 来列出本地主机上的镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@iZwz914d1peizv4h7laju4Z ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY        TAG            IMAGE ID       CREATED        SIZE
minio/minio       latest         1afc478341fd   <span class="token number">8</span> months ago   254MB
rabbitmq          <span class="token number">3</span>-management   3e83da0dc938   <span class="token number">9</span> months ago   253MB
mongo             latest         0bcbeb494bed   <span class="token number">9</span> months ago   684MB

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">REPOSITORY</td><td style="text-align:left;">镜像在仓库中的名称</td></tr><tr><td style="text-align:left;">TAG</td><td style="text-align:left;">镜像标签</td></tr><tr><td style="text-align:left;">IMAGE ID</td><td style="text-align:left;">镜像 ID</td></tr><tr><td style="text-align:left;">CREATED</td><td style="text-align:left;">镜像的创建日期</td></tr><tr><td style="text-align:left;">SIZE</td><td style="text-align:left;">镜像大小</td></tr></tbody></table><p>这些镜像都是存储在<code>Docker</code>宿主机的<code>/var/lib/docker</code>目录下</p><h3 id="_2-2-查找镜像" tabindex="-1"><a class="header-anchor" href="#_2-2-查找镜像" aria-hidden="true">#</a> 2.2 查找镜像</h3><blockquote><p>以查找MySQL的镜像为例：</p></blockquote>`,15),d=n("strong",null,"通过Docker Hub 进行查找",-1),r={href:"https://hub.docker.com/search?q=mysql&type=image",target:"_blank",rel:"noopener noreferrer"},b=t(`<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220613202907992.png" alt="image-20220613202907992" tabindex="0" loading="lazy"><figcaption>image-20220613202907992</figcaption></figure><ul><li><p>方式二：<strong>使用 docker search 命令来搜索镜像</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker search mysql</span>
NAME                              DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED
mysql                             MySQL is a widely used, open-source relation…   <span class="token number">9132</span>                <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
mariadb                           MariaDB is a community-developed fork of MyS…   <span class="token number">3233</span>                <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
mysql/mysql-server                Optimized MySQL Server Docker images. Create…   <span class="token number">676</span>                                     <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
centos/mysql-57-centos7           MySQL <span class="token number">5.7</span> SQL database server                   <span class="token number">68</span>
mysql/mysql-cluster               Experimental MySQL Cluster Docker images. Cr…   <span class="token number">62</span>
centurylink/mysql                 Image containing mysql. Optimized to be link…   <span class="token number">61</span>                                      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
deitch/mysql-backup               REPLACED<span class="token operator">!</span> Please use http://hub.docker.com/r…   <span class="token number">41</span>                                      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
bitnami/mysql                     Bitnami MySQL Docker Image                      <span class="token number">35</span>                                      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
tutum/mysql                       Base <span class="token function">docker</span> image to run a MySQL database se…   <span class="token number">34</span>
schickling/mysql-backup-s3        Backup MySQL to S3 <span class="token punctuation">(</span>supports periodic backup…   <span class="token number">29</span>                                      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
prom/mysqld-exporter                                                              <span class="token number">26</span>                                      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
linuxserver/mysql                 A Mysql container, brought to you by LinuxSe…   <span class="token number">24</span>
centos/mysql-56-centos7           MySQL <span class="token number">5.6</span> SQL database server                   <span class="token number">19</span>
circleci/mysql                    MySQL is a widely used, open-source relation…   <span class="token number">18</span>
mysql/mysql-router                MySQL Router provides transparent routing be…   <span class="token number">14</span>
arey/mysql-client                 Run a MySQL client from a <span class="token function">docker</span> container      <span class="token number">13</span>                                      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
databack/mysql-backup             Back up mysql databases to<span class="token punctuation">..</span>. anywhere<span class="token operator">!</span>         <span class="token number">10</span>
openshift/mysql-55-centos7        DEPRECATED: A Centos7 based MySQL v5.5 image…   <span class="token number">6</span>
fradelg/mysql-cron-backup         MySQL/MariaDB database backup using <span class="token function">cron</span> tas…   <span class="token number">5</span>                                       <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
genschsa/mysql-employees          MySQL Employee Sample Database                  <span class="token number">4</span>                                       <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
devilbox/mysql                    Retagged MySQL, MariaDB and PerconaDB offici…   <span class="token number">2</span>
ansibleplaybookbundle/mysql-apb   An APB <span class="token function">which</span> deploys RHSCL MySQL                <span class="token number">2</span>                                       <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
jelastic/mysql                    An image of the MySQL database server mainta…   <span class="token number">1</span>
monasca/mysql-init                A minimal decoupled init container <span class="token keyword">for</span> mysql    <span class="token number">0</span>
widdpim/mysql-client              Dockerized MySQL Client <span class="token punctuation">(</span><span class="token number">5.7</span><span class="token punctuation">)</span> including Curl…   <span class="token number">0</span>                                       <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><table><thead><tr><th>属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>NAME</td><td style="text-align:left;">镜像名称</td></tr><tr><td>DESCRIPTION</td><td style="text-align:left;">镜像描述</td></tr><tr><td>STARS</td><td style="text-align:left;">用户评价</td></tr><tr><td>OFFICIAL</td><td style="text-align:left;">是否为官方构建</td></tr><tr><td>AUTOMATED</td><td style="text-align:left;">Docker Hub 自动构建</td></tr></tbody></table><h3 id="_2-3-拉取镜像" tabindex="-1"><a class="header-anchor" href="#_2-3-拉取镜像" aria-hidden="true">#</a> 2.3 拉取镜像</h3><p>拉取镜像就是从中央仓库下载镜像到本地。</p><p>执行命令：<code>docker pull 镜像名称</code></p><p>如果不声明<code>tag</code>镜像标签信息则默认拉取<code>latest</code>版本。</p><blockquote><p>现在拉取搜索出的MySQL</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
[root@ ~]# docker pull mysql
Using default tag: latest
latest: Pulling from library/mysql
619014d83c02: Pull complete
9ced578c3a5f: Pull complete
731f6e13d8ea: Pull complete
3c183de42679: Pull complete
6de69b5c2f3c: Pull complete
00f0a4086406: Pull complete
84d93aea836d: Pull complete
f18efbfd8d76: Pull complete
012b302865d1: Pull complete
fe16fd240f59: Pull complete
ca3e793e545e: Pull complete
51d0f2cb2610: Pull complete
Digest: sha256:6d0741319b6a2ae22c384a97f4bbee411b01e75f6284af0cce339fee83d7e314
Status: Downloaded newer image for mysql:latest
docker.io/library/mysql:latest
[root@pdai ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
mysql               latest              791b6e40940c        2 weeks ago         465MB
ubuntu              latest              ccc6e87d482b        4 weeks ago         64.2MB
hello-world         latest              fce289e99eb9        13 months ago       1.84kB
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-删除镜像" tabindex="-1"><a class="header-anchor" href="#_2-4-删除镜像" aria-hidden="true">#</a> 2.4 删除镜像</h3><p>按镜像<code>ID</code>删除单个镜像。</p><p>执行命令：<code>docker rmi 镜像ID</code></p><p>按镜像<code>ID</code>删除多个镜像。</p><p>执行命令：<code>docker rmi 镜像ID 镜像ID 镜像ID</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker rmi hello-world</span>
Error response from daemon: conflict: unable to remove repository reference <span class="token string">&quot;hello-world&quot;</span> <span class="token punctuation">(</span>must force<span class="token punctuation">)</span> - container c91b90b18884 is using its referenced image fce289e99eb9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>docker images -q</code>可以查询到所有镜像的<code>ID</code>，通过组合命令可以实现删除所有镜像的操作。</p><p>执行命令：<code>docker rmi docker images -q</code></p><p>发现报错了，这时候主要看两点：</p><ul><li>要么就是container实例存在</li><li>要么存在镜像依赖；</li></ul><h3 id="_2-5-更新镜像" tabindex="-1"><a class="header-anchor" href="#_2-5-更新镜像" aria-hidden="true">#</a> 2.5 更新镜像</h3><blockquote><p>针对上述ubuntu的镜像，我们能否在里面安装一些软件，然后重新生成一个镜像呢？这就是更新重新commit出一个新的镜像。</p></blockquote><p>我们先跑一个ubuntu容器实例，同时在里面进行<code>apt-get update</code>更新</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker run -it ubuntu:latest</span>
root@0a1556ca3c27:/<span class="token comment"># apt-get update</span>
Get:1 http://security.ubuntu.com/ubuntu bionic-security InRelease <span class="token punctuation">[</span><span class="token number">88.7</span> kB<span class="token punctuation">]</span>
Get:2 http://archive.ubuntu.com/ubuntu bionic InRelease <span class="token punctuation">[</span><span class="token number">242</span> kB<span class="token punctuation">]</span>
Get:3 http://archive.ubuntu.com/ubuntu bionic-updates InRelease <span class="token punctuation">[</span><span class="token number">88.7</span> kB<span class="token punctuation">]</span>
Get:4 http://archive.ubuntu.com/ubuntu bionic-backports InRelease <span class="token punctuation">[</span><span class="token number">74.6</span> kB<span class="token punctuation">]</span>
Get:5 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages <span class="token punctuation">[</span><span class="token number">817</span> kB<span class="token punctuation">]</span>
Get:6 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages <span class="token punctuation">[</span><span class="token number">1344</span> kB<span class="token punctuation">]</span>
Get:7 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages <span class="token punctuation">[</span><span class="token number">186</span> kB<span class="token punctuation">]</span>
Get:8 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages <span class="token punctuation">[</span><span class="token number">13.5</span> kB<span class="token punctuation">]</span>
Get:9 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages <span class="token punctuation">[</span><span class="token number">11.3</span> MB<span class="token punctuation">]</span>
Get:10 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages <span class="token punctuation">[</span><span class="token number">27.5</span> kB<span class="token punctuation">]</span>
Get:11 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages <span class="token punctuation">[</span><span class="token number">7064</span> B<span class="token punctuation">]</span>
Get:12 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages <span class="token punctuation">[</span><span class="token number">818</span> kB<span class="token punctuation">]</span>
Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages <span class="token punctuation">[</span><span class="token number">11.1</span> kB<span class="token punctuation">]</span>
Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages <span class="token punctuation">[</span><span class="token number">1345</span> kB<span class="token punctuation">]</span>
Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages <span class="token punctuation">[</span><span class="token number">41.2</span> kB<span class="token punctuation">]</span>
Get:16 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages <span class="token punctuation">[</span><span class="token number">1104</span> kB<span class="token punctuation">]</span>
Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages <span class="token punctuation">[</span><span class="token number">4252</span> B<span class="token punctuation">]</span>
Get:18 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages <span class="token punctuation">[</span><span class="token number">2496</span> B<span class="token punctuation">]</span>
Fetched <span class="token number">17.6</span> MB <span class="token keyword">in</span> 10s <span class="token punctuation">(</span><span class="token number">1759</span> kB/s<span class="token punctuation">)</span>
Reading package lists<span class="token punctuation">..</span>. Done
root@0a1556ca3c27:/<span class="token comment"># exit</span>
<span class="token builtin class-name">exit</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时 ID 为 0a1556ca3c27 的容器，是按我们的需求更改的容器。我们可以通过命令 docker commit 来提交容器副本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker commit -m=&quot;update test&quot; -a=&quot;pdai&quot; 0a1556ca3c27  pdai/ubuntu:v1.0.1</span>
sha256:b51e9f5f98cdb5b95c34181148ed7029f0150618aa8cd0e916b10b6aea1bd4c9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到已经生成成功, 且镜像的大小不一样了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
pdai/ubuntu         v1.0.1              b51e9f5f98cd        <span class="token number">5</span> seconds ago       <span class="token number">92</span>.1MB
mysql               latest              791b6e40940c        <span class="token number">2</span> weeks ago         465MB
ubuntu              latest              ccc6e87d482b        <span class="token number">4</span> weeks ago         <span class="token number">64</span>.2MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-生成镜像" tabindex="-1"><a class="header-anchor" href="#_2-6-生成镜像" aria-hidden="true">#</a> 2.6 生成镜像</h3><blockquote><p>那如果是生成一个全新的镜像呢？我们使用命令 docker build ，通过创建一个 Dockerfile 文件，其中包含一组指令来告诉 Docker 如何构建我们的镜像。</p></blockquote><p>这里特意指定的Base镜像为上一步修改生成的<code>pdai/ubuntu:v1.0.1</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>FROM    pdai/ubuntu:v1.0.1
MAINTAINER      pdai <span class="token string">&quot;pdai.tech&quot;</span>

RUN     /bin/echo <span class="token string">&#39;root:123456&#39;</span> <span class="token operator">|</span>chpasswd
RUN     <span class="token function">useradd</span> pdai
RUN     /bin/echo <span class="token string">&#39;pdai:123456&#39;</span> <span class="token operator">|</span>chpasswd
RUN     /bin/echo <span class="token parameter variable">-e</span> <span class="token string">&quot;LANG=<span class="token entity" title="\\&quot;">\\&quot;</span>en_US.UTF-8<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span> <span class="token operator">&gt;</span>/etc/default/local
EXPOSE  <span class="token number">22</span>
EXPOSE  <span class="token number">80</span>
CMD     /usr/sbin/sshd <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>稍微解释下</strong>：这一部分在开发中会用到比较多，所以单独一个章节详解：</p><ul><li>每一个指令都会在镜像上创建一个新的层，每一个指令的前缀都必须是大写的。</li><li>第一条FROM，指定使用哪个镜像源</li><li>RUN 指令告诉docker 在镜像内执行命令，安装了什么。。。</li><li>我们使用 Dockerfile 文件，通过 docker build 命令来构建一个镜像。</li></ul><p>接下来生成镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai docker-test<span class="token punctuation">]</span><span class="token comment"># docker build -t pdai/ubuntu:v2.0.1 .</span>
Sending build context to Docker daemon  <span class="token number">2</span>.048kB
Step <span class="token number">1</span>/9 <span class="token builtin class-name">:</span> FROM    pdai/ubuntu:v1.0.1
 ---<span class="token operator">&gt;</span> b51e9f5f98cd
Step <span class="token number">2</span>/9 <span class="token builtin class-name">:</span> MAINTAINER      pdai <span class="token string">&quot;pdai.tech&quot;</span>
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> af026ee229ea
Removing intermediate container af026ee229ea
 ---<span class="token operator">&gt;</span> 0e961cb557c9
Step <span class="token number">3</span>/9 <span class="token builtin class-name">:</span> RUN     /bin/echo <span class="token string">&#39;root:123456&#39;</span> <span class="token operator">|</span>chpasswd
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> 96bd9c40c55e
Removing intermediate container 96bd9c40c55e
 ---<span class="token operator">&gt;</span> 9e8549720043
Step <span class="token number">4</span>/9 <span class="token builtin class-name">:</span> RUN     <span class="token function">useradd</span> pdai
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> 0117278f243c
Removing intermediate container 0117278f243c
 ---<span class="token operator">&gt;</span> 87c478df56da
Step <span class="token number">5</span>/9 <span class="token builtin class-name">:</span> RUN     /bin/echo <span class="token string">&#39;pdai:123456&#39;</span> <span class="token operator">|</span>chpasswd
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> e0381eabe71a
Removing intermediate container e0381eabe71a
 ---<span class="token operator">&gt;</span> 84fd07f978ae
Step <span class="token number">6</span>/9 <span class="token builtin class-name">:</span> RUN     /bin/echo <span class="token parameter variable">-e</span> <span class="token string">&quot;LANG=<span class="token entity" title="\\&quot;">\\&quot;</span>en_US.UTF-8<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span> <span class="token operator">&gt;</span>/etc/default/local
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> 8d0052d9921f
Removing intermediate container 8d0052d9921f
 ---<span class="token operator">&gt;</span> 3ed0b248224c
Step <span class="token number">7</span>/9 <span class="token builtin class-name">:</span> EXPOSE  <span class="token number">22</span>
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> 4b5d540567cd
Removing intermediate container 4b5d540567cd
 ---<span class="token operator">&gt;</span> c0a72ad140dd
Step <span class="token number">8</span>/9 <span class="token builtin class-name">:</span> EXPOSE  <span class="token number">80</span>
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> c9620707d038
Removing intermediate container c9620707d038
 ---<span class="token operator">&gt;</span> df42b714ecc1
Step <span class="token number">9</span>/9 <span class="token builtin class-name">:</span> CMD     /usr/sbin/sshd <span class="token parameter variable">-D</span>
 ---<span class="token operator">&gt;</span> Running <span class="token keyword">in</span> e178826b43fe
Removing intermediate container e178826b43fe
 ---<span class="token operator">&gt;</span> a733d5a264b5
Successfully built a733d5a264b5
Successfully tagged pdai/ubuntu:v2.0.1

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明：</p><ul><li><code>-t</code> ：指定要创建的目标镜像名</li><li><code>.</code> ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径</li></ul><p>使用docker images 查看创建的镜像已经在列表中存在,镜像ID为a733d5a264b5</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai docker-test<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
pdai/ubuntu         v2.0.1              a733d5a264b5        <span class="token number">5</span> minutes ago       <span class="token number">92</span>.5MB
pdai/ubuntu         v1.0.1              b51e9f5f98cd        <span class="token number">15</span> hours ago        <span class="token number">92</span>.1MB
mysql               latest              791b6e40940c        <span class="token number">2</span> weeks ago         465MB
ubuntu              latest              ccc6e87d482b        <span class="token number">4</span> weeks ago         <span class="token number">64</span>.2MB

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以使用新的镜像来创建容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai docker-test<span class="token punctuation">]</span><span class="token comment"># docker run -it pdai/ubuntu:v2.0.1 /bin/bash</span>
root@f5332ebce695:/<span class="token comment"># id pdai</span>
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span>
root@f5332ebce695:/<span class="token comment"># exit</span>
<span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面看到新镜像已经包含我们创建的用户 pdai。</p><h3 id="_2-7-镜像标签" tabindex="-1"><a class="header-anchor" href="#_2-7-镜像标签" aria-hidden="true">#</a> 2.7 镜像标签</h3><blockquote><p>设置镜像的Tag，类似于Git中tag？我们可以使用 docker tag 命令，为镜像添加一个新的标签</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker tag a733d5a264b5 pdai/ubuntu:v3.0.1</span>
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker images</span>
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
pdai/ubuntu         v2.0.1              a733d5a264b5        <span class="token number">9</span> minutes ago       <span class="token number">92</span>.5MB
pdai/ubuntu         v3.0.1              a733d5a264b5        <span class="token number">9</span> minutes ago       <span class="token number">92</span>.5MB
pdai/ubuntu         v1.0.1              b51e9f5f98cd        <span class="token number">15</span> hours ago        <span class="token number">92</span>.1MB
mysql               latest              791b6e40940c        <span class="token number">2</span> weeks ago         465MB
ubuntu              latest              ccc6e87d482b        <span class="token number">4</span> weeks ago         <span class="token number">64</span>.2MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ul><li>docker tag 镜像ID，这里是 a733d5a264b5 ,用户名称、镜像源名(repository name)和新的标签名(tag)。</li><li>使用 docker images 命令可以看到，ID为a733d5a264b5的镜像多一个v3.0.1标签。</li></ul><h3 id="_2-8-镜像导出和导入" tabindex="-1"><a class="header-anchor" href="#_2-8-镜像导出和导入" aria-hidden="true">#</a> 2.8 镜像导出和导入</h3><blockquote><p>区别于容器的导出和导入</p></blockquote><ul><li><p>镜像导出</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker save -o elasticsearch-7.17.6.tar elasticsearch:7.17.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需指定版本，否则加载的镜像名为none</p></li><li><p>镜像导入</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> load <span class="token parameter variable">-i</span>  elasticsearch-7.17.6.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中<code>-i</code>或者<code>&lt;</code>表示从文件输入。会成功导入镜像及相关元数据，包括tag信息</p><blockquote><p>可以依据具体使用场景来选择命令</p></blockquote><ul><li>若是只想备份images，使用save、load即可</li><li>若是在启动容器后，容器内容有变化，需要备份，则使用export、import</li></ul><h3 id="_2-9-清理所有悬挂-none-镜像" tabindex="-1"><a class="header-anchor" href="#_2-9-清理所有悬挂-none-镜像" aria-hidden="true">#</a> 2.9 清理所有悬挂（<code>&lt;none&gt;</code>）镜像：</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> image prune
<span class="token comment"># or</span>
<span class="token function">docker</span> rmi <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-qf</span> <span class="token string">&quot;dangling=true&quot;</span><span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-docker-容器" tabindex="-1"><a class="header-anchor" href="#_3-docker-容器" aria-hidden="true">#</a> 3. Docker 容器</h2><blockquote><p>上面已经展示了部分容器的使用命令了，这里会在此基础上进行拓展</p></blockquote><h3 id="_3-1-创建与启动容器" tabindex="-1"><a class="header-anchor" href="#_3-1-创建与启动容器" aria-hidden="true">#</a> 3.1 创建与启动容器</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>首先我们是可以这样启动容器的：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai docker-test<span class="token punctuation">]</span><span class="token comment"># docker run -it pdai/ubuntu:v2.0.1 /bin/bash</span>
root@f5332ebce695:/<span class="token comment"># id pdai</span>
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>pdai<span class="token punctuation">)</span>
root@f5332ebce695:/<span class="token comment"># exit</span>
<span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-it</code> 可以连写的，表示 <code>-i -t</code></li><li><code>-t</code>: 在新容器内指定一个伪终端或终端。</li><li><code>-i</code>: 允许你对容器内的标准输入 (STDIN) 进行交互</li></ul><h4 id="_3-1-1-参数" tabindex="-1"><a class="header-anchor" href="#_3-1-1-参数" aria-hidden="true">#</a> 3.1.1 参数</h4><ul><li><code>-it</code> 可以连写的，表示 <code>-i -t</code></li><li><code>-t</code>: 在新容器内指定一个伪终端或终端。</li><li><code>-i</code>: 允许你对容器内的标准输入 (STDIN) 进行交互</li><li>--name：为创建的容器命名；</li><li>-v：表示目录映射关系（前者是宿主机目录，后者是映射到宿主机上的目录），可以使用多个 -v 做多个目录或文件映射。注意：最好做目录映射，在宿主机上做修改，然后共享到容器上；</li><li>-d：在 run 后面加上 -d 参数，则会创建一个守护式容器在后台运行（这样创建容器后不会自动登录容器，如果只加 -i -t 两个参数，创建容器后就会自动进容器里）；</li><li>-p：表示端口映射，前者是宿主机端口，后者是容器内的映射端口。可以使用多个 -p 做多个端口映射。</li><li>-P：随机使用宿主机的可用端口与容器内暴露的端口映射。</li><li>--restart=always ：创建容器时添加参数 --restart=always 后，当docker重启时，容器自动启动。</li></ul><h4 id="_3-1-2-创建并进入容器" tabindex="-1"><a class="header-anchor" href="#_3-1-2-创建并进入容器" aria-hidden="true">#</a> 3.1.2 创建并进入容器</h4><p>下面这行命令的意思就是通过镜像 AA 创建一个容器 BB，运行容器并进入容器的<code>/bin/bash</code>。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -it --name 容器名称 镜像名称:标签 /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：<code>Docker</code>容器运行必须有一个前台进程，如果没有前台进程执行，容器认为是空闲状态，就会自动退出。</p><h4 id="_3-1-3-退出当前容器" tabindex="-1"><a class="header-anchor" href="#_3-1-3-退出当前容器" aria-hidden="true">#</a> 3.1.3 退出当前容器</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-2-容器查看" tabindex="-1"><a class="header-anchor" href="#_3-2-容器查看" aria-hidden="true">#</a> 3.2 容器查看</h3><p>查看正在运行的容器。</p><p>执行命令：<code>docker ps</code></p><table><thead><tr><th>属性</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>CONTAINER ID</td><td style="text-align:left;">容器 ID</td></tr><tr><td>IMAGE</td><td style="text-align:left;">所属镜像</td></tr><tr><td>COMMAND</td><td style="text-align:left;">启动容器时运行的命令</td></tr><tr><td>CREATED</td><td style="text-align:left;">创建时间</td></tr><tr><td>STATUS</td><td style="text-align:left;">容器状态</td></tr><tr><td>PORTS</td><td style="text-align:left;">端口</td></tr><tr><td>NAMES</td><td style="text-align:left;">容器名称</td></tr></tbody></table><ul><li><p>查看所有容器（包括运行和停止）。</p><p>执行命令：<code>docker ps -a</code></p></li><li><p>查看停止的容器。</p><p>执行命令：<code>docker ps -f status=exited</code></p></li><li><p>查看最后一次运行的容器。</p><p>执行命令：<code>docker ps -l</code></p></li><li><p>列出最近创建的 n 个容器。</p><p>执行命令：<code>docker ps -n 5</code></p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                      PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">20</span> minutes ago      Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">20</span> minutes ago                       jolly_kepler
0a1556ca3c27        ubuntu:latest        <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">16</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">16</span> hours ago                         stoic_hodgkin
1a51d2f023c9        ubuntu:latest        <span class="token string">&quot;/bin/sh -c &#39;while t…&quot;</span>   <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">137</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                       gifted_brown
414bf796cbe4        ubuntu:latest        <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                         pedantic_galileo
512061ebfa4c        ubuntu:latest        <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                         wizardly_brown
aa5e9ae5e5db        ubuntu:latest        <span class="token string">&quot;/bin/echo &#39;Hello wo…&quot;</span>   <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                         affectionate_knuth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-容器再启动" tabindex="-1"><a class="header-anchor" href="#_3-3-容器再启动" aria-hidden="true">#</a> 3.3 容器再启动</h3><blockquote><p>我们看到，刚才<code>pdai/ubuntu:v2.0.1</code>的实例<code>f5332ebce695</code>已经停止了<code>Exited (0) 20 minutes ago</code>，我们能否再启这个实例？</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker start f5332ebce695</span>
f5332ebce695
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS              PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>         <span class="token number">32</span> minutes ago      Up <span class="token number">4</span> seconds        <span class="token number">22</span>/tcp, <span class="token number">80</span>/tcp      jolly_kepler
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-容器停止和重启" tabindex="-1"><a class="header-anchor" href="#_3-4-容器停止和重启" aria-hidden="true">#</a> 3.4 容器停止和重启</h3><blockquote><p>我们将上述容器停止，再重启</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker stop f5332ebce695</span>
f5332ebce695
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker restart f5332ebce695</span>
f5332ebce695
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS                      PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">33</span> minutes ago      Up <span class="token number">2</span> seconds                <span class="token number">22</span>/tcp, <span class="token number">80</span>/tcp      jolly_kepler
0a1556ca3c27        ubuntu:latest        <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">16</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">16</span> hours ago                         stoic_hodgkin
1a51d2f023c9        ubuntu:latest        <span class="token string">&quot;/bin/sh -c &#39;while t…&quot;</span>   <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">137</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                       gifted_brown
414bf796cbe4        ubuntu:latest        <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                         pedantic_galileo
512061ebfa4c        ubuntu:latest        <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">18</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">18</span> hours ago                         wizardly_brown
aa5e9ae5e5db        ubuntu:latest        <span class="token string">&quot;/bin/echo &#39;Hello wo…&quot;</span>   <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         affectionate_knuth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-后台模式与进入" tabindex="-1"><a class="header-anchor" href="#_3-5-后台模式与进入" aria-hidden="true">#</a> 3.5 后台模式与进入</h3><blockquote><p>在使用 -d 参数时，容器启动后会进入后台, 如何进入容器呢？</p></blockquote><ul><li>第一种：<code>docker attach</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS              PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>         <span class="token number">38</span> minutes ago      Up <span class="token number">2</span> seconds        <span class="token number">22</span>/tcp, <span class="token number">80</span>/tcp      jolly_kepler
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker attach f5332ebce695</span>
root@f5332ebce695:/<span class="token comment"># echo &#39;pdai&#39;</span>
pdai
root@f5332ebce695:/<span class="token comment"># exit</span>
<span class="token builtin class-name">exit</span>
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到没，使用<code>docker attach</code>进入后，exit便容器也停止了。</p><ul><li>第二种：<code>docker exec</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it f5332ebce695 /bin/bash</span>
Error response from daemon: Container f5332ebce69520fba353f035ccddd4bd42055fbd1e595f916ba7233e26476464 is not running
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker restart f5332ebce695</span>
f5332ebce695
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker exec -it f5332ebce695 /bin/bash</span>
root@f5332ebce695:/<span class="token comment"># exit</span>
<span class="token builtin class-name">exit</span>
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS              PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>         <span class="token number">42</span> minutes ago      Up <span class="token number">8</span> seconds        <span class="token number">22</span>/tcp, <span class="token number">80</span>/tcp      jolly_kepler

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><ul><li>我特意在容器停止状态下执行了<code>docker exec</code>，是让你看到<code>docker exec</code>是在容器启动状态下用的，且注意下错误信息；</li><li><strong>推荐大家使用 <code>docker exec</code> 命令，因为此退出容器终端，不会导致容器的停止。</strong></li></ul><h3 id="_3-6-容器导出和导入" tabindex="-1"><a class="header-anchor" href="#_3-6-容器导出和导入" aria-hidden="true">#</a> 3.6 容器导出和导入</h3><blockquote><p>在生产环境中，很多时候是无法连接外网的，所以有时候需要用到容器的导入和导出。</p></blockquote><ul><li>容器的导出</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS              PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>         <span class="token number">42</span> minutes ago      Up <span class="token number">8</span> seconds        <span class="token number">22</span>/tcp, <span class="token number">80</span>/tcp      jolly_kepler
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker export f5332ebce695 &gt; ubuntu-pdai-v2.tar</span>
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># ll</span>
-rw-rw-r-- <span class="token number">1</span> root root <span class="token number">93891072</span> Feb <span class="token number">18</span> 09:42 ubuntu-pdai-v2.tar

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时你可以发现，导出容器的时候，容器无需关闭。</p><ul><li>容器导入</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@pdai ~]# docker import ubuntu-pdai-v2.tar pdai/ubuntu:v2.0.2
sha256:57544a04cd1ad330371ca9142184ff031dc2b6df70df177994477c08fe547b25
[root@pdai ~]# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
pdai/ubuntu         v2.0.2              57544a04cd1a        7 seconds ago       91.5MB
pdai/ubuntu         v2.0.1              a733d5a264b5        About an hour ago   92.5MB
pdai/ubuntu         v3.0.1              a733d5a264b5        About an hour ago   92.5MB
pdai/ubuntu         v1.0.1              b51e9f5f98cd        16 hours ago        92.1MB
mysql               latest              791b6e40940c        2 weeks ago         465MB
ubuntu              latest              ccc6e87d482b        4 weeks ago         64.2MB

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意看，SIZE可能是不一样的。</p><h3 id="_3-7-强制停止容器" tabindex="-1"><a class="header-anchor" href="#_3-7-强制停止容器" aria-hidden="true">#</a> 3.7 强制停止容器</h3><blockquote><p>能否强制删除一个正在运行的容器呢？</p></blockquote><p>显然，加上<code>-f</code>之后是允许的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS              PORTS               NAMES
f5332ebce695        pdai/ubuntu:v2.0.1   <span class="token string">&quot;/bin/bash&quot;</span>         About an hour ago   Up <span class="token number">24</span> minutes       <span class="token number">22</span>/tcp, <span class="token number">80</span>/tcp      jolly_kepler
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker rm -f f5332ebce695</span>
f5332ebce695
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                      PORTS               NAMES
0a1556ca3c27        ubuntu:latest       <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">17</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">17</span> hours ago                         stoic_hodgkin
1a51d2f023c9        ubuntu:latest       <span class="token string">&quot;/bin/sh -c &#39;while t…&quot;</span>   <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">137</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                       gifted_brown
414bf796cbe4        ubuntu:latest       <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         pedantic_galileo
512061ebfa4c        ubuntu:latest       <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         wizardly_brown
aa5e9ae5e5db        ubuntu:latest       <span class="token string">&quot;/bin/echo &#39;Hello wo…&quot;</span>   <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         affectionate_knuth

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-8-清理停止的容器" tabindex="-1"><a class="header-anchor" href="#_3-8-清理停止的容器" aria-hidden="true">#</a> 3.8 清理停止的容器</h3><blockquote><p>我们看到上面还有好几个容器出于停止状态，能不能删除它们呢？</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                      PORTS               NAMES
0a1556ca3c27        ubuntu:latest       <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">17</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">17</span> hours ago                         stoic_hodgkin
1a51d2f023c9        ubuntu:latest       <span class="token string">&quot;/bin/sh -c &#39;while t…&quot;</span>   <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">137</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                       gifted_brown
414bf796cbe4        ubuntu:latest       <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         pedantic_galileo
512061ebfa4c        ubuntu:latest       <span class="token string">&quot;/bin/bash&quot;</span>              <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         wizardly_brown
aa5e9ae5e5db        ubuntu:latest       <span class="token string">&quot;/bin/echo &#39;Hello wo…&quot;</span>   <span class="token number">19</span> hours ago        Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> hours ago                         affectionate_knuth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>清理停止的容器: <code>docker container prune</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker container prune</span>
WARNING<span class="token operator">!</span> This will remove all stopped containers.
Are you sure you want to continue? <span class="token punctuation">[</span>y/N<span class="token punctuation">]</span> y
Deleted Containers:
0a1556ca3c275cc692ecd6d19caed4c5be42578f81b3dfea52b24208790d160a
1a51d2f023c947f2be2d9a78eb863e854ca302c89bf354654c409e23e7dd25d7
414bf796cbe403e01b5414f2b6232c6a037af78deee4581f4935c94859b5164e
512061ebfa4c340eb03833e54d77052e33fb62cd42ab7dd7e09bf0b02a761552
aa5e9ae5e5db1760bdb8c7ddb92e4293cd7b4736be7e97314f3ef44a71bf8930

Total reclaimed space: <span class="token number">27</span>.93MB
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-9-容器别名及操作" tabindex="-1"><a class="header-anchor" href="#_3-9-容器别名及操作" aria-hidden="true">#</a> 3.9 容器别名及操作</h3><blockquote><p>我们上述对容器的操作都是针对容器ID，这个ID是随机的，能否添加一个name对我们自己设置的name操作呢？</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker run -itd --name pdai-ubuntu-202 pdai/ubuntu:v2.0.2 /bin/bash</span>
11de9755a08402d963d263a559a7daf48f4a2188398f258641240b5eb50fbc89
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps</span>
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS              PORTS               NAMES
11de9755a084        pdai/ubuntu:v2.0.2   <span class="token string">&quot;/bin/bash&quot;</span>         <span class="token number">5</span> seconds ago       Up <span class="token number">4</span> seconds                            pdai-ubuntu-202
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker stop pdai-ubuntu-202</span>
pdai-ubuntu-202
<span class="token punctuation">[</span>root@pdai ~<span class="token punctuation">]</span><span class="token comment"># docker ps -a</span>
CONTAINER ID        IMAGE                COMMAND              CREATED              STATUS                     PORTS               NAMES
11de9755a084        pdai/ubuntu:v2.0.2   <span class="token string">&quot;/bin/bash&quot;</span>          <span class="token number">26</span> seconds ago       Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">4</span> seconds ago                       pdai-ubuntu-202   

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-10-容器错误日志" tabindex="-1"><a class="header-anchor" href="#_3-10-容器错误日志" aria-hidden="true">#</a> 3.10 容器错误日志</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>例：实时查看docker容器名为user-uat的最后10行日志
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">--tail</span> <span class="token number">10</span> user-uat

例：查看指定时间后的日志，只显示最后100行：
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">--since</span><span class="token operator">=</span><span class="token string">&quot;2018-02-08&quot;</span> <span class="token parameter variable">--tail</span><span class="token operator">=</span><span class="token number">100</span> user-uat

例：查看最近30分钟的日志:
<span class="token function">docker</span> logs <span class="token parameter variable">--since</span> 30m user-uat

例：查看某时间之后的日志：
<span class="token function">docker</span> logs <span class="token parameter variable">-t</span> <span class="token parameter variable">--since</span><span class="token operator">=</span><span class="token string">&quot;2018-02-08T13:23:37&quot;</span> user-uat

例：查看某时间段日志：
<span class="token function">docker</span> logs <span class="token parameter variable">-t</span> <span class="token parameter variable">--since</span><span class="token operator">=</span><span class="token string">&quot;2018-02-08T13:23:37&quot;</span> <span class="token parameter variable">--until</span> <span class="token string">&quot;2018-02-09T12:23:37&quot;</span> user-uat

例：将错误日志写入文件：
<span class="token function">docker</span> logs <span class="token parameter variable">-f</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">--since</span><span class="token operator">=</span><span class="token string">&quot;2018-02-18&quot;</span> user-uat <span class="token operator">|</span> <span class="token function">grep</span> error <span class="token operator">&gt;&gt;</span> logs_error.txt

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-docker-仓库" tabindex="-1"><a class="header-anchor" href="#_4-docker-仓库" aria-hidden="true">#</a> 4. Docker 仓库</h2><p>仓库（Repository）是集中存放镜像的地方，它和我们的Maven仓库是一样的。以下介绍一下 Docker Hub。当然不止 docker hub，只是远程的服务商不一样，操作都是一样的。</p><ul><li>可以采用共有的仓库，也可以自己搭建Docker Registry;</li><li>如果之前有自己的Artifactory或者Nexus，它们同样可以支持Docker Registry功能;</li><li>带界面的也可以使用Harbor等;</li></ul><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,118),m={href:"https://pdai.tech/md/devops/docker/docker-03-basic2.html",target:"_blank",rel:"noopener noreferrer"},k=n("strong",null,"Docker基础 - 仓库，镜像，容器详解",-1);function v(h,g){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[s("方式一："),d,s(", 比如"),n("a",r,[s("https://hub.docker.com/search?q=mysql&type=image (opens new window)"),e(a)])])]),b,n("p",null,[n("a",m,[k,e(a)])])])}const q=i(p,[["render",v],["__file","docker-basic-overview.html.vue"]]);export{q as default};
