import{_ as n,W as e,X as t,Y as s,Z as i,$ as c,a0 as l,D as r}from"./framework-f64bc974.js";const u={},d=l(`<h1 id="rabbitmq管理-用户管理-user" tabindex="-1"><a class="header-anchor" href="#rabbitmq管理-用户管理-user" aria-hidden="true">#</a> RabbitMQ管理 - 用户管理：user</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>在 RabbitMQ 中，<strong>用户</strong> 是访问控制（Access Control）的基本单元，且用户可以跨越多个 vhost 授权。使用标准的用户名和密码来认证用户。</p><h2 id="_2-创建用户-add-user" tabindex="-1"><a class="header-anchor" href="#_2-创建用户-add-user" aria-hidden="true">#</a> 2. 创建用户：add_user</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl add_user <span class="token punctuation">{</span>username<span class="token punctuation">}</span> <span class="token punctuation">{</span>password<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl add_user test1 123456</span>
Creating user <span class="token string">&quot;test1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-修改密码-change-password" tabindex="-1"><a class="header-anchor" href="#_3-修改密码-change-password" aria-hidden="true">#</a> 3. 修改密码：change_password</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl change_password <span class="token punctuation">{</span>username<span class="token punctuation">}</span> <span class="token punctuation">{</span>newpassword<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl change_password test1 1234567</span>
Changing password <span class="token keyword">for</span> user <span class="token string">&quot;test1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-清除密码-clear-password" tabindex="-1"><a class="header-anchor" href="#_4-清除密码-clear-password" aria-hidden="true">#</a> 4. 清除密码：clear_password</h2><p>清除密码后，该用户就不能使用密码登录了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl change_password <span class="token punctuation">{</span>username<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-验证用户密码-authenticate-user" tabindex="-1"><a class="header-anchor" href="#_5-验证用户密码-authenticate-user" aria-hidden="true">#</a> 5. 验证用户密码：authenticate_user</h2><p>可以验证用户密码是否匹配</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl authenticate_user <span class="token punctuation">{</span>username<span class="token punctuation">}</span> <span class="token punctuation">{</span>newpassword<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 验证失败</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl authenticate_user test1 123456</span>
Authenticating user <span class="token string">&quot;test1&quot;</span>
Error: failed to authenticate user <span class="token string">&quot;test1&quot;</span>

<span class="token comment"># 验证成</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl authenticate_user test1 1234567</span>
Authenticating user <span class="token string">&quot;test1&quot;</span>
Success
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-用户列表-list-users" tabindex="-1"><a class="header-anchor" href="#_6-用户列表-list-users" aria-hidden="true">#</a> 6. 用户列表：list_users</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl list_users
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl list_users</span>
Listing <span class="token function">users</span>
test1   <span class="token punctuation">[</span><span class="token punctuation">]</span>
admin   <span class="token punctuation">[</span>administrator<span class="token punctuation">]</span>
guest   <span class="token punctuation">[</span>administrator<span class="token punctuation">]</span>
<span class="token comment"># 可以看到有 3 个用户</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方括号中的是角色类型，有 5 种：</p><ul><li><p>none：无任何角色。新创建的为这种；怎么显示的是没有？</p></li><li><p>management：可以访问 web 管理页面（下一节讲解）</p></li><li><p>policymaker：</p><p>包含 management 的所有权限，并且可以管理 <strong>策略（Policy）</strong> 和 <strong>参数（Parameter）</strong>（下一章讲解）</p></li><li><p>monitoring：</p><p>包含 management 的所有权限，并且可以看到所有连接、信道及节点相关的信息</p></li><li><p>administrator：</p><p>最高权限，包含 monitoring 的所有权限，并且可以管理用户、虚拟主机、权限、策略、参数等。</p></li></ul><h2 id="_7-设置角色-set-user-tags" tabindex="-1"><a class="header-anchor" href="#_7-设置角色-set-user-tags" aria-hidden="true">#</a> 7. 设置角色 set_user_tags</h2><p>可以给用户设置角色，设置角色之后，现有的角色会被删除。也就是以这次设置的角色为准</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl set_user_tags <span class="token punctuation">{</span>username<span class="token punctuation">}</span> <span class="token punctuation">{</span>tag <span class="token punctuation">..</span>.<span class="token punctuation">}</span>

tag ：表示要设置的角色，可以多个，空格隔开
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl set_user_tags test1 management policymaker</span>
Setting tags <span class="token keyword">for</span> user <span class="token string">&quot;test1&quot;</span> to <span class="token punctuation">[</span>management,policymaker<span class="token punctuation">]</span>

<span class="token comment"># 查看用户，就看到了刚刚设置的角色</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl list_users</span>
Listing <span class="token function">users</span>
test1   <span class="token punctuation">[</span>management, policymaker<span class="token punctuation">]</span>
admin   <span class="token punctuation">[</span>administrator<span class="token punctuation">]</span>
guest   <span class="token punctuation">[</span>administrator<span class="token punctuation">]</span>

<span class="token comment"># 不带 tag 就是清空角色</span>
<span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl set_user_tags test1</span>
Setting tags <span class="token keyword">for</span> user <span class="token string">&quot;test1&quot;</span> to <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-删除用户-delete-user" tabindex="-1"><a class="header-anchor" href="#_8-删除用户-delete-user" aria-hidden="true">#</a> 8. 删除用户：delete_user</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rabbitmqctl delete_user <span class="token punctuation">{</span>username<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实践练习</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@study ~<span class="token punctuation">]</span><span class="token comment"># rabbitmqctl delete_user test1</span>
Deleting user <span class="token string">&quot;test1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,35),o={href:"https://zq99299.github.io/mq-tutorial/rabbitmq-ac/05/02.html",target:"_blank",rel:"noopener noreferrer"};function p(m,b){const a=r("ExternalLinkIcon");return e(),t("div",null,[d,s("p",null,[s("a",o,[i("用户管理：user"),c(a)])])])}const h=n(u,[["render",p],["__file","rabbitmq-y-manange-user.html.vue"]]);export{h as default};
