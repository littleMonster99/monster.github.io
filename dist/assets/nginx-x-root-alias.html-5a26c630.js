import{_ as t,W as n,X as i,Y as e,Z as r,$ as o,a0 as s,D as l}from"./framework-f64bc974.js";const d={},c=s(`<h1 id="nginx的root和alias的区别" tabindex="-1"><a class="header-anchor" href="#nginx的root和alias的区别" aria-hidden="true">#</a> nginx的root和alias的区别</h1><h2 id="_1-root-用法" tabindex="-1"><a class="header-anchor" href="#_1-root-用法" aria-hidden="true">#</a> 1. root 用法</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>location /request_path/image/ {
    root /local_path/image/;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样配置的结果就是当客户端请求/request_path/image/cat.png 的时候， Nginx把请求映射为**/local_path/image/request_path/image/cat.png**</p><blockquote><p>注意这时候除了root 的路径，还会带上请求路径（例如这里：/request_path/image/）</p></blockquote><h2 id="_2-alias用法" tabindex="-1"><a class="header-anchor" href="#_2-alias用法" aria-hidden="true">#</a> 2.alias用法</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>location /request_path/image/ {
    alias /local_path/image/;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时候，当客户端请求 /request_path/image/cat.png 的时候， Nginx把请求映射为**/local_path/image/cat.png**</p><p>注意：alias中的路径最后必须跟上/ root的路径最后可跟可不跟，alias支持正则表达式路径root不支持**</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,10),h={href:"http://www.leftso.com/blog/171.html",target:"_blank",rel:"noopener noreferrer"};function p(u,_){const a=l("ExternalLinkIcon");return n(),i("div",null,[c,e("p",null,[e("a",h,[r("nginx 静态文件袋里配置,将本地文件/夹反向代理以及root与alias的区别"),o(a)])])])}const m=t(d,[["render",p],["__file","nginx-x-root-alias.html.vue"]]);export{m as default};
