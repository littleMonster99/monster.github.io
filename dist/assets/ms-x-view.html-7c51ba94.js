const e=JSON.parse('{"key":"v-0df49265","path":"/arch/microservices/ms-x-view.html","title":"微服务 - 看法与思考","lang":"zh-CN","frontmatter":{"order":30,"category":["架构","微服务"],"description":"1. 微服务 1.1 为什么使用微服务 大型服务; 单例服务如果流量大了就抗不住，微服务可以加机器搞流量; 加机器的地方，最理想的就是：弹性伸缩，流量下去就缩容，流量上来就扩容，能最恰好的使用资源; 传统的巨大单体应用程序在部署和运行时，需要单台服务器具有大量内存和其他资源; 规范化; 规范化，大家用同一套框架规范，可以沉淀和深入技术，还可以培养技术氛...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/arch/microservices/ms-x-view.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"微服务 - 看法与思考"}],["meta",{"property":"og:description","content":"1. 微服务 1.1 为什么使用微服务 大型服务; 单例服务如果流量大了就抗不住，微服务可以加机器搞流量; 加机器的地方，最理想的就是：弹性伸缩，流量下去就缩容，流量上来就扩容，能最恰好的使用资源; 传统的巨大单体应用程序在部署和运行时，需要单台服务器具有大量内存和其他资源; 规范化; 规范化，大家用同一套框架规范，可以沉淀和深入技术，还可以培养技术氛..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. 微服务","slug":"_1-微服务","link":"#_1-微服务","children":[{"level":3,"title":"1.1 为什么使用微服务","slug":"_1-1-为什么使用微服务","link":"#_1-1-为什么使用微服务","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":0.81,"words":243},"filePathRelative":"arch/microservices/ms-x-view.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
