import{_ as n,W as s,X as a,a0 as t}from"./framework-f64bc974.js";const p={},o=t(`<h1 id="aspose-word动态渲染表格" tabindex="-1"><a class="header-anchor" href="#aspose-word动态渲染表格" aria-hidden="true">#</a> aspose.word动态渲染表格</h1><h2 id="_1-需求" tabindex="-1"><a class="header-anchor" href="#_1-需求" aria-hidden="true">#</a> 1. 需求</h2><p>我们业务需求需要动态填充表格数据。无数据的表格需要绘制一条大的删除线</p><h2 id="_2-代码实现" tabindex="-1"><a class="header-anchor" href="#_2-代码实现" aria-hidden="true">#</a> 2. 代码实现</h2><h3 id="_2-1-动态填充表格数据" tabindex="-1"><a class="header-anchor" href="#_2-1-动态填充表格数据" aria-hidden="true">#</a> 2.1 动态填充表格数据</h3><p>主要思路就是定位到表格，具体行，具体的格。进行绘制</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 表格数据处理
     *
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setTabledData</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeTable</span><span class="token punctuation">&gt;</span></span> asposeTables<span class="token punctuation">,</span> <span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">DocumentBuilder</span> builder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>


        <span class="token class-name">NodeCollection</span> allTables <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token class-name">NodeType</span><span class="token punctuation">.</span><span class="token constant">TABLE</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>allTables<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;模板有误，找不到表格！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> tableIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> tableIndex <span class="token operator">&lt;</span> asposeTables<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tableIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 表格信息</span>
            <span class="token class-name">Table</span> table <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Table</span><span class="token punctuation">)</span>allTables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">FdAsposeTable</span> fdAsposeTable <span class="token operator">=</span> asposeTables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeTable<span class="token punctuation">.</span>FdRow</span><span class="token punctuation">&gt;</span></span> fdRows <span class="token operator">=</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 添加模板行（数据太多时添加）</span>
            <span class="token function">addRow</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> fdAsposeTable<span class="token punctuation">,</span> fdRows<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 填充表格数据</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> rowIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> rowIndex <span class="token operator">&lt;</span> fdRows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> rowIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 每行</span>
                <span class="token class-name">FdAsposeTable<span class="token punctuation">.</span>FdRow</span> row <span class="token operator">=</span> fdRows<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rowIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeFieldAttr</span><span class="token punctuation">&gt;</span></span> tableFieldAttrList <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getFieldAttrList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>tableFieldAttrList<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">int</span> colSize <span class="token operator">=</span> tableFieldAttrList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;colSize:&quot;</span> <span class="token operator">+</span> colSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> colIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> colIndex <span class="token operator">&lt;</span> colSize<span class="token punctuation">;</span> colIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 每列</span>
                    <span class="token class-name">FdAsposeFieldAttr</span> asposeFieldAttr <span class="token operator">=</span> tableFieldAttrList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>colIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    builder<span class="token punctuation">.</span><span class="token function">moveToCell</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">,</span> rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;tableIndex:&quot;</span> <span class="token operator">+</span> tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;rowIndex:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;colIndex:&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;getFieldValue:&quot;</span> <span class="token operator">+</span> asposeFieldAttr<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    builder<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>asposeFieldAttr<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>


    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 添加模板行
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">fdAsposeTable</span>
     * <span class="token keyword">@param</span> <span class="token parameter">fdRows</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addRow</span><span class="token punctuation">(</span><span class="token class-name">Table</span> table<span class="token punctuation">,</span> <span class="token class-name">FdAsposeTable</span> fdAsposeTable<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FdAsposeTable<span class="token punctuation">.</span>FdRow</span><span class="token punctuation">&gt;</span></span> fdRows<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//模板行</span>
        <span class="token class-name">Node</span> templateRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//模板数据行数</span>
        <span class="token keyword">int</span> templateDataRowsCount <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getTailNotDataRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//补充模板数据行</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">isAutoTemplateDataRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> templateDataRowsCount <span class="token operator">&lt;</span> fdRows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">int</span> addCounts <span class="token operator">=</span> fdRows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> templateDataRowsCount<span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> addCounts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">Node</span> addRow <span class="token operator">=</span> templateRow<span class="token punctuation">.</span><span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> addRow<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-绘制大删除线" tabindex="-1"><a class="header-anchor" href="#_2-2-绘制大删除线" aria-hidden="true">#</a> 2.2 绘制大删除线</h3><p>定位出表格空白的位置，设置插入一个大shape</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 设置表格空格删除线
     *
     * <span class="token keyword">@param</span> <span class="token parameter">asposeTables</span>
     * <span class="token keyword">@param</span> <span class="token parameter">doc</span>
     * <span class="token keyword">@param</span> <span class="token parameter">builder</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setTabledBlankCellDiagonalLine</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AsposeTable</span><span class="token punctuation">&gt;</span></span> asposeTables<span class="token punctuation">,</span> <span class="token class-name">Document</span> doc<span class="token punctuation">,</span> <span class="token class-name">DocumentBuilder</span> builder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> tableIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> tableIndex <span class="token operator">&lt;</span> asposeTables<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> tableIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">NodeCollection</span> allTables <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token class-name">NodeType</span><span class="token punctuation">.</span><span class="token constant">TABLE</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 每个表格</span>
            <span class="token class-name">Table</span> table <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Table</span><span class="token punctuation">)</span> allTables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token class-name">RowCollection</span> rows <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rows<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Row</span> row <span class="token operator">=</span> rows<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> firstCellText <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getFirstCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>firstCellText<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getLastCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        start <span class="token operator">=</span> i<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    total<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>total <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">double</span> blankHeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token keyword">double</span> blankWidth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                blankHeight <span class="token operator">=</span> total <span class="token operator">*</span> <span class="token class-name">FdConstants</span><span class="token punctuation">.</span><span class="token constant">BLANK_CELL_HEIGHT</span><span class="token punctuation">;</span>


                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    blankWidth <span class="token operator">+=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCellFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name">Shape</span> shape <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Shape</span><span class="token punctuation">(</span>doc<span class="token punctuation">,</span> <span class="token class-name">ShapeType</span><span class="token punctuation">.</span><span class="token constant">LINE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//设置宽和高</span>
                shape<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>blankWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
                shape<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>blankHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
                shape<span class="token punctuation">.</span><span class="token function">setLeft</span><span class="token punctuation">(</span><span class="token operator">-</span>table<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                shape<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                shape<span class="token punctuation">.</span><span class="token function">setFlipOrientation</span><span class="token punctuation">(</span><span class="token class-name">FlipOrientation</span><span class="token punctuation">.</span><span class="token constant">HORIZONTAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// shape.Rotation =-270;</span>
                <span class="token comment">//嵌入方式</span>
                shape<span class="token punctuation">.</span><span class="token function">setWrapType</span><span class="token punctuation">(</span><span class="token class-name">WrapType</span><span class="token punctuation">.</span><span class="token constant">NONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                builder<span class="token punctuation">.</span><span class="token function">moveToCell</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> start<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                builder<span class="token punctuation">.</span><span class="token function">insertNode</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//写入文档</span>
                doc<span class="token punctuation">.</span><span class="token function">updatePageLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-渲染单元格无数据时的删除线" tabindex="-1"><a class="header-anchor" href="#_2-3-渲染单元格无数据时的删除线" aria-hidden="true">#</a> 2.3 渲染单元格无数据时的删除线</h3><p>取得对应的边框</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> colIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> colIndex <span class="token operator">&lt;</span> colSize<span class="token punctuation">;</span> colIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 每列</span>
                    <span class="token class-name">FdAsposeFieldAttr</span> asposeFieldAttr <span class="token operator">=</span> tableFieldAttrList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>colIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> fieldValue <span class="token operator">=</span> asposeFieldAttr<span class="token punctuation">.</span><span class="token function">getFieldValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    builder<span class="token punctuation">.</span><span class="token function">moveToCell</span><span class="token punctuation">(</span>tableIndex<span class="token punctuation">,</span> rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fdAsposeTable<span class="token punctuation">.</span><span class="token function">isDiagonalUpLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>fieldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 单元格数据为空的时候，添加斜线</span>
                        <span class="token class-name">BorderCollection</span> borders <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rowIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartRowIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">getCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>colIndex <span class="token operator">+</span> fdAsposeTable<span class="token punctuation">.</span><span class="token function">getStartColumnIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">getCellFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">getBorders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">Border</span> border <span class="token operator">=</span> borders<span class="token punctuation">.</span><span class="token function">getByBorderType</span><span class="token punctuation">(</span><span class="token class-name">BorderType</span><span class="token punctuation">.</span><span class="token constant">DIAGONAL_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        border<span class="token punctuation">.</span><span class="token function">setLineStyle</span><span class="token punctuation">(</span><span class="token class-name">LineStyle</span><span class="token punctuation">.</span><span class="token constant">SINGLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        border<span class="token punctuation">.</span><span class="token function">setLineWidth</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        borders<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        builder<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fieldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","office-x-aspose-table.html.vue"]]);export{k as default};
