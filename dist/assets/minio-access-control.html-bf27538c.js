import{_ as a,W as t,X as i,Y as n,Z as e,$ as o,a0 as p,D as c}from"./framework-f64bc974.js";const u={},l=p(`<h1 id="minio基础-minio之权限控制策略" tabindex="-1"><a class="header-anchor" href="#minio基础-minio之权限控制策略" aria-hidden="true">#</a> Minio基础 - Minio之权限控制策略</h1><h2 id="_1-前言" tabindex="-1"><a class="header-anchor" href="#_1-前言" aria-hidden="true">#</a> 1. 前言</h2><blockquote><p>华为云OBS 和其他产商的OSS 都是一个东西，对象存储</p></blockquote><blockquote><p>ACL(Access Control List ): 访问控制列表（ACL）</p></blockquote><p>本段文章来源于华为云OBS，因为都是S3标准的对象存储，所以很多概念和Minio是相通的。</p><h3 id="_1-1-为什么要进行访问权限控制-华为obs" tabindex="-1"><a class="header-anchor" href="#_1-1-为什么要进行访问权限控制-华为obs" aria-hidden="true">#</a> 1.1 为什么要进行访问权限控制（华为OBS）</h3><p>为保证存储在SSO中数据的安全性，SSO资源（桶和对象）默认为私有，只有资源拥有者可以访问。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215329125.png" alt="image-20220723215329125" tabindex="0" loading="lazy"><figcaption>image-20220723215329125</figcaption></figure><p>如果要允许他人访问和使用自己的SSO资源，可以设置访问权限控制策略，向他人授予指定资源的特定权限。</p><h3 id="_1-2-访问权限控制的典型场景-华为obs" tabindex="-1"><a class="header-anchor" href="#_1-2-访问权限控制的典型场景-华为obs" aria-hidden="true">#</a> 1.2 访问权限控制的典型场景（华为OBS）</h3><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215427075.png" alt="image-20220723215427075" tabindex="0" loading="lazy"><figcaption>image-20220723215427075</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215435149.png" alt="image-20220723215435149" tabindex="0" loading="lazy"><figcaption>image-20220723215435149</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215448794.png" alt="image-20220723215448794" tabindex="0" loading="lazy"><figcaption>image-20220723215448794</figcaption></figure><h3 id="_1-3-obs如何进行访问权限控制-华为obs" tabindex="-1"><a class="header-anchor" href="#_1-3-obs如何进行访问权限控制-华为obs" aria-hidden="true">#</a> 1.3 OBS如何进行访问权限控制（华为OBS）</h3><p>OBS提供丰富灵活的访问权限控制手段，满足不同场景下的授权需求。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215518369.png" alt="image-20220723215518369" tabindex="0" loading="lazy"><figcaption>image-20220723215518369</figcaption></figure><h2 id="_2-iam用户权限控制" tabindex="-1"><a class="header-anchor" href="#_2-iam用户权限控制" aria-hidden="true">#</a> 2. IAM用户权限控制</h2><blockquote><p>IAM是 Identity and Access Management 的缩写，即身份与访问管理，或称为身份管理与访问控制。</p></blockquote><p>相对比阿里云SSO、华为云OBS，Minio权限及安全管理，没有提供特别多的功能，毕竟是开源的，但是对于一般应用程序，也够用了。</p><h3 id="_2-1-用户管理" tabindex="-1"><a class="header-anchor" href="#_2-1-用户管理" aria-hidden="true">#</a> 2.1 用户管理</h3><h4 id="_2-1-1-添加用户及权限" tabindex="-1"><a class="header-anchor" href="#_2-1-1-添加用户及权限" aria-hidden="true">#</a> 2.1.1 添加用户及权限</h4><p>用户是权限最直接的体现，Minio提供了用户管理功能，可以在控制台直接添加用户密码（密码最少八位），及相关权限。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215838647.png" alt="image-20220723215838647" tabindex="0" loading="lazy"><figcaption>image-20220723215838647</figcaption></figure><h4 id="_2-1-2-用户分组管理" tabindex="-1"><a class="header-anchor" href="#_2-1-2-用户分组管理" aria-hidden="true">#</a> 2.1.2 用户分组管理</h4><p>如果每个用户都去绑定一个权限比较麻烦，minio提供了分组管理，也可以理解为角色，分组添加多个权限，然后用户添加到分组中，都可以具有多个权限了。</p><p>直接在下面菜单创建分组：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215919268.png" alt="image-20220723215919268" tabindex="0" loading="lazy"><figcaption>image-20220723215919268</figcaption></figure><p>添加分组时，可以绑定用户：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723215939690.png" alt="image-20220723215939690" tabindex="0" loading="lazy"><figcaption>image-20220723215939690</figcaption></figure><p>点击操作，可以对当前分组添加多个角色：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723220008424.png" alt="image-20220723220008424" tabindex="0" loading="lazy"><figcaption>image-20220723220008424</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723220020227.png" alt="image-20220723220020227" tabindex="0" loading="lazy"><figcaption>image-20220723220020227</figcaption></figure><h3 id="_2-2-iam权限" tabindex="-1"><a class="header-anchor" href="#_2-2-iam权限" aria-hidden="true">#</a> 2.2 IAM权限</h3><p>默认情况下，管理员创建的IAM用户没有任何权限，需要将其加入用户组，并给用户组授予策略和角色，才能使得用户组中的用户获得策略定义的权限，这一过程称为授权。授权后，用户就可以基于被授予的权限对服务进行操作。</p><p>IAM权限作用于SSO所有的桶和对象。如果要授予IAM用户操作SSO资源的权限，则需要向IAM用户所属的用户组授予一个或多个SSO权限。</p><p>一般SSO根据授权精细程度分为角色和策略。</p><ul><li>角色（Minio中貌似没有角色）：IAM最初提供的一种根据用户的工作职能定义权限的粗粒度授权机制。该机制以服务为粒度，提供有限的服务相关角色用于授权。由于华为云各服务之间存在业务依赖关系，因此给用户授予角色时，可能需要一并授予依赖的其他角色，才能正确完成业务。角色并不能满足用户对精细化授权的要求，无法完全达到企业对权限最小化的安全管控要求。</li><li>策略（minio中有）：IAM最新提供的一种细粒度授权的能力，可以精确到具体服务的操作、资源以及请求条件等。基于策略的授权是一种更加灵活的授权方式，能够满足企业对权限最小化的安全管控要求。例如：针对SSO服务，管理员能够控制IAM用户仅能对某一个桶资源进行指定的管理操作。多数细粒度策略以API接口为粒度进行权限拆分。</li></ul><h4 id="_2-2-1-策略结构-语法" tabindex="-1"><a class="header-anchor" href="#_2-2-1-策略结构-语法" aria-hidden="true">#</a> 2.2.1 策略结构&amp;语法</h4><p>策略结构包括：Version（策略版本号）和Statement（策略权限语句），其中Statement可以有多个，表示不同的授权项。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723220938897.png" alt="image-20220723220938897" tabindex="0" loading="lazy"><figcaption>image-20220723220938897</figcaption></figure><p>S3标准策略语法（阿里华为SSO有点小改动，结构类似），示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;Sid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;DenyPublicReadACL&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Effect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Deny&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Principal&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;AWS&quot;</span><span class="token operator">:</span> <span class="token string">&quot;*&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Action&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;s3:PutObject&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;s3:PutObjectAcl&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Resource&quot;</span><span class="token operator">:</span> <span class="token string">&quot;arn:aws:s3:::examplebucket/*&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Condition&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;StringEquals&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;s3:x-amz-acl&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;public-read&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;public-read-write&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;authenticated-read&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上表示，当所述请求包括以下访问控制列表（ACL）中的一个：public-read，public-read-write或authenticated-read，拒绝任何亚马逊S3在桶examplebucket中PutObject或PutObjectAcl请求。</p><p>策略语法参数：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>Version</td><td>标识策略的版本号，Minio中一般为&quot;2012-10-17&quot;</td></tr><tr><td>Statement</td><td>策略授权语句，描述策略的详细信息，包含Effect（效果）、Action（动作）、Principal（用户）、Resource（资源）和Condition（条件）。其中Condition为可选</td></tr><tr><td>Effect</td><td>Effect（效果）作用包含两种：Allow（允许）和Deny（拒绝），系统预置策略仅包含允许的授权语句，自定义策略中可以同时包含允许和拒绝的授权语句，当策略中既有允许又有拒绝的授权语句时，遵循Deny优先的原则。</td></tr><tr><td>Action</td><td>Action（动作）对资源的具体操作权限，格式为：服务名:资源类型:操作，支持单个或多个操作权限，支持通配符号*，通配符号表示所有。例如 s3:GetObject ，表示获取对象</td></tr><tr><td>Resource</td><td>Resource（资源）策略所作用的资源，支持通配符号*，通配符号表示所有。在JSON视图中，不带Resource表示对所有资源生效。Resource支持以下字符：-_0-9a-zA-Z*./\\，如果Resource中包含不支持的字符，请采用通配符号*。例如：arn:aws:s3:::my-bucketname/myobject*\\，表示minio中my-bucketname/myobject目录下所有对象文件。</td></tr><tr><td>Condition</td><td>Condition（条件）您可以在创建自定义策略时，通过Condition元素来控制策略何时生效。Condition包括条件键和运算符，条件键表示策略语句的Condition元素，分为全局级条件键和服务级条件键。全局级条件键（前缀为g:）适用于所有操作，服务级条件键（前缀为服务缩写，如obs:）仅适用于对应服务的操作。运算符与条件键一起使用，构成完整的条件判断语句。</td></tr></tbody></table><h4 id="_2-2-2-系统默认策略" tabindex="-1"><a class="header-anchor" href="#_2-2-2-系统默认策略" aria-hidden="true">#</a> 2.2.2 系统默认策略</h4><p>AWS Identity and Access Management (IAM) 是一种 Web 服务，可以帮助您安全地控制对 AWS 资源的访问。您可以使用 IAM 控制对哪个用户进行身份验证 (登录) 和授权 (具有权限) 以使用资源。</p><p>默认存在5种IAM策略：</p><table><thead><tr><th>权限</th><th>解释</th></tr></thead><tbody><tr><td>consoleAdmin</td><td>控制台管理员</td></tr><tr><td>diagnostics</td><td>诊断</td></tr><tr><td>readonly</td><td>只读</td></tr><tr><td>readwrite</td><td>读写</td></tr><tr><td>writeonly</td><td>只写</td></tr></tbody></table><h4 id="_2-2-3-自定义策略" tabindex="-1"><a class="header-anchor" href="#_2-2-3-自定义策略" aria-hidden="true">#</a> 2.2.3 自定义策略</h4><p>我们可以通过控制台或者mc客户端添加策略，实际就是一个Json文件。</p><p>首先在控制台点击IAM策略，然后点击创建策略。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221412178.png" alt="image-20220723221412178" tabindex="0" loading="lazy"><figcaption>image-20220723221412178</figcaption></figure><p>填写策略名称，输入策略Json。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221434656.png" alt="image-20220723221434656" tabindex="0" loading="lazy"><figcaption>image-20220723221434656</figcaption></figure><p>策略Json文件内容如下：</p><ul><li>Allow表示允许操作</li><li>Action表示对资源的具体操作权限，对对象操作，首先要操作存储桶，所以首先这里给了存储桶查询权限，然后给了上传和下载对象的权限</li><li>Resource表示对test存储桶下的所有资源有限</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;Version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2012-10-17&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;Statement&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;Effect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Allow&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;Action&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;s3:GetObject&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:ListAllMyBuckets&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:ListBucket&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:PutObject&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:DeleteObject&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:GetBucketLocation&quot;</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;Resource&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;arn:aws:s3:::test/*&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加之后，可以查看到当前决策的内容信息，也可以修改Json文件。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221535166.png" alt="image-20220723221535166" tabindex="0" loading="lazy"><figcaption>image-20220723221535166</figcaption></figure><p>然后进入用户管理，选择用户后，再添加我们自定义的权限策略。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221901440.png" alt="image-20220723221901440" tabindex="0" loading="lazy"><figcaption>image-20220723221901440</figcaption></figure><p><strong>测试</strong>： 使用当前用户账号创建客户端，然后直接读写操作，发现是正常具有权限的。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221920534.png" alt="image-20220723221920534" tabindex="0" loading="lazy"><figcaption>image-20220723221920534</figcaption></figure><p>然后去掉s3:PutObject，也就是上传文件的权限。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221941094.png" alt="image-20220723221941094" tabindex="0" loading="lazy"><figcaption>image-20220723221941094</figcaption></figure><p>在执行putObject时，返回403访问被拒绝，而getObject时则正常执行</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723221959046.png" alt="image-20220723221959046" tabindex="0" loading="lazy"><figcaption>image-20220723221959046</figcaption></figure><h2 id="_3-桶策略" tabindex="-1"><a class="header-anchor" href="#_3-桶策略" aria-hidden="true">#</a> 3. 桶策略</h2><p>桶策略是作用于所配置的桶及桶内对象的。桶拥有者通过桶策略可为IAM用户或其他帐号授权桶及桶内对象的操作权限。</p><h3 id="_3-1-页面管理桶策略" tabindex="-1"><a class="header-anchor" href="#_3-1-页面管理桶策略" aria-hidden="true">#</a> 3.1 页面管理桶策略</h3><h4 id="_3-1-1-访问策略管理" tabindex="-1"><a class="header-anchor" href="#_3-1-1-访问策略管理" aria-hidden="true">#</a> 3.1.1 访问策略管理</h4><p>存储桶的访问策略管理，是最大粒度的权限，可以设置私有或者公开。</p><p>点击存储桶的管理按钮，进入管理页面。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222415091.png" alt="image-20220723222415091" tabindex="0" loading="lazy"><figcaption>image-20220723222415091</figcaption></figure><p>然后可以在Summary中，看到当前桶的访问策略为私有Private。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222505048.png" alt="image-20220723222505048" tabindex="0" loading="lazy"><figcaption>image-20220723222505048</figcaption></figure><p>可以点击Private，弹出设置权限，可选的只有Private和Public。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222524252.png" alt="image-20220723222524252" tabindex="0" loading="lazy"><figcaption>image-20220723222524252</figcaption></figure><p>当选择私有时，未登录或者未授权访问文件，会出现以下未授权页面：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222551161.png" alt="image-20220723222551161" tabindex="0" loading="lazy"><figcaption>image-20220723222551161</figcaption></figure><p>当选择公开时，无需登录和授权可以直接访问文件：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222613339.png" alt="image-20220723222613339" tabindex="0" loading="lazy"><figcaption>image-20220723222613339</figcaption></figure><h4 id="_3-1-2-访问规则管理" tabindex="-1"><a class="header-anchor" href="#_3-1-2-访问规则管理" aria-hidden="true">#</a> 3.1.2 访问规则管理</h4><p>除了对存储桶大粒度的进行访问控制，页面上还支持对前缀粒度的访问控制。</p><p>比如我们主要只公开当前桶一部分共有访问，需要对另一部分进行访问控制，我们可以设置桶的策略为Plubic，然后设置某一目录下的文件只读或者只写。</p><p>首先点击添加访问规则按钮。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222714145.png" alt="image-20220723222714145" tabindex="0" loading="lazy"><figcaption>image-20220723222714145</figcaption></figure><p>然后添加访问前缀，访问规则。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222802171.png" alt="image-20220723222802171" tabindex="0" loading="lazy"><figcaption>image-20220723222802171</figcaption></figure><p>访问规则支持一下三种：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220723222822997.png" alt="image-20220723222822997" tabindex="0" loading="lazy"><figcaption>image-20220723222822997</figcaption></figure><h3 id="_3-2-后台管理桶策略" tabindex="-1"><a class="header-anchor" href="#_3-2-后台管理桶策略" aria-hidden="true">#</a> 3.2 后台管理桶策略</h3><p>Minio也提供了API来管理桶策略，也是需要定义策略Json，然后调用API。</p><h4 id="_3-2-1-设置桶策略" tabindex="-1"><a class="header-anchor" href="#_3-2-1-设置桶策略" aria-hidden="true">#</a> 3.2.1. 设置桶策略</h4><p>API如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBucketPolicy</span><span class="token punctuation">(</span><span class="token class-name">SetBucketPolicyArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;{\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;    \\&quot;Statement\\&quot;: [\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;        {\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Action\\&quot;: [\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;                \\&quot;s3:GetBucketLocation\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;                \\&quot;s3:ListBucket\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            ],\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Effect\\&quot;: \\&quot;Allow\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Principal\\&quot;: \\&quot;*\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Resource\\&quot;: \\&quot;arn:aws:s3:::my-bucketname\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;        },\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;        {\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Action\\&quot;: \\&quot;s3:GetObject\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Effect\\&quot;: \\&quot;Allow\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Principal\\&quot;: \\&quot;*\\&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;            \\&quot;Resource\\&quot;: \\&quot;arn:aws:s3:::my-bucketname/myobject*\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;        }\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;    ],\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;    \\&quot;Version\\&quot;: \\&quot;2012-10-17\\&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;}\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      minioClient<span class="token punctuation">.</span><span class="token function">setBucketPolicy</span><span class="token punctuation">(</span>
          <span class="token class-name">SetBucketPolicyArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;my-bucketname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span>builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-查询桶策略" tabindex="-1"><a class="header-anchor" href="#_3-2-2-查询桶策略" aria-hidden="true">#</a> 3.2.2 查询桶策略</h4><p>API如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBucketPolicy</span><span class="token punctuation">(</span><span class="token class-name">GetBucketPolicyArgs</span> args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> policy <span class="token operator">=</span>
          minioClient<span class="token punctuation">.</span><span class="token function">getBucketPolicy</span><span class="token punctuation">(</span>
              <span class="token class-name">GetBucketPolicyArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span><span class="token string">&quot;aaaaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Current policy: &quot;</span> <span class="token operator">+</span> policy<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询结果如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">{</span>
    <span class="token string">&quot;Version&quot;</span><span class="token operator">:</span><span class="token string">&quot;2012-10-17&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Statement&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;Effect&quot;</span><span class="token operator">:</span><span class="token string">&quot;Allow&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Principal&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token string">&quot;AWS&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                    <span class="token string">&quot;*&quot;</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Action&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;s3:GetBucketLocation&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:ListBucketMultipartUploads&quot;</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Resource&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;arn:aws:s3:::aaaaa&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;Effect&quot;</span><span class="token operator">:</span><span class="token string">&quot;Allow&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Principal&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token string">&quot;AWS&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                    <span class="token string">&quot;*&quot;</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Action&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;s3:DeleteObject&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:ListMultipartUploadParts&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:PutObject&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;s3:AbortMultipartUpload&quot;</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Resource&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token string">&quot;arn:aws:s3:::aaaaa/bb*&quot;</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-对象策略" tabindex="-1"><a class="header-anchor" href="#_3-3-对象策略" aria-hidden="true">#</a> 3.3 对象策略</h3><p>Minio貌似没有具体对象文件的访问策略管理。那么在WEB端，需要加载图片，下载视频，如何去访问文件呢？</p><ol><li><p>SDK直接访问</p><p>如果是JS集成，可以使用使用客户端直连Minio，此方式简单效率高，但是安全性不高。</p><p>如果是后台应用JAVA集成，Web请求访问，文件服务再去访问Minio获取资源，然后再响应给Web端，此方式安全性高，但是链路较长，效率低了一半。。。</p></li><li><p>公开访问权限 可以设置桶的访问策略为Public，这样就能直接访问到文件，但是各种针对于用户不需要登录就能访问的照片，文件等，因为安全性最低。</p></li><li><p><strong>临时访问URL</strong></p></li></ol><p>WEB端可以请求后台服务，后台服务调用getPresignedObjectUrl方法，返回一个临时访问路径，WEB端使用此链接直接去访问对象，此方式安全可靠，效率也高，但是多了一步请求临时URL的访问。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,111),r={href:"https://yunyanchengyu.blog.csdn.net/article/details/120855875",target:"_blank",rel:"noopener noreferrer"};function d(g,k){const s=c("ExternalLinkIcon");return t(),i("div",null,[l,n("p",null,[n("a",r,[e("Minio入门系列【10】Minio之权限控制策略"),o(s)])])])}const m=a(u,[["render",d],["__file","minio-access-control.html.vue"]]);export{m as default};
