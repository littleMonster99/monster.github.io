import{_ as a,W as t,X as p,Y as n,Z as e,$ as c,a0 as o,D as l}from"./framework-f64bc974.js";const i={},u=o(`<h1 id="数据权限功能-实现思路" tabindex="-1"><a class="header-anchor" href="#数据权限功能-实现思路" aria-hidden="true">#</a> 数据权限功能&amp;实现思路</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>在实际开发中，需要设置用户只能查看哪些部门的数据，这种情况一般称为数据权限。例如</p><ul><li>销售，财务的数据，它们是非常敏感的，因此要求对数据权限进行控制</li><li>基于集团性的应用系统而言，就更多需要控制好各自公司数据了， <ul><li>如设置只能查看本公司、或者本部门的数据</li><li>对于特殊领导，可能需要跨部门的数据</li></ul></li></ul><p>因此程序不能硬编码哪个领导该访问那些数据，需要进行后台的权限和数据权限的控制。</p><blockquote><p>提示</p><p>默认系统管理员<code>admin</code>拥有所有数据权限<code>（userId=1）</code>，默认角色拥有所有数据权限（如不需要数据权限不用设置数据权限操作）</p></blockquote><h2 id="_2-注解参数说明" tabindex="-1"><a class="header-anchor" href="#_2-注解参数说明" aria-hidden="true">#</a> 2.注解参数说明</h2><table><thead><tr><th>参数</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>deptAlias</td><td>String</td><td>空</td><td>部门表的别名</td></tr><tr><td>userAlias</td><td>String</td><td>空</td><td>用户表的别名</td></tr></tbody></table><h2 id="_3-数据权限使用" tabindex="-1"><a class="header-anchor" href="#_3-数据权限使用" aria-hidden="true">#</a> 3. 数据权限使用</h2><p>1、在（系统管理-角色管理）设置需要数据权限的角色 目前支持以下几种权限</p><ul><li>全部数据权限</li><li>自定数据权限</li><li>部门数据权限</li><li>部门及以下数据权限</li><li>仅本人数据权限</li></ul><p>2、在需要数据权限控制方法上添加<code>@DataScope</code>注解，其中<code>d</code>和<code>u</code>用来表示表的别名</p><p><strong>部门数据权限注解</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@DataScope</span><span class="token punctuation">(</span>deptAlias <span class="token operator">=</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&gt;</span></span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> mapper<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>部门及用户权限注解</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@DataScope</span><span class="token punctuation">(</span>deptAlias <span class="token operator">=</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> userAlias <span class="token operator">=</span> <span class="token string">&quot;u&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&gt;</span></span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> mapper<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、在<code>mybatis</code>查询底部标签添加数据范围过滤</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...Result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select...Vo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!-- 数据范围过滤 --&gt;</span>
    \${params.dataScope}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：用户管理（未过滤数据权限的情况）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> u<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span> u<span class="token punctuation">.</span>dept_id<span class="token punctuation">,</span> u<span class="token punctuation">.</span>login_name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>user_name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>email
	<span class="token punctuation">,</span> u<span class="token punctuation">.</span>phonenumber<span class="token punctuation">,</span> u<span class="token punctuation">.</span>password<span class="token punctuation">,</span> u<span class="token punctuation">.</span>sex<span class="token punctuation">,</span> u<span class="token punctuation">.</span>avatar<span class="token punctuation">,</span> u<span class="token punctuation">.</span>salt
	<span class="token punctuation">,</span> u<span class="token punctuation">.</span><span class="token keyword">status</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>del_flag<span class="token punctuation">,</span> u<span class="token punctuation">.</span>login_ip<span class="token punctuation">,</span> u<span class="token punctuation">.</span>login_date<span class="token punctuation">,</span> u<span class="token punctuation">.</span>create_by
	<span class="token punctuation">,</span> u<span class="token punctuation">.</span>create_time<span class="token punctuation">,</span> u<span class="token punctuation">.</span>remark<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_name
<span class="token keyword">from</span> sys_user u
	<span class="token keyword">left</span> <span class="token keyword">join</span> sys_dept d <span class="token keyword">on</span> u<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>dept_id
<span class="token keyword">where</span> u<span class="token punctuation">.</span>del_flag <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：用户管理（已过滤数据权限的情况）：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> u<span class="token punctuation">.</span>user_id<span class="token punctuation">,</span> u<span class="token punctuation">.</span>dept_id<span class="token punctuation">,</span> u<span class="token punctuation">.</span>login_name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>user_name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>email
	<span class="token punctuation">,</span> u<span class="token punctuation">.</span>phonenumber<span class="token punctuation">,</span> u<span class="token punctuation">.</span>password<span class="token punctuation">,</span> u<span class="token punctuation">.</span>sex<span class="token punctuation">,</span> u<span class="token punctuation">.</span>avatar<span class="token punctuation">,</span> u<span class="token punctuation">.</span>salt
	<span class="token punctuation">,</span> u<span class="token punctuation">.</span><span class="token keyword">status</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>del_flag<span class="token punctuation">,</span> u<span class="token punctuation">.</span>login_ip<span class="token punctuation">,</span> u<span class="token punctuation">.</span>login_date<span class="token punctuation">,</span> u<span class="token punctuation">.</span>create_by
	<span class="token punctuation">,</span> u<span class="token punctuation">.</span>create_time<span class="token punctuation">,</span> u<span class="token punctuation">.</span>remark<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dept_name
<span class="token keyword">from</span> sys_user u
	<span class="token keyword">left</span> <span class="token keyword">join</span> sys_dept d <span class="token keyword">on</span> u<span class="token punctuation">.</span>dept_id <span class="token operator">=</span> d<span class="token punctuation">.</span>dept_id
<span class="token keyword">where</span> u<span class="token punctuation">.</span>del_flag <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span>
	<span class="token operator">and</span> u<span class="token punctuation">.</span>dept_id <span class="token operator">in</span> <span class="token punctuation">(</span>
		<span class="token keyword">select</span> dept_id
		<span class="token keyword">from</span> sys_role_dept
		<span class="token keyword">where</span> role_id <span class="token operator">=</span> <span class="token number">2</span>
	<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果很明显，我们多了如下语句。通过角色部门表<code>（sys_role_dept）</code>完成了数据权限过滤</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">and</span> u<span class="token punctuation">.</span>dept_id <span class="token operator">in</span> <span class="token punctuation">(</span>
	<span class="token keyword">select</span> dept_id
	<span class="token keyword">from</span> sys_role_dept
	<span class="token keyword">where</span> role_id <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>逻辑实现代码 <code>com.ruoyi.framework.aspectj.DataScopeAspect</code></p><blockquote><p>提示</p><p>仅实体继承<code>BaseEntity</code>才会进行处理，<code>SQL</code>语句会存放到<code>BaseEntity</code>对象中的<code>params</code>属性中，然后在<code>xml</code>中通过<code>\${params.dataScope}</code>获取拼接后的语句。</p></blockquote><h2 id="_4-实现思路" tabindex="-1"><a class="header-anchor" href="#_4-实现思路" aria-hidden="true">#</a> 4. 实现思路</h2><h3 id="_4-1-针对那些数据进行权限控制" tabindex="-1"><a class="header-anchor" href="#_4-1-针对那些数据进行权限控制" aria-hidden="true">#</a> 4.1 针对那些数据进行权限控制？</h3><p>我们在角色管理中分配该角色用户的数据权限，但并不是所有接口都需要控制数据权限，**所以针对需要控制数据权限的接口，我们需要定义一个注解 ** - <code>@DataScope</code></p><p>我们通过 <code>@DataScope</code> 就可以通过aop拦截到该请求了</p><h3 id="_4-2-不同权限情况要如何处理" tabindex="-1"><a class="header-anchor" href="#_4-2-不同权限情况要如何处理" aria-hidden="true">#</a> 4.2 不同权限情况要如何处理？</h3><p>我们拥有多种数据权限类型，每种类型的过滤情况并不相同</p><ol><li><p>全部数据权限</p><p>不添加sql</p></li><li><p>自定数据权限</p><p>根据角色id，过滤出选定的部门</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> sqlString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                        <span class="token string">&quot; OR {}.dept_id IN ( SELECT dept_id FROM sys_role_dept WHERE role_id = {} ) &quot;</span><span class="token punctuation">,</span> deptAlias<span class="token punctuation">,</span>
                        role<span class="token punctuation">.</span><span class="token function">getRoleId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>部门数据权限</p><p>直接过滤出自身的过滤权限</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>sqlString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot; OR {}.dept_id = {} &quot;</span><span class="token punctuation">,</span> deptAlias<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getDeptId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>部门及以下数据权限</p><p>查找的时候，直接过滤出部门级以下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>sqlString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
                        <span class="token string">&quot; OR {}.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = {} or find_in_set( {} , ancestors ) )&quot;</span><span class="token punctuation">,</span>
                        deptAlias<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getDeptId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getDeptId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>仅本人数据权限</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>userAlias<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    sqlString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot; OR {}.user_id = {} &quot;</span><span class="token punctuation">,</span> userAlias<span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// 数据权限为仅本人且没有userAlias别名不查询任何数据</span>
                    sqlString<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; OR 1=0 &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_4-3-拼接时关联表的别名" tabindex="-1"><a class="header-anchor" href="#_4-3-拼接时关联表的别名" aria-hidden="true">#</a> 4.3 拼接时关联表的别名</h3><p>我们看到拼接语句上，都是需要关联表的，这些sql 语句我们是写在mybatis语句中的，我们不能保证所有的人，user表别名是u，部门表都是d。所以我们需要将定义的别名传递进来</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 数据权限过滤注解
 * 
 * <span class="token keyword">@author</span> ygn
 */</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">DataScope</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 部门表的别名
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deptAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 用户表的别名
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-如何拼接上sql" tabindex="-1"><a class="header-anchor" href="#_4-4-如何拼接上sql" aria-hidden="true">#</a> 4.4 如何拼接上SQL</h3><p>有了过滤的sql语句后，怎么拼装上呢？</p><p>我们知道我们mybayis 参数是通过实体类来的，那么我们在BaseEntity 定义了扩展参数就派上了用场</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span>
<span class="token punctuation">{</span>
		<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
		<span class="token doc-comment comment">/** 请求参数 */</span>
		<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">;</span>
		
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们对这个参数添加我们的权限参数</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 数据权限过滤关键字
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DATA_SCOPE</span> <span class="token operator">=</span> <span class="token string">&quot;dataScope&quot;</span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * 拼接权限sql前先清空params.dataScope参数防止注入
 */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">clearDataScope</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">JoinPoint</span> joinPoint<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">Object</span> params <span class="token operator">=</span> joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> params <span class="token keyword">instanceof</span> <span class="token class-name">BaseEntity</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">BaseEntity</span> baseEntity <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BaseEntity</span><span class="token punctuation">)</span> params<span class="token punctuation">;</span>
        baseEntity<span class="token punctuation">.</span><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">DATA_SCOPE</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-具体使用" tabindex="-1"><a class="header-anchor" href="#_4-5-具体使用" aria-hidden="true">#</a> 4.5 具体使用</h3><p>具体使用，还是需要在底部添加上引用<code>dataScope</code> 的语句</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...Result<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>select...Vo<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token comment">&lt;!-- 数据范围过滤 --&gt;</span>
    \${params.dataScope}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-具体实现" tabindex="-1"><a class="header-anchor" href="#_5-具体实现" aria-hidden="true">#</a> 5. 具体实现</h2><h3 id="_5-1-数据权限过滤注解" tabindex="-1"><a class="header-anchor" href="#_5-1-数据权限过滤注解" aria-hidden="true">#</a> 5.1 数据权限过滤注解</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 数据权限过滤注解
 * 
 * <span class="token keyword">@author</span> ygn
 */</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">DataScope</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 部门表的别名
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">deptAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 用户表的别名
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">userAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,49),d={href:"https://doc.ruoyi.vip/ruoyi/document/htsc.html#%E6%95%B0%E6%8D%AE%E6%9D%83%E9%99%90",target:"_blank",rel:"noopener noreferrer"};function r(k,v){const s=l("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",d,[e("若依官方文档"),c(s)])])])}const b=a(i,[["render",r],["__file","manage-system-data-scope.html.vue"]]);export{b as default};
