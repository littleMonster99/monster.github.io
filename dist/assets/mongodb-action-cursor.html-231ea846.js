import{_ as p,W as o,X as e,Y as n,Z as a,$ as t,a0 as c,D as u}from"./framework-f64bc974.js";const l={},i=c(`<h1 id="mongotemplate使用cursor处理大数量的数据" tabindex="-1"><a class="header-anchor" href="#mongotemplate使用cursor处理大数量的数据" aria-hidden="true">#</a> MongoTemplate使用Cursor处理大数量的数据</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>对于数据量巨大的情况下，使用mongoTemplate.find()方法返回一个列表，对服务器压力非常大</p><blockquote><p>在我的项目中数据量140w，我多线程分页批量查询。执行没多长时间就会导致mongo服务器奔溃。使用cursor则没有这个问题</p></blockquote><p>mongoTemplate提供了另外一种方法，使用游标逐个获取数据，同时可以指定只获取哪些域，而不是全部获取回来。</p><h2 id="_2-案例" tabindex="-1"><a class="header-anchor" href="#_2-案例" aria-hidden="true">#</a> 2. 案例</h2><h3 id="_2-1-案例1" tabindex="-1"><a class="header-anchor" href="#_2-1-案例1" aria-hidden="true">#</a> 2.1 案例1</h3><p>将Query 转为Document，而Document 又实现了Bson .所以大部分情况我们Query还是可以用的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//组装查询条件</span>
<span class="token class-name">Query</span> query<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">Sort</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Sort<span class="token punctuation">.</span>Order</span><span class="token punctuation">(</span><span class="token class-name">Sort<span class="token punctuation">.</span>Direction</span><span class="token punctuation">.</span><span class="token constant">ASC</span><span class="token punctuation">,</span> <span class="token string">&quot;_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">MongoCursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> cursor <span class="token operator">=</span>
     <span class="token comment">//指定查询集合</span>
     mongoTemplate<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;xxx[表名]&quot;</span><span class="token punctuation">)</span>
     <span class="token comment">//组装查询条件</span>
     <span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getQueryObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
     <span class="token comment">//组装排序方式（非必须，可不设置）</span>
     <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getSortObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
     <span class="token comment">//设置游标查询不超时</span>
     <span class="token punctuation">.</span><span class="token function">noCursorTimeout</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
     <span class="token comment">//设置批量从数据库中获取的数据量</span>
     <span class="token punctuation">.</span><span class="token function">batchSize</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">cursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Document</span> doc<span class="token punctuation">;</span>
    <span class="token comment">//Map map;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//写法1（建议）</span>
        doc <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;xxx[属性名]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//写法2（不建议）</span>
        <span class="token comment">//map=cursor.next();</span>
        <span class="token comment">//System.out.println(map.get(&quot;xxx[属性名]&quot;));</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-案例2" tabindex="-1"><a class="header-anchor" href="#_2-2-案例2" aria-hidden="true">#</a> 2.2 案例2</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token class-name">DBObject</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//setup the query criteria 设置查询条件</span>
	query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;method&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
	query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ctime&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token string">&quot;$gte&quot;</span><span class="token punctuation">,</span> bTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;$lt&quot;</span><span class="token punctuation">,</span> eTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
	logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;query: {}&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
	<span class="token class-name">DBObject</span> fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//only get the needed fields. 设置需要获取哪些域</span>
	fields<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fields<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;uId&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	fields<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ctime&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
	<span class="token class-name">DBCursor</span> dbCursor <span class="token operator">=</span> mongoTemplate<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;collectionName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> fields<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
	<span class="token keyword">while</span> <span class="token punctuation">(</span>dbCursor<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">DBObject</span> object <span class="token operator">=</span> dbCursor<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;object: {}&quot;</span><span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//do something.</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-案例3" tabindex="-1"><a class="header-anchor" href="#_2-3-案例3" aria-hidden="true">#</a> 2.3 案例3</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">MongoClient</span> mongoClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MongoClient</span><span class="token punctuation">(</span> <span class="token string">&quot;172.26.xxx.xxx&quot;</span> <span class="token punctuation">,</span> <span class="token number">27017</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MongoDatabase</span> mongoDatabase <span class="token operator">=</span>mongoClient<span class="token punctuation">.</span><span class="token function">getDatabase</span><span class="token punctuation">(</span><span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">MongoCollection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> collection <span class="token operator">=</span> mongoDatabase<span class="token punctuation">.</span><span class="token function">getCollection</span><span class="token punctuation">(</span><span class="token string">&quot;test_logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//加入查询条件</span>
<span class="token class-name">BasicDBObject</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//时间区间查询 记住如果想根据这种形式进行时间的区间查询 ，存储的时候 记得把字段存成字符串，就按yyyy-MM-dd HH:mm:ss 格式来</span>
query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;times&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BasicDBObject</span><span class="token punctuation">(</span><span class="token string">&quot;$gte&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2018-06-02 12:20:00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;$lte&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;2018-07-04 10:02:46&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//模糊查询</span>
<span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;^.*王.*$&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token constant">CASE_INSENSITIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span> pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//精确查询</span>
query<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//skip 是分页查询，从第0条开始查10条数据。 Sorts是排序用的。有descending 和ascending</span>
<span class="token class-name">MongoCursor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Document</span><span class="token punctuation">&gt;</span></span> cursor <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Sorts</span><span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token class-name">Sorts</span><span class="token punctuation">.</span><span class="token function">descending</span><span class="token punctuation">(</span><span class="token string">&quot;times&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
<span class="token keyword">int</span> unm<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
     <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">UserBehaviorLogs</span> userBehaviorLogs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserBehaviorLogs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//查询出的结果转换成jsonObject,然后进行封装或者直接返回给前端处理。我这是封装成对象了</span>
          <span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span> cursor<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          userBehaviorLogs<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//id</span>
          userBehaviorLogs<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用户id</span>
          userBehaviorLogs<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用户名称</span>
          userBehaviorLogs<span class="token punctuation">.</span><span class="token function">setParams</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;params&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数</span>
          userBehaviorLogs<span class="token punctuation">.</span><span class="token function">setException</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//异常信息</span>
          userBehaviorLogs<span class="token punctuation">.</span><span class="token function">setTimes</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;times&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建时间</span>
          unm<span class="token operator">++</span><span class="token punctuation">;</span>               <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>unm<span class="token operator">+</span><span class="token string">&quot;=&quot;</span><span class="token operator">+</span>userBehaviorLogs<span class="token punctuation">.</span><span class="token function">getTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;===&quot;</span><span class="token operator">+</span>userBehaviorLogs<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-说明" tabindex="-1"><a class="header-anchor" href="#_3-说明" aria-hidden="true">#</a> 3. 说明</h2><h3 id="_3-1-设置游标查询不超时" tabindex="-1"><a class="header-anchor" href="#_3-1-设置游标查询不超时" aria-hidden="true">#</a> 3.1 <strong>设置游标查询不超时</strong></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">noCursorTimeout</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>必须设置</strong>此属性，防止数据库连接超时，导致的游标连接<code>自动关闭</code>。</p><h3 id="_3-2-设置批量从数据库中获取的数据量" tabindex="-1"><a class="header-anchor" href="#_3-2-设置批量从数据库中获取的数据量" aria-hidden="true">#</a> 3.2 <strong>设置批量从数据库中获取的数据量</strong></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token function">batchSize</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>建议根据<code>实际业务情况</code>而设置，设置此批次属性，游标的迭代器进行查询时，会<code>根据需要</code>，去数据库获取<code>指定批量</code>的数据，<code>缓存</code>起来供迭代器使用，而不是每次next()<code>获取数据的时候</code>，均去查询数据库，<code>减少数据库查询次数</code>，提高了效率。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,21),k={href:"https://www.jianshu.com/p/f6d7a3b571c2",target:"_blank",rel:"noopener noreferrer"},r={href:"https://blog.csdn.net/ClementAD/article/details/55210973",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/jisuanjiguoba/article/details/106274571",target:"_blank",rel:"noopener noreferrer"};function m(v,b){const s=u("ExternalLinkIcon");return o(),e("div",null,[i,n("p",null,[n("a",k,[a("mongoTemplate使用游标查询海量数据"),t(s)])]),n("p",null,[n("a",r,[a("MongoTemplate使用Cursor处理大数量的数据"),t(s)])]),n("p",null,[n("a",d,[a("Java中mongodb使用MongoCollection和BasicDBObject条件查询"),t(s)])])])}const h=p(l,[["render",m],["__file","mongodb-action-cursor.html.vue"]]);export{h as default};
