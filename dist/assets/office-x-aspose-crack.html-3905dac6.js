import{_ as e,W as o,X as c,Y as n,Z as s,$ as t,a0 as p,D as l}from"./framework-f64bc974.js";const i={},u=p(`<h1 id="aspose-word-for-java-破解使用" tabindex="-1"><a class="header-anchor" href="#aspose-word-for-java-破解使用" aria-hidden="true">#</a> aspose.word for java 破解使用</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>最近由于项目中需要用到word转换为pdf文档，综合了市面上所有的方案后，最后选择使用Aspose.Words方案。该产品是国外的，商用的话需要在官网申请license。本文主要阐述如何简单的进行试用，不推荐商用。如有开发者采用本文方法进行商业用途，一切责任和损失均与本文无关。</p><h2 id="_2-aspose-word-21-6-破解" tabindex="-1"><a class="header-anchor" href="#_2-aspose-word-21-6-破解" aria-hidden="true">#</a> 2. aspose.word 21.6 破解</h2><h3 id="_2-1-破解原理" tabindex="-1"><a class="header-anchor" href="#_2-1-破解原理" aria-hidden="true">#</a> 2.1 破解原理</h3><p>com.aspose.words.zzXyu 类下的 zzZXG 与破解有关，我们通过反射动态替换掉他</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220519234946302.png" alt="image-20220519234946302" tabindex="0" loading="lazy"><figcaption>image-20220519234946302</figcaption></figure><blockquote><p>也不知道是哪个大佬最先发现的，太强了</p></blockquote><h3 id="_2-2-byte-含义" tabindex="-1"><a class="header-anchor" href="#_2-2-byte-含义" aria-hidden="true">#</a> 2.2 byte[] 含义</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 默认的含义：EVALUATION 评价/评估
public static final byte[] zzZXG = new byte[]{69, 86, 65, 76, 85, 65, 84, 73, 79, 78};
// 更改后的含义：LICENSED 许可
byte[] bytes = {76, 73, 67, 69, 78, 83, 69, 68};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-破解" tabindex="-1"><a class="header-anchor" href="#_2-3-破解" aria-hidden="true">#</a> 2.3 破解</h3><p>在执行转换前</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> aClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.aspose.words.zzXyu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Field</span> zzZXG <span class="token operator">=</span> aClass<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;zzZXG&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            zzZXG<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Field</span> modifiersField <span class="token operator">=</span> zzZXG<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;modifiers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            modifiersField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            modifiersField<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span>zzZXG<span class="token punctuation">,</span> zzZXG<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token constant">FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            zzZXG<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">83</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;apose word 破解异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-aspose-word-21-11-破解" tabindex="-1"><a class="header-anchor" href="#_3-aspose-word-21-11-破解" aria-hidden="true">#</a> 3 aspose.word 21.11 破解</h2>`,14),r={href:"https://juejin.cn/post/7034387646168186894",target:"_blank",rel:"noopener noreferrer"},k=p(`<h3 id="_3-1-分析" tabindex="-1"><a class="header-anchor" href="#_3-1-分析" aria-hidden="true">#</a> 3.1 分析</h3><p>直接看参考文章</p><h3 id="_3-2-破解" tabindex="-1"><a class="header-anchor" href="#_3-2-破解" aria-hidden="true">#</a> 3.2 破解</h3><h4 id="_3-2-1添加javassist修改class字节码文件" tabindex="-1"><a class="header-anchor" href="#_3-2-1添加javassist修改class字节码文件" aria-hidden="true">#</a> 3.2.1添加Javassist修改class字节码文件</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.javassist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javassist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.28.0-GA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-2-2-添加修改方法" tabindex="-1"><a class="header-anchor" href="#_3-2-2-添加修改方法" aria-hidden="true">#</a> 3.2.2 添加修改方法</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 修改words jar包里面的校验
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">modifyWordsJar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//这一步是完整的jar包路径,选择自己解压的jar目录</span>
        <span class="token class-name">ClassPool</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertClassPath</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\aspose-words-21.11.0-java\\\\lib\\\\aspose-words-21.11.0-jdk17.jar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取指定的class文件对象</span>
        <span class="token class-name">CtClass</span> zzZJJClass <span class="token operator">=</span> <span class="token class-name">ClassPool</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCtClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.aspose.words.zzXDb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//从class对象中解析获取指定的方法</span>
        <span class="token class-name">CtMethod</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methodA <span class="token operator">=</span> zzZJJClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token string">&quot;zzY0J&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//遍历重载的方法</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CtMethod</span> ctMethod <span class="token operator">:</span> methodA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">CtClass</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ps <span class="token operator">=</span> ctMethod<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ctMethod<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;zzY0J&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ps[0].getName==&quot;</span> <span class="token operator">+</span> ps<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//替换指定方法的方法体</span>
                ctMethod<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;{this.zzZ3l = new java.util.Date(Long.MAX_VALUE);this.zzWSL = com.aspose.words.zzYeQ.zzXgr;zzWiV = this;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//这一步就是将破译完的代码放在桌面上</span>
        zzZJJClass<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\roc\\\\Desktop\\\\&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取指定的class文件对象</span>
        <span class="token class-name">CtClass</span> zzZJJClassB <span class="token operator">=</span> <span class="token class-name">ClassPool</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCtClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.aspose.words.zzYKk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//从class对象中解析获取指定的方法</span>
        <span class="token class-name">CtMethod</span> methodB <span class="token operator">=</span> zzZJJClassB<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;zzWy3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//替换指定方法的方法体</span>
        methodB<span class="token punctuation">.</span><span class="token function">setBody</span><span class="token punctuation">(</span><span class="token string">&quot;{return 256;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//这一步就是将破译完的代码放在桌面上</span>
        zzZJJClassB<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\roc\\\\Desktop\\\\&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;错误==&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行修改方法后会在桌面生成 com 修改后的文件夹</p><h4 id="_3-2-3-修改jar包里面的数据" tabindex="-1"><a class="header-anchor" href="#_3-2-3-修改jar包里面的数据" aria-hidden="true">#</a> 3.2.3. 修改jar包里面的数据</h4><p>为了不修改原jar包建议复制一份重命名。</p><ol><li><p>打开jar包将桌面com文件夹覆盖到jar包com文件夹</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220629165728881.png" alt="image-20220629165728881" tabindex="0" loading="lazy"><figcaption>image-20220629165728881</figcaption></figure></li><li><p>删除jar包里面的<code>.RSA</code>和<code>.SF</code>文件</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220629165758000.png" alt="image-20220629165758000" tabindex="0" loading="lazy"><figcaption>image-20220629165758000</figcaption></figure></li></ol><h3 id="_3-3-重新导入修改后的jar包进行测试" tabindex="-1"><a class="header-anchor" href="#_3-3-重新导入修改后的jar包进行测试" aria-hidden="true">#</a> 3.3 重新导入修改后的jar包进行测试</h3><ol><li>maven移除旧的jar包，导入修改后的jar包</li><li>调用测试方法进行测试转换后的文件是否去除水印和数量限制成功</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> sourceFile <span class="token operator">=</span> <span class="token string">&quot;D:\\\\b.doc&quot;</span><span class="token punctuation">;</span><span class="token comment">//输入的文件</span>
<span class="token class-name">String</span> targetFile <span class="token operator">=</span> <span class="token string">&quot;D:\\\\转换后.pdf&quot;</span><span class="token punctuation">;</span><span class="token comment">//输出的文件</span>
<span class="token doc-comment comment">/**
 * Word转PDF操作
 *
 * <span class="token keyword">@param</span> <span class="token parameter">sourceFile</span> 源文件
 * <span class="token keyword">@param</span> <span class="token parameter">targetFile</span> 目标文件
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doc2pdf</span><span class="token punctuation">(</span><span class="token class-name">String</span> sourceFile<span class="token punctuation">,</span> <span class="token class-name">String</span> targetFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> old <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileOutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span>Document</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span>Document</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span>SaveFormat</span><span class="token punctuation">.</span><span class="token constant">PDF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;共耗时：&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>now <span class="token operator">-</span> old<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;秒&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//转化用时</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-破解的jar包" tabindex="-1"><a class="header-anchor" href="#_3-4-破解的jar包" aria-hidden="true">#</a> 3.4 破解的jar包</h3><p>如果觉得繁琐，可以直接从我处理好的下载</p>`,16),d={href:"https://pan.baidu.com/s/1wmd--zPotNz1Mnl1waDP_g",target:"_blank",rel:"noopener noreferrer"},m=n("h2",{id:"参考文章",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),s(" 参考文章")],-1),v={href:"https://blog.51cto.com/u_15144750/4692930",target:"_blank",rel:"noopener noreferrer"},b=n("strong",null,"aspose word for java 21.6 破解使用",-1),g={href:"https://blog.csdn.net/xxw19950701/article/details/115724571",target:"_blank",rel:"noopener noreferrer"},h={href:"https://juejin.cn/post/7034387646168186894",target:"_blank",rel:"noopener noreferrer"};function f(z,_){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[s("Aspose.Words for Java21.11去除水印和数量限制"),t(a)])]),k,n("p",null,[s("链接:"),n("a",d,[s("https://pan.baidu.com/s/1wmd--zPotNz1Mnl1waDP_g"),t(a)]),s(" 密码:upj6")]),m,n("p",null,[n("a",v,[b,t(a)])]),n("p",null,[n("a",g,[s("Aspose.Words for java 21.1 破解步骤"),t(a)])]),n("p",null,[n("a",h,[s("Aspose.Words for Java21.11去除水印和数量限制"),t(a)])])])}const y=e(i,[["render",f],["__file","office-x-aspose-crack.html.vue"]]);export{y as default};
