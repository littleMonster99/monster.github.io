const e=JSON.parse('{"key":"v-59b0edd2","path":"/java/thread/java-thread-x-juc-tool-CompletableFuture.html","title":"JUC工具类: CompletableFuture 详解","lang":"zh-CN","frontmatter":{"order":730,"category":["Java","并发"],"description":"1. 简介 因为Future的局限性，它没法直接对多个任务进行链式、组合等处理，需要借助并发工具类才能完成，实现逻辑比较复杂。 而CompletableFuture是对Future的扩展和增强。 CompletableFuture实现了Future接口，并在此基础上进行了丰富的扩展，完美弥补了Future的局限性; 同时CompletableFutur...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/thread/java-thread-x-juc-tool-CompletableFuture.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"JUC工具类: CompletableFuture 详解"}],["meta",{"property":"og:description","content":"1. 简介 因为Future的局限性，它没法直接对多个任务进行链式、组合等处理，需要借助并发工具类才能完成，实现逻辑比较复杂。 而CompletableFuture是对Future的扩展和增强。 CompletableFuture实现了Future接口，并在此基础上进行了丰富的扩展，完美弥补了Future的局限性; 同时CompletableFutur..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[{"level":3,"title":"1.1 CompletableFuture的默认线程池","slug":"_1-1-completablefuture的默认线程池","link":"#_1-1-completablefuture的默认线程池","children":[]}]},{"level":2,"title":"2. 常用方法","slug":"_2-常用方法","link":"#_2-常用方法","children":[{"level":3,"title":"2.1 依赖关系","slug":"_2-1-依赖关系","link":"#_2-1-依赖关系","children":[]},{"level":3,"title":"2.2 and集合关系","slug":"_2-2-and集合关系","link":"#_2-2-and集合关系","children":[]},{"level":3,"title":"2.3 or聚合关系","slug":"_2-3-or聚合关系","link":"#_2-3-or聚合关系","children":[]},{"level":3,"title":"2.4 并行执行","slug":"_2-4-并行执行","link":"#_2-4-并行执行","children":[]},{"level":3,"title":"2.5 结果处理","slug":"_2-5-结果处理","link":"#_2-5-结果处理","children":[]}]},{"level":2,"title":"3. 异步操作","slug":"_3-异步操作","link":"#_3-异步操作","children":[{"level":3,"title":"3.1 异步示例","slug":"_3-1-异步示例","link":"#_3-1-异步示例","children":[]},{"level":3,"title":"3.2 获取结果(join&get)","slug":"_3-2-获取结果-join-get","link":"#_3-2-获取结果-join-get","children":[]},{"level":3,"title":"3.3 结果处理","slug":"_3-3-结果处理","link":"#_3-3-结果处理","children":[]}]},{"level":2,"title":"4. 应用场景","slug":"_4-应用场景","link":"#_4-应用场景","children":[{"level":3,"title":"4.1 结果转换","slug":"_4-1-结果转换","link":"#_4-1-结果转换","children":[]},{"level":3,"title":"4.2 结果消费","slug":"_4-2-结果消费","link":"#_4-2-结果消费","children":[]},{"level":3,"title":"4.3 结果组合","slug":"_4-3-结果组合","link":"#_4-3-结果组合","children":[]},{"level":3,"title":"4.4 任务交互","slug":"_4-4-任务交互","link":"#_4-4-任务交互","children":[]}]},{"level":2,"title":"5. CompletableFuture常用方法总结","slug":"_5-completablefuture常用方法总结","link":"#_5-completablefuture常用方法总结","children":[]},{"level":2,"title":"6. 使用案例","slug":"_6-使用案例","link":"#_6-使用案例","children":[{"level":3,"title":"6.1 实现最优的“烧水泡茶”程序","slug":"_6-1-实现最优的-烧水泡茶-程序","link":"#_6-1-实现最优的-烧水泡茶-程序","children":[]},{"level":3,"title":"6.2 基于Future实现","slug":"_6-2-基于future实现","link":"#_6-2-基于future实现","children":[]},{"level":3,"title":"6.3 基于CompletableFuture实现","slug":"_6-3-基于completablefuture实现","link":"#_6-3-基于completablefuture实现","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":12.77,"words":3831},"filePathRelative":"java/thread/java-thread-x-juc-tool-CompletableFuture.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
