import{_ as t,W as s,X as l,Y as i,Z as a,$ as n,a0 as g,D as o}from"./framework-f64bc974.js";const r={},c=g('<h1 id="jmeter的基本使用" tabindex="-1"><a class="header-anchor" href="#jmeter的基本使用" aria-hidden="true">#</a> JMeter的基本使用</h1><h2 id="_1-基本使用" tabindex="-1"><a class="header-anchor" href="#_1-基本使用" aria-hidden="true">#</a> 1. 基本使用</h2><p>Test Plan就是你的测试计划，可以理解为根目录，然后在里面创建测试的具体内容。</p><h3 id="_1-1-新建线程组" tabindex="-1"><a class="header-anchor" href="#_1-1-新建线程组" aria-hidden="true">#</a> 1.1 新建线程组</h3><p>添加线程组，创建模拟多少个并发用户</p><p>在 Test Plan 上點右鍵， Add → Threads (Users) → Thread Group</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621143515425.png" alt="image-20220621143515425" tabindex="0" loading="lazy"><figcaption>image-20220621143515425</figcaption></figure><p>设定有100个使用者来测试我们的服务</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621144638422.png" alt="image-20220621144638422" tabindex="0" loading="lazy"><figcaption>image-20220621144638422</figcaption></figure><ul><li><p>线程数：虚拟用户数。</p><p>模拟多少个用户请求</p></li><li><p>准备时长（Ramp-Up Period(in seconds)）：</p><p>线程数多长时间内启动完成</p><blockquote><p>比如100个线程，5秒，则表示20秒内100个线程都要启动完成，每秒启动20个线程</p></blockquote></li><li><p>循环次数：</p><p>每个线程发送的次数</p><blockquote><p>假如值为5，100个线程，则会发送500次请求，可以勾选永远循环</p></blockquote></li></ul><h3 id="_1-2-添加采样器-http请求等" tabindex="-1"><a class="header-anchor" href="#_1-2-添加采样器-http请求等" aria-hidden="true">#</a> 1.2 添加采样器（HTTP请求等）</h3><p>创建完线程组后，再添加http请求，表示要对哪个接口进行测试</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621144714690.png" alt="image-20220621144714690" tabindex="0" loading="lazy"><figcaption>image-20220621144714690</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621145436107.png" alt="image-20220621145436107" tabindex="0" loading="lazy"><figcaption>image-20220621145436107</figcaption></figure><h4 id="_1-2-1-添加请求头信息" tabindex="-1"><a class="header-anchor" href="#_1-2-1-添加请求头信息" aria-hidden="true">#</a> 1.2.1 添加请求头信息</h4><p>如果接口中需要设置特殊的请求头</p><p>如：用户信息的token，一般我们放在请求头</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150443152.png" alt="image-20220621150443152" tabindex="0" loading="lazy"><figcaption>image-20220621150443152</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150620862.png" alt="image-20220621150620862" tabindex="0" loading="lazy"><figcaption>image-20220621150620862</figcaption></figure><h3 id="_1-3-添加监听器" tabindex="-1"><a class="header-anchor" href="#_1-3-添加监听器" aria-hidden="true">#</a> 1.3 添加监听器</h3><p>为需要压测的http请求添加监听器，用户生成测试结果</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621145545694.png" alt="image-20220621145545694" tabindex="0" loading="lazy"><figcaption>image-20220621145545694</figcaption></figure><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621145723861.png" alt="image-20220621145723861" tabindex="0" loading="lazy"><figcaption>image-20220621145723861</figcaption></figure><h3 id="_1-4-自动压测" tabindex="-1"><a class="header-anchor" href="#_1-4-自动压测" aria-hidden="true">#</a> 1.4 自动压测</h3><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150711906.png" alt="image-20220621150711906" tabindex="0" loading="lazy"><figcaption>image-20220621150711906</figcaption></figure><h3 id="_1-5-查看结果" tabindex="-1"><a class="header-anchor" href="#_1-5-查看结果" aria-hidden="true">#</a> 1.5 查看结果</h3><p>可以自行查看压测的结果</p><h4 id="_1-5-1-察看结果树" tabindex="-1"><a class="header-anchor" href="#_1-5-1-察看结果树" aria-hidden="true">#</a> 1.5.1 察看结果树</h4><p>记录每个请求接口详情</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150815332.png" alt="image-20220621150815332" tabindex="0" loading="lazy"><figcaption>image-20220621150815332</figcaption></figure><h4 id="_1-5-2-汇总报告" tabindex="-1"><a class="header-anchor" href="#_1-5-2-汇总报告" aria-hidden="true">#</a> 1.5.2 汇总报告</h4><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150928889.png" alt="image-20220621150928889" tabindex="0" loading="lazy"><figcaption>image-20220621150928889</figcaption></figure><h4 id="_1-5-3-聚合报告" tabindex="-1"><a class="header-anchor" href="#_1-5-3-聚合报告" aria-hidden="true">#</a> 1.5.3 聚合报告</h4><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150939140.png" alt="image-20220621150939140" tabindex="0" loading="lazy"><figcaption>image-20220621150939140</figcaption></figure><h4 id="_1-5-4-汇总图" tabindex="-1"><a class="header-anchor" href="#_1-5-4-汇总图" aria-hidden="true">#</a> 1.5.4 汇总图</h4><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621150952833.png" alt="image-20220621150952833" tabindex="0" loading="lazy"><figcaption>image-20220621150952833</figcaption></figure><h2 id="_2-jmeter-参数化" tabindex="-1"><a class="header-anchor" href="#_2-jmeter-参数化" aria-hidden="true">#</a> 2. jmeter 参数化</h2><p>入参经常变化的话，则可以设置成一个变量，方便统一修改管理；如果入参要求随机或可多种选择，则通过函数生成器或者读取文件形成一个变量。所以参数化有三种方式：</p><ul><li>用户定义的变量、</li><li>函数生成器、</li><li>读取文件。</li></ul><h3 id="_2-1-用户定义的变量" tabindex="-1"><a class="header-anchor" href="#_2-1-用户定义的变量" aria-hidden="true">#</a> 2.1 用户定义的变量</h3><p>需要添加配置元件 - 用户定义的变量。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621153104573.png" alt="image-20220621153104573" tabindex="0" loading="lazy"><figcaption>image-20220621153104573</figcaption></figure><p>定义ip</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621153231624.png" alt="image-20220621153231624" tabindex="0" loading="lazy"><figcaption>image-20220621153231624</figcaption></figure><p>使用的时候</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621153326131.png" alt="image-20220621153326131" tabindex="0" loading="lazy"><figcaption>image-20220621153326131</figcaption></figure><h3 id="_2-2-函数生成器" tabindex="-1"><a class="header-anchor" href="#_2-2-函数生成器" aria-hidden="true">#</a> 2.2 函数生成器</h3><p>需要用到函数助手功能，可以调用函数生成一些有规则的数据。常用的几个函数有_uuid、_random、<em>time。</em></p>',48),d=i("ul",null,[i("li",null,[i("p",null,"${__UUID}："),i("p",null,"会生成一个随机唯一 的 id，比如在避免 java 请求重发造成未处理数据太多的情况，接口请求可加一个唯一的请求 id 唯一的响应 id 进行一一对应；")]),i("li",null,[i("p",null,[a("${_"),i("em",null,"Random(1,100,)}：")]),i("p",null,"随机数_random，可以 在你指定的一个范围里取随机值；_")]),i("li",{"__time(,)":""},[i("p",null,"$"),i("p",null,"_取当前时间_time，一些时间类的入参可以使用，如 {time (,)} 是生成精确到毫秒的时间戳、{time (/1000,)} 是生成精确到秒的时间戳、${__time (yyyy-MM-dd HH:mm:ss,)} 是生成精确到秒的当前时间。")])],-1),p=g(`<h4 id="_2-2-1-通过函数助手查看" tabindex="-1"><a class="header-anchor" href="#_2-2-1-通过函数助手查看" aria-hidden="true">#</a> 2.2.1 通过函数助手查看</h4><p>函数助手中的Random函数，</p><p>创建方式：Tools–&gt;函数助手对话框–&gt;选择一个功能–&gt;_Random：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621155023710.png" alt="image-20220621155023710" tabindex="0" loading="lazy"><figcaption>image-20220621155023710</figcaption></figure><h3 id="_2-3-从文件读取" tabindex="-1"><a class="header-anchor" href="#_2-3-从文件读取" aria-hidden="true">#</a> 2.3 从文件读取</h3><p>需要在线程组里面添加配置元件 - CSV Data Set Config 其中 Recycle on EOF: 设置 True 后，允许循环取值</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621155455357.png" alt="image-20220621155455357" tabindex="0" loading="lazy"><figcaption>image-20220621155455357</figcaption></figure><p>配置</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621155819206.png" alt="image-20220621155819206" tabindex="0" loading="lazy"><figcaption>image-20220621155819206</figcaption></figure><p>csv 文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>user_id,user_name
1,admin
2,test
3,sys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们压测登录接口</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621160200409.png" alt="image-20220621160200409" tabindex="0" loading="lazy"><figcaption>image-20220621160200409</figcaption></figure><p>测试结果</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220621160223118.png" alt="image-20220621160223118" tabindex="0" loading="lazy"><figcaption>image-20220621160223118</figcaption></figure><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,16),h={href:"https://blog.csdn.net/zxd1435513775/article/details/106372446",target:"_blank",rel:"noopener noreferrer"},m={href:"https://stackoverflow.max-everyday.com/2017/09/jmeter/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://learnku.com/articles/43858",target:"_blank",rel:"noopener noreferrer"};function f(b,z){const e=o("ExternalLinkIcon");return s(),l("div",null,[c,d,p,i("p",null,[i("a",h,[a("使用JMeter进行压力测试"),n(e)])]),i("p",null,[i("a",m,[a("Apache JMeter 測試工具簡單基本教學"),n(e)])]),i("p",null,[i("a",u,[a("Jmeter 压测工具使用手册（完整版）"),n(e)])])])}const x=t(r,[["render",f],["__file","dev-y-pu-jmeter-use.html.vue"]]);export{x as default};
