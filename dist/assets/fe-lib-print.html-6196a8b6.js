import{_ as p,W as e,X as o,Y as n,Z as s,$ as t,a0 as r,D as l}from"./framework-f64bc974.js";const c={},i=n("h1",{id:"vue使用print-js实现打印功能",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#vue使用print-js实现打印功能","aria-hidden":"true"},"#"),s(" Vue使用print-js实现打印功能")],-1),d=n("h2",{id:"_1-官网地址",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-官网地址","aria-hidden":"true"},"#"),s(" 1. 官网地址")],-1),u={href:"https://printjs.crabbly.com/",target:"_blank",rel:"noopener noreferrer"},k=r(`<h2 id="_2-下载" tabindex="-1"><a class="header-anchor" href="#_2-下载" aria-hidden="true">#</a> 2. 下载</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install print-js --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-导入" tabindex="-1"><a class="header-anchor" href="#_3-导入" aria-hidden="true">#</a> 3. 导入</h2><p>在main.js 中全局导入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> printjs <span class="token keyword">from</span> <span class="token string">&#39;print-js&#39;</span>

<span class="token keyword">import</span> <span class="token string">&#39;print-js/dist/print.css&#39;</span><span class="token punctuation">;</span>

<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$print <span class="token operator">=</span> printjs<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-使用" tabindex="-1"><a class="header-anchor" href="#_4-使用" aria-hidden="true">#</a> 4. 使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;printBox&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;@/assets/resources/images/zuyoulogo.png&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">&quot;@/assets/logo.png&quot;</span> alt<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>abc<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">&quot;page-break-after:always;&quot;</span><span class="token operator">&gt;</span>分页<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">&quot;page-break-after:always;&quot;</span><span class="token operator">&gt;</span>分页<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">&quot;page-break-after:always;&quot;</span><span class="token operator">&gt;</span>分页<span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">&quot;page-break-after:always;&quot;</span><span class="token operator">&gt;</span>分页<span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>a<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;printHTML&quot;</span><span class="token operator">&gt;</span>打印<span class="token constant">HTML</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>button<span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>a<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;printPDF&quot;</span><span class="token operator">&gt;</span>打印<span class="token constant">PDF</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>button<span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>a<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;printImg&quot;</span><span class="token operator">&gt;</span>打印图片<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>button<span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>a<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;printJSON&quot;</span><span class="token operator">&gt;</span>打印<span class="token constant">JSON</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>button<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">printUrl</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">printUrl2</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">someJSONdata</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;John Doe&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;john@doe.com&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&#39;111-111-1111&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Barry Allen&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;barry@flash.com&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&#39;222-222-2222&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Cool Dude&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token string">&#39;cool@dude.com&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&#39;333-333-3333&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">printHTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$print</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      	<span class="token literal-property property">printable</span><span class="token operator">:</span> <span class="token string">&#39;printBox&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token string">&#39;打印标题&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">targetStyles</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 打印内容使用所有HTML样式，没有设置这个属性/值，设置分页打印没有效果</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">printJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">printable</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>someJSONdata<span class="token punctuation">,</span> <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;phone&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">printPDF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$print</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">printable</span><span class="token operator">:</span> <span class="token string">&#39;docs/xx_large_printjs.pdf&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;pdf&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">printImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$print</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      	<span class="token literal-property property">printable</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>printUrl<span class="token punctuation">,</span> <span class="token comment">// 也可设置清晰度比html绑定更高精度的图片</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;image&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$print</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      	<span class="token literal-property property">printable</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>printUrl<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>printUrl2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 打印多张图片</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;image&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-具体参数" tabindex="-1"><a class="header-anchor" href="#_5-具体参数" aria-hidden="true">#</a> 5. 具体参数</h2><table><thead><tr><th>参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>printable</td><td>null</td><td>文档来源：pdf或图像的url，html元素的id或json数据的对象</td></tr><tr><td>type</td><td>PDF</td><td>可打印类型。可用的打印选项包括：pdf，html，image，json和raw-html。</td></tr><tr><td>header</td><td>null</td><td>用于HTML，Image或JSON打印的可选标头。它将放在页面顶部。此属性将接受文本或原始HTML</td></tr><tr><td>headerStyle</td><td>&#39;font-weight：300;&#39;</td><td>要应用于标题文本的可选标题样式</td></tr><tr><td>maxWidth</td><td>800</td><td>最大文档宽度（像素）。根据需要更改此项。在打印HTML，图像或JSON时使用。</td></tr><tr><td>css</td><td>null</td><td>这允许我们传递一个或多个应该应用于正在打印的html的css文件URL。值可以是包含单个URL的字符串，也可以是包含多个URL的数组。</td></tr><tr><td>style</td><td>null</td><td>这允许我们传递一个字符串，该字符串应该应用于正在打印的html。</td></tr><tr><td>scanStyles</td><td>true</td><td>设置为false时，库不会处理应用于正在打印的html的样式。使用css参数时很有用。</td></tr><tr><td>targetStyle</td><td>null</td><td>默认情况下，在打印HTML元素时，库仅处理某些样式。此选项允许您传递要处理的样式数组。例如：[&#39;padding-top&#39;，&#39;border-bottom&#39;]</td></tr><tr><td>targetStyles</td><td>null</td><td>与targetStyle相同，这将处理任何一系列样式。例如：[&#39;border&#39;，&#39;padding&#39;]，将包括&#39;border-bottom&#39;，&#39;border-top&#39;，&#39;border-left&#39;，&#39;border-right&#39;，&#39;padding-top&#39;等。你也可以传递[&#39;*&#39;]来处理所有样式</td></tr><tr><td>ignoreElements</td><td>[]</td><td>接受打印父html元素时应忽略的html的id数组。</td></tr><tr><td>properties</td><td>null</td><td>在打印JSON时使用。这些是对象属性名称。</td></tr><tr><td>gridHeaderStyle</td><td>&#39;font-weight：bold;&#39;</td><td>打印JSON数据时网格标题的可选样式。</td></tr><tr><td>gridStyle</td><td>&#39;border: 1px solid lightgray; margin-bottom: -1px;&#39;</td><td>打印JSON数据时网格行的可选样式</td></tr><tr><td>repeatTableHeader</td><td>true</td><td>在打印JSON数据时使用。设置为时false，数据表标题仅显示在第一页中。</td></tr><tr><td>showModal</td><td>null</td><td>启用此选项可在检索或处理大型PDF文件时显示用户反馈</td></tr><tr><td>modalMessage</td><td>&#39;Retrieving Document...&#39;</td><td>当向用户显示的消息showModal被设定为true。</td></tr><tr><td>onLoadingStart</td><td>null</td><td>加载PDF时要执行的功能</td></tr><tr><td>onLoadingEnd</td><td>null</td><td>加载PDF后要执行的功能</td></tr><tr><td>documentTitle</td><td>&#39;Document&#39;</td><td>打印html，image或json时，它将显示为文档标题。如果用户尝试将打印作业保存为pdf文件，它也将是文档的名称。</td></tr><tr><td>fallbackPrintable</td><td>null</td><td>打印pdf时，如果浏览器不兼容（检查浏览器兼容性表），库将在新选项卡中打开pdf。这允许您传递要打开的不同pdf文档，而不是传递给printable的原始文档。如果您在备用pdf文件中注入javascript，这可能很有用。</td></tr><tr><td>onPdfOpen</td><td>null</td><td>打印pdf时，如果浏览器不兼容（检查浏览器兼容性表），库将在新选项卡中打开pdf。可以在此处传递回调函数，这将在发生这种情况时执行。在您想要处理打印流程，更新用户界面等的某些情况下，它可能很有用。</td></tr><tr><td>onPrintDialogClose</td><td>null</td><td>关闭浏览器打印对话框后执行回调功能</td></tr><tr><td>onError</td><td>error =&gt; throw error</td><td>发生错误时要执行的回调函数。</td></tr><tr><td>base64</td><td>false</td><td>在打印作为base64数据传递的PDF文档时使用</td></tr><tr><td>honorMarginPadding(不建议使用)</td><td>true</td><td>这用于保留或删除正在打印的元素的填充和边距。有时这些样式设置在屏幕上很棒，但在打印时看起来很糟糕。您可以通过将其设置为false来删除它。</td></tr><tr><td>honorColor(不建议使用)</td><td>false</td><td>要以彩色打印文本，请将此属性设置为true。默认情况下，所有文本都将以黑色打印。</td></tr><tr><td>font(不建议使用)</td><td>&#39;TimesNewRoman&#39;</td><td>打印HTML或JSON时使用的字体</td></tr><tr><td>font_size(不建议使用)</td><td>&#39;12pt&#39;</td><td>打印HTML或JSON时使用的字体大小</td></tr><tr><td>imageStyle (不建议使用)</td><td>&#39;width:100%;&#39;</td><td>打印图像时使用。接受包含要应用于每个图像的自定义样式的字符串。</td></tr><tr><td>frameId</td><td>null</td><td>print.js会将要打印的内容复制到一个新的Frame中,此参数是frame的id值</td></tr></tbody></table><h2 id="_6-参考文章" tabindex="-1"><a class="header-anchor" href="#_6-参考文章" aria-hidden="true">#</a> 6. 参考文章</h2>`,10),v={href:"https://juejin.cn/post/6888519415717953549",target:"_blank",rel:"noopener noreferrer"};function m(b,g){const a=l("ExternalLinkIcon");return e(),o("div",null,[i,d,n("p",null,[n("a",u,[s("https://printjs.crabbly.com/"),t(a)])]),k,n("p",null,[n("a",v,[s("Vue使用print-js实现打印功能"),t(a)])])])}const y=p(c,[["render",m],["__file","fe-lib-print.html.vue"]]);export{y as default};
