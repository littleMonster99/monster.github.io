import{_ as i,W as l,X as r,Y as e,Z as n,$ as s,a0 as t,D as d}from"./framework-f64bc974.js";const o={},c=e("h1",{id:"使用acme-sh生成免费的ssl证书",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用acme-sh生成免费的ssl证书","aria-hidden":"true"},"#"),n(" 使用acme.sh生成免费的SSL证书")],-1),h={href:"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"此文仅记录我的实操记录，与遇到的相关问题",-1),u={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,"acme",-1),_=e("p",null,"主要步骤:",-1),g={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,"生成证书",-1),b=e("li",null,"copy 证书到 nginx/apache 或者其他服务",-1),x=e("li",null,"更新证书",-1),f={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},k=e("li",null,"出错怎么办, 如何调试",-1),w=e("p",null,"下面详细介绍.",-1),y={id:"_1-安装-acme-sh",tabindex:"-1"},L=e("a",{class:"header-anchor",href:"#_1-安装-acme-sh","aria-hidden":"true"},"#",-1),N={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,"安装很简单, 一个命令:",-1),A=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`curl  https://get.acme.sh | sh -s email=my@example.com
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),q=e("p",null,"普通用户和 root 用户都可以安装使用. 安装过程进行了以下几步:",-1),E={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},D=e("strong",null,"home",-1),P=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`~/.acme.sh/
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),R=e("p",null,[n("并创建 一个 bash 的 alias, 方便你的使用: "),e("code",null,"alias acme.sh=~/.acme.sh/acme.sh")],-1),H=e("ol",null,[e("li",null,"自动为你创建 cronjob, 每天 0:00 点自动检测所有的证书, 如果快过期了, 需要更新, 则会自动更新证书.")],-1),I={href:"https://github.com/Neilpang/acme.sh/wiki/How-to-install",target:"_blank",rel:"noopener noreferrer"},S=e("p",null,[e("strong",null,"安装过程不会污染已有的系统任何功能和文件"),n(", 所有的修改都限制在安装目录中: "),e("code",null,"~/.acme.sh/")],-1),T=e("h2",{id:"_2-生成证书",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-生成证书","aria-hidden":"true"},"#"),n(" 2. 生成证书")],-1),z={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},B=e("strong",null,"acme",-1),F=t(`<h3 id="_2-1-http-方式" tabindex="-1"><a class="header-anchor" href="#_2-1-http-方式" aria-hidden="true">#</a> 2.1. http 方式</h3><h4 id="_2-1-1-基础使用-指定网站根目录" tabindex="-1"><a class="header-anchor" href="#_2-1-1-基础使用-指定网站根目录" aria-hidden="true">#</a> 2.1.1 基础使用（指定网站根目录）</h4><p>需要在你的网站根目录下放置一个文件, 来验证你的域名所有权,完成验证. 然后就可以生成证书了.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh  --issue  -d mydomain.com -d www.mydomain.com  --webroot  /home/wwwroot/mydomain.com/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),M={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},O=e("h4",{id:"_2-1-2-apache服务器-nginx服务器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-1-2-apache服务器-nginx服务器","aria-hidden":"true"},"#"),n(" 2.1.2 "),e("strong",null,"apache"),n("服务器/nginx服务器")],-1),V=e("strong",null,"apache",-1),j={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},K=e("strong",null,"apache",-1),U=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`acme.sh --issue  -d mydomain.com   --apache
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),W=e("strong",null,"nginx",-1),X={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},G=e("strong",null,"nginx",-1),J=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh --issue  -d mydomain.com   --nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意, 无论是 apache 还是 nginx 模式, acme.sh在完成验证之后, 会恢复到之前的状态, 都不会私自更改你本身的配置. 好处是你不用担心配置被搞坏, 也有一个缺点, 你需要自己配置 ssl 的配置, 否则只能成功生成证书, 你的网站还是无法访问https. 但是为了安全, 你还是自己手动改配置吧.</strong></p><h5 id="_2-1-2-1-nginx服务器示例" tabindex="-1"><a class="header-anchor" href="#_2-1-2-1-nginx服务器示例" aria-hidden="true">#</a> 2.1.2.1 nginx服务器示例</h5><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220724224849353.png" alt="image-20220724224849353" tabindex="0" loading="lazy"><figcaption>image-20220724224849353</figcaption></figure><h4 id="_2-1-3-假装webserver-完成验证" tabindex="-1"><a class="header-anchor" href="#_2-1-3-假装webserver-完成验证" aria-hidden="true">#</a> 2.1.3 假装webserver，完成验证</h4>`,5),Y=e("strong",null,"80",-1),Z={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},$=e("strong",null,"80",-1),Q=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`acme.sh  --issue -d mydomain.com   --standalone
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),ee={href:"https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert",target:"_blank",rel:"noopener noreferrer"},ne=e("h3",{id:"_2-手动-dns-方式",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-手动-dns-方式","aria-hidden":"true"},"#"),n(" 2. 手动 dns 方式")],-1),ae=e("p",null,"手动在域名上添加一条 txt 解析记录, 验证域名所有权.",-1),se={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},te=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh  --issue  --dns   -d mydomain.com \\
 --yes-I-know-dns-manual-mode-enough-go-ahead-please
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ie={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},le=t(`<p>等待解析完成之后, 重新生成证书:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh  --renew   -d mydomain.com \\
  --yes-I-know-dns-manual-mode-enough-go-ahead-please
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意第二次这里用的是 <code>--renew</code></p><p>dns 方式的真正强大之处在于可以使用域名解析商提供的 api 自动添加 txt 记录完成验证.</p>`,4),re={href:"http://acme.sh",target:"_blank",rel:"noopener noreferrer"},de=t(`<p>以 dnspod 为例, 你需要先登录到 dnspod 账号, 生成你的 api id 和 api key, 都是免费的. 然后:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export DP_Id=&quot;1234&quot;

export DP_Key=&quot;sADDsdasdgdsf&quot;

acme.sh   --issue   --dns dns_dp   -d aa.com  -d www.aa.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>证书就会自动生成了. 这里给出的 api id 和 api key 会被自动记录下来, 将来你在使用 dnspod api 的时候, 就不需要再次指定了. 直接生成就好了:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh  --issue   -d  mydomain2.com   --dns  dns_dp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),oe={href:"https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md",target:"_blank",rel:"noopener noreferrer"},ce=t(`<h2 id="_3-copy-安装-证书" tabindex="-1"><a class="header-anchor" href="#_3-copy-安装-证书" aria-hidden="true">#</a> 3. copy/安装 证书</h2><p>前面证书生成以后, 接下来需要把证书 copy 到真正需要用它的地方.</p><p>注意, 默认生成的证书都放在安装目录下: <code>~/.acme.sh/</code>, 请不要直接使用此目录下的文件, 例如: 不要直接让 nginx/apache 的配置文件使用这下面的文件. 这里面的文件都是内部使用, 而且目录结构可能会变化.</p><p>正确的使用方法是使用 <code>--install-cert</code> 命令,并指定目标位置, 然后证书文件会被copy到相应的位置, 例如:</p><h3 id="_3-1-apache-example" tabindex="-1"><a class="header-anchor" href="#_3-1-apache-example" aria-hidden="true">#</a> 3.1 Apache example:</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh --install-cert -d example.com \\
--cert-file      /path/to/certfile/in/apache/cert.pem  \\
--key-file       /path/to/keyfile/in/apache/key.pem  \\
--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\
--reloadcmd     &quot;service apache2 force-reload&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-nginx-example" tabindex="-1"><a class="header-anchor" href="#_3-2-nginx-example" aria-hidden="true">#</a> 3.2 Nginx example:</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh --install-cert -d example.com \\
--key-file       /path/to/keyfile/in/nginx/key.pem  \\
--fullchain-file /path/to/fullchain/nginx/cert.pem \\
--reloadcmd     &quot;service nginx force-reload&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(一个小提醒, 这里用的是 <code>service nginx force-reload</code>, 不是 <code>service nginx reload</code>, 据测试, <code>reload</code> 并不会重新加载证书, 所以用的 <code>force-reload</code>)</p>`,9),he=e("code",null,"ssl_certificate",-1),me=e("code",null,"/etc/nginx/ssl/fullchain.cer",-1),ue=e("code",null,"/etc/nginx/ssl/<domain>.cer",-1),pe={href:"https://www.ssllabs.com/ssltest/",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"Chain issues Incomplete",-1),ge=e("p",null,[e("code",null,"--install-cert"),n("命令可以携带很多参数, 来指定目标文件. 并且可以指定 reloadcmd, 当证书更新以后, reloadcmd会被自动调用,让服务器生效.")],-1),ve={href:"https://github.com/Neilpang/acme.sh#3-install-the-issued-cert-to-apachenginx-etc",target:"_blank",rel:"noopener noreferrer"},be=t(`<p>值得注意的是, 这里指定的所有参数都会被自动记录下来, 并在将来证书自动更新以后, 被再次自动调用.</p><h1 id="_4-查看已安装证书信息" tabindex="-1"><a class="header-anchor" href="#_4-查看已安装证书信息" aria-hidden="true">#</a> 4. 查看已安装证书信息</h1><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh --info -d example.com
# 会输出如下内容：
DOMAIN_CONF=/root/.acme.sh/example.com/example.com.conf
Le_Domain=example.com
Le_Alt=no
Le_Webroot=dns_ali
Le_PreHook=
Le_PostHook=
Le_RenewHook=
Le_API=https://acme-v02.api.letsencrypt.org/directory
Le_Keylength=
Le_OrderFinalize=https://acme-v02.api.letsencrypt.org/acme/finalize/23xxxx150/781xxxx4310
Le_LinkOrder=https://acme-v02.api.letsencrypt.org/acme/order/233xxx150/781xxxx4310
Le_LinkCert=https://acme-v02.api.letsencrypt.org/acme/cert/04cbd28xxxxxx349ecaea8d07
Le_CertCreateTime=1649358725
Le_CertCreateTimeStr=Thu Apr  7 19:12:05 UTC 2022
Le_NextRenewTimeStr=Mon Jun  6 19:12:05 UTC 2022
Le_NextRenewTime=1654456325
Le_RealCertPath=
Le_RealCACertPath=
Le_RealKeyPath=/etc/acme/example.com/privkey.pem
Le_ReloadCmd=service nginx force-reload
Le_RealFullChainPath=/etc/acme/example.com/chain.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_5-更新证书" tabindex="-1"><a class="header-anchor" href="#_5-更新证书" aria-hidden="true">#</a> 5. 更新证书</h1><p>目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.</p><p>请确保 cronjob 正确安装, 看起来是类似这样的:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>crontab  -l

56 * * * * &quot;/root/.acme.sh&quot;/acme.sh --cron --home &quot;/root/.acme.sh&quot; &gt; /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_6-出错怎么办" tabindex="-1"><a class="header-anchor" href="#_6-出错怎么办" aria-hidden="true">#</a> 6. 出错怎么办：</h1><p>如果出错, 请添加 debug log：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh  --issue  .....  --debug 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>acme.sh  --issue  .....  --debug  2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12),xe={href:"https://github.com/Neilpang/acme.sh/wiki/How-to-debug-acme.sh",target:"_blank",rel:"noopener noreferrer"},fe=e("p",null,"最后, 本文并非完全的使用说明, 还有很多高级的功能, 更高级的用法请参看其他 wiki 页面.",-1),ke={href:"https://github.com/Neilpang/acme.sh/wiki",target:"_blank",rel:"noopener noreferrer"},we=e("h2",{id:"参考文章",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),n(" 参考文章")],-1),ye={href:"https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"};function Le(Ne,Ce){const a=d("ExternalLinkIcon");return l(),r("div",null,[c,e("blockquote",null,[e("p",null,[e("a",h,[n("官网中文介绍"),s(a)])]),m]),e("p",null,[e("strong",null,[e("a",u,[n("acme.sh"),s(a)])]),n(" 实现了 "),p,n(" 协议, 可以从 letsencrypt 生成免费的证书.")]),_,e("ol",null,[e("li",null,[n("安装 "),e("strong",null,[e("a",g,[n("acme.sh"),s(a)])])]),v,b,x,e("li",null,[n("更新 "),e("strong",null,[e("a",f,[n("acme.sh"),s(a)])])]),k]),w,e("h2",y,[L,n(" 1. 安装 "),e("strong",null,[e("a",N,[n("acme.sh"),s(a)])])]),C,A,q,e("ol",null,[e("li",null,[n("把 "),e("a",E,[n("acme.sh"),s(a)]),n(" 安装到你的 "),D,n(" 目录下:")])]),P,R,H,e("p",null,[n("更高级的安装选项请参考: "),e("a",I,[n("https://github.com/Neilpang/acme.sh/wiki/How-to-install"),s(a)])]),S,T,e("p",null,[e("strong",null,[e("a",z,[n("acme.sh"),s(a)])]),n(" 实现了 "),B,n(" 协议支持的所有验证协议. 一般有两种方式验证: http 和 dns 验证.")]),F,e("p",null,[n("只需要指定域名, 并指定域名所在的网站根目录. "),e("strong",null,[e("a",M,[n("acme.sh"),s(a)])]),n(" 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.")]),O,e("p",null,[n("如果你用的 "),V,n("服务器, "),e("strong",null,[e("a",j,[n("acme.sh"),s(a)])]),n(" 还可以智能的从 "),K,n("的配置中自动完成验证, 你不需要指定网站根目录:")]),U,e("p",null,[n("如果你用的 "),W,n("服务器, 或者反代, "),e("strong",null,[e("a",X,[n("acme.sh"),s(a)])]),n(" 还可以智能的从 "),G,n("的配置中自动完成验证, 你不需要指定网站根目录:")]),J,e("p",null,[n("如果你还没有运行任何 web 服务, "),Y,n(" 端口是空闲的, 那么 "),e("strong",null,[e("a",Z,[n("acme.sh"),s(a)])]),n(" 还能假装自己是一个webserver, 临时听在"),$,n(" 端口, 完成验证:")]),Q,e("p",null,[n("更高级的用法请参考: "),e("a",ee,[n("https://github.com/Neilpang/acme.sh/wiki/How-to-issue-a-cert"),s(a)])]),ne,ae,e("p",null,[n("这种方式的好处是, 你不需要任何服务器, 不需要任何公网 ip, 只需要 dns 的解析记录即可完成验证. 坏处是，如果不同时配置 Automatic DNS API，使用这种方式 "),e("a",se,[n("acme.sh"),s(a)]),n(" 将无法自动更新证书，每次都需要手动再次重新解析验证域名所有权。")]),te,e("p",null,[n("然后, "),e("strong",null,[e("a",ie,[n("acme.sh"),s(a)])]),n(" 会生成相应的解析记录显示出来, 你只需要在你的域名管理面板中添加这条 txt 记录即可.")]),le,e("p",null,[e("strong",null,[e("a",re,[n("acme.sh"),s(a)])]),n(" 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.")]),de,e("p",null,[n("更详细的 api 用法: "),e("a",oe,[n("https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md"),s(a)])]),ce,e("p",null,[n("Nginx 的配置 "),he,n(" 使用 "),me,n(" ，而非 "),ue,n(" ，否则 "),e("a",pe,[n("SSL Labs"),s(a)]),n(" 的测试会报 "),_e,n(" 错误。")]),ge,e("p",null,[n("详细参数请参考: "),e("a",ve,[n("https://github.com/Neilpang/acme.sh#3-install-the-issued-cert-to-apachenginx-etc"),s(a)])]),be,e("p",null,[n("请参考： "),e("a",xe,[n("https://github.com/Neilpang/acme.sh/wiki/How-to-debug-acme.sh"),s(a)])]),fe,e("p",null,[e("a",ke,[n("https://github.com/Neilpang/acme.sh/wiki"),s(a)])]),we,e("p",null,[e("a",ye,[n("官网中文介绍"),s(a)])])])}const qe=i(o,[["render",Le],["__file","https-x-acme-gen.html.vue"]]);export{qe as default};
