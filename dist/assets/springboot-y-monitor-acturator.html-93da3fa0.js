import{_ as p,W as o,X as l,Y as n,Z as s,$ as t,a0 as e,D as i}from"./framework-f64bc974.js";const c={},u=e('<h1 id="springboot监控-集成acturator监控工具" tabindex="-1"><a class="header-anchor" href="#springboot监控-集成acturator监控工具" aria-hidden="true">#</a> SpringBoot监控 - 集成acturator监控工具</h1><blockquote><p>当SpringBoot的应用部署到生产环境中后，如何监控和管理呢？比如审计日志，监控状态，指标收集等。为了解决这个问题，SpringBoot提供了Actuator。本文主要介绍Spring Boot Actuator及实现案例。</p></blockquote><h2 id="_1-知识准备" tabindex="-1"><a class="header-anchor" href="#_1-知识准备" aria-hidden="true">#</a> 1. 知识准备</h2><blockquote><p>需要了解什么是Spring Boot Actuator， 以及其提供的功能(Endpoints)。</p></blockquote><h3 id="_1-1-什么是actuator" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是actuator" aria-hidden="true">#</a> 1.1 什么是Actuator?</h3><blockquote><p>致动器（actuator）是2018年公布的计算机科学技术名词。</p></blockquote>',6),r={href:"https://baike.baidu.com/item/%E8%87%B4%E5%8A%A8%E5%99%A8/56538368?fr=aladdin",target:"_blank",rel:"noopener noreferrer"},d=e('<p>官网给的解释是：An actuator is a manufacturing term that refers to a mechanical device for moving or controlling something. Actuators can generate a large amount of motion from a small change.</p><p>从上述的解释不难知道Spring 命名这个组件为Actuator，就是为了提供监测程序的能力。</p><h3 id="_1-2-什么是spring-boot-actuator" tabindex="-1"><a class="header-anchor" href="#_1-2-什么是spring-boot-actuator" aria-hidden="true">#</a> 1.2 什么是Spring Boot Actuator？</h3><blockquote><p>什么是Spring Boot Actuator? 用在什么样的场景呢？</p></blockquote><p>Spring Boot Actuator提供了对SpringBoot应用程序（可以是生产环境）监视和管理的能力， 可以选择通过使用<strong>HTTP Endpoint</strong>或使用<strong>JMX</strong>来管理和监控SpringBoot应用程序。</p><h3 id="_1-3-什么是actuator-endpoints" tabindex="-1"><a class="header-anchor" href="#_1-3-什么是actuator-endpoints" aria-hidden="true">#</a> 1.3 什么是Actuator Endpoints？</h3><p>Spring Boot Actuator 允许你通过Endpoints对Spring Boot进行监控和交互。</p><p>Spring Boot 内置的Endpoint包括（两种Endpoint： WEB和JMX， web方式考虑到安全性默认只开启了/health）：</p>',8),k=n("thead",null,[n("tr",null,[n("th",null,"ID"),n("th",null,"JMX"),n("th",null,"Web"),n("th",null,"Endpoint功能描述")])],-1),m=n("tr",null,[n("td",null,"auditevents"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"暴露当前应用的audit events （依赖AuditEventRepository）")],-1),v=n("tr",null,[n("td",null,"beans"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"Spring中所有Beans")],-1),g=n("tr",null,[n("td",null,"caches"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"暴露可用的缓存")],-1),b=n("tr",null,[n("td",null,"conditions"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示configuration 和auto-configuration类中解析的condition，并展示是否匹配的信息.")],-1),h=n("tr",null,[n("td",null,"configprops"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示所有的@ConfigurationProperties")],-1),f=n("tr",null,[n("td",null,"env"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示环境变量，来源于ConfigurableEnvironment")],-1),y=n("tr",null,[n("td",null,"flyway"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"flyway数据迁移信息（依赖Flyway）")],-1),_=n("tr",null,[n("td",null,"health"),n("td",null,"Yes"),n("td",null,[n("strong",null,"Yes")]),n("td",null,"展示应用的健康信息")],-1),w=n("tr",null,[n("td",null,"heapdump"),n("td",null,"N/A"),n("td",null,"No"),n("td",null,[s("（"),n("strong",null,"web应用时"),s("）hprof 堆的dump文件（依赖HotSpot JVM）")])],-1),x=n("tr",null,[n("td",null,"httptrace"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示HTTP trace信息, 默认展示前100个（依赖HttpTraceRepository）")],-1),q=n("tr",null,[n("td",null,"info"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"应用信息")],-1),N=n("tr",null,[n("td",null,"integrationgraph"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示spring集成信息（依赖spring-integration-core）")],-1),S=n("tr",null,[n("td",null,"jolokia"),n("td",null,"N/A"),n("td",null,"No"),n("td",null,[s("（"),n("strong",null,"web应用时"),s("）通过HTTP暴露JMX beans（依赖jolokia-core）")])],-1),E=n("td",null,"logfile",-1),z=n("td",null,"N/A",-1),A=n("td",null,"No",-1),B=n("strong",null,"web应用时",-1),Y={href:"http://xn--logging-rp4kl03fph6as08ct23b.file.name",target:"_blank",rel:"noopener noreferrer"},j=n("tr",null,[n("td",null,"loggers"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示或者配置loggers，比如修改日志的等级")],-1),C=n("tr",null,[n("td",null,"liquibase"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"Liquibase 数据迁移信息（依赖Liquibase）")],-1),I=n("tr",null,[n("td",null,"metrics"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"指标信息")],-1),R=n("tr",null,[n("td",null,"mappings"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"@RequestMapping映射路径")],-1),H=n("tr",null,[n("td",null,"prometheus"),n("td",null,"N/A"),n("td",null,"No"),n("td",null,[s("（"),n("strong",null,"web应用时"),s("）向prometheus暴露监控信息（依赖micrometer-registry-prometheus）")])],-1),M=n("tr",null,[n("td",null,"quartz"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示 quartz任务信息")],-1),T=n("tr",null,[n("td",null,"scheduledtasks"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示Spring Scheduled 任务信息")],-1),D=n("tr",null,[n("td",null,"sessions"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"session信息")],-1),O=n("tr",null,[n("td",null,"shutdown"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"关闭应用")],-1),J=n("tr",null,[n("td",null,"startup"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"展示ApplicationStartup的startup步骤的数据（依赖通在SpringApplication配置BufferingApplicationStartup）")],-1),P=n("tr",null,[n("td",null,"threaddump"),n("td",null,"Yes"),n("td",null,"No"),n("td",null,"线程dump")],-1),W=e(`<p>当然你也可以自己定义暴露哪些endpoint,</p><p>JMX时：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">jmx</span><span class="token punctuation">:</span>
      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;health,info&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>web时(*代表所有）：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">web</span><span class="token punctuation">:</span>
      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>
        <span class="token key atrule">exclude</span><span class="token punctuation">:</span> <span class="token string">&quot;env,beans&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-简单示例" tabindex="-1"><a class="header-anchor" href="#_2-简单示例" aria-hidden="true">#</a> 2. 简单示例</h2><blockquote><p>我们通过一个简单的例子，来展示自定义配置指定的endpoint，然后围绕这个简单的例子，谈谈后续拓展。</p></blockquote><h3 id="_2-1-pom引入actuator包" tabindex="-1"><a class="header-anchor" href="#_2-1-pom引入actuator包" aria-hidden="true">#</a> 2.1 POM引入actuator包</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-yml配置" tabindex="-1"><a class="header-anchor" href="#_2-2-yml配置" aria-hidden="true">#</a> 2.2 yml配置</h3><p>自定义暴露哪些endpoint, 比如如下yml配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8080</span>

management<span class="token operator">:</span>
  endpoints<span class="token operator">:</span>
    enabled<span class="token operator">-</span>by<span class="token operator">-</span><span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span>
    web<span class="token operator">:</span>
      base<span class="token operator">-</span>path<span class="token operator">:</span> <span class="token operator">/</span>manage
      exposure<span class="token operator">:</span>
        include<span class="token operator">:</span> &#39;info<span class="token punctuation">,</span>health<span class="token punctuation">,</span>env<span class="token punctuation">,</span>beans&#39;
  endpoint<span class="token operator">:</span>
    info<span class="token operator">:</span>
      enabled<span class="token operator">:</span> <span class="token boolean">true</span>
    health<span class="token operator">:</span>
      enabled<span class="token operator">:</span> <span class="token boolean">true</span>
    env<span class="token operator">:</span>
      enabled<span class="token operator">:</span> <span class="token boolean">true</span>
    beans<span class="token operator">:</span>
      enabled<span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述配置只暴露info,health,env,beans四个endpoints, web通过可以<code>/manage</code>访问，</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220720202034772.png" alt="image-20220720202034772" tabindex="0" loading="lazy"><figcaption>image-20220720202034772</figcaption></figure><h2 id="_3-endpoints的进一步拓展配置" tabindex="-1"><a class="header-anchor" href="#_3-endpoints的进一步拓展配置" aria-hidden="true">#</a> 3. endpoints的进一步拓展配置</h2><h3 id="_3-1-与springsecurity集成保障安全" tabindex="-1"><a class="header-anchor" href="#_3-1-与springsecurity集成保障安全" aria-hidden="true">#</a> 3.1 与SpringSecurity集成保障安全</h3><p>正是由于endpoint可能潜在暴露应用的安全性，web方式的endpoint才在默认情况下只暴露了一个/health。</p><p>如果你需要暴露更多，并保证endpoint接口安全，可以与Spring Security集成，比如</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySecurityConfiguration</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        http<span class="token punctuation">.</span><span class="token function">requestMatcher</span><span class="token punctuation">(</span><span class="token class-name">EndpointRequest</span><span class="token punctuation">.</span><span class="token function">toAnyEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">(</span>requests<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> requests<span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasRole</span><span class="token punctuation">(</span><span class="token string">&quot;ENDPOINT_ADMIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        http<span class="token punctuation">.</span><span class="token function">httpBasic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-endpoint跨域访问" tabindex="-1"><a class="header-anchor" href="#_3-2-endpoint跨域访问" aria-hidden="true">#</a> 3.2 Endpoint跨域访问</h3><p>跨域访问，可以通过如下配置：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">web</span><span class="token punctuation">:</span>
      <span class="token key atrule">cors</span><span class="token punctuation">:</span>
        <span class="token key atrule">allowed-origins</span><span class="token punctuation">:</span> <span class="token string">&quot;https://example.com&quot;</span>
        <span class="token key atrule">allowed-methods</span><span class="token punctuation">:</span> <span class="token string">&quot;GET,POST&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-实现自己的endpoint" tabindex="-1"><a class="header-anchor" href="#_3-3-实现自己的endpoint" aria-hidden="true">#</a> 3.3 实现自己的Endpoint</h3><p>我们可以通过@JmxEndpoint or @WebEndpoint注解来定义自己的endpoint, 然后通过@ReadOperation, @WriteOperation或者@DeleteOperation来暴露操作，</p><p>比如添加系统时间date的endpoint</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>actuator</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ReadOperation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>endpoint<span class="token punctuation">.</span>web<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebEndpoint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@RestController</span><span class="token punctuation">(</span><span class="token string">&quot;custom&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@WebEndpoint</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">&quot;date&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomEndpointController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ReadOperation</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">currentDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>enable 自定义的date</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">web</span><span class="token punctuation">:</span>
      <span class="token key atrule">base-path</span><span class="token punctuation">:</span> /manage
      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&#39;info,health,env,beans,date&#39;</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>
    <span class="token key atrule">info</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">health</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">env</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">beans</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">date</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以看到所有开放的接口中增加了date</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220720203321468.png" alt="image-20220720203321468" tabindex="0" loading="lazy"><figcaption>image-20220720203321468</figcaption></figure><p>访问效果</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220720203342038.png" alt="image-20220720203342038" tabindex="0" loading="lazy"><figcaption>image-20220720203342038</figcaption></figure><h3 id="_3-4-组件的health状况" tabindex="-1"><a class="header-anchor" href="#_3-4-组件的health状况" aria-hidden="true">#</a> 3.4 组件的health状况</h3><p>SpringBoot默认集成了如下常见中间件的health监控</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220720203409194.png" alt="image-20220720203409194" tabindex="0" loading="lazy"><figcaption>image-20220720203409194</figcaption></figure><p>当然你也可以自定义HealthIndicator</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">tech<span class="token punctuation">.</span>pdai<span class="token punctuation">.</span>springboot<span class="token punctuation">.</span>actuator</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span></span><span class="token class-name">Health</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span></span><span class="token class-name">HealthIndicator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> pdai
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomHealthIndicator</span> <span class="token keyword">implements</span> <span class="token class-name">HealthIndicator</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Health</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> errorCode <span class="token operator">=</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>errorCode<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;Error Code&quot;</span><span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// perform some specific health check</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更详细的信息可以参考</p><h3 id="_3-5-metrics接入监控系统" tabindex="-1"><a class="header-anchor" href="#_3-5-metrics接入监控系统" aria-hidden="true">#</a> 3.5 Metrics接入监控系统</h3><p>这个也是比较常用的，具体参考</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220720203536413.png" alt="image-20220720203536413" tabindex="0" loading="lazy"><figcaption>image-20220720203536413</figcaption></figure><h3 id="_3-6-info信息如何获取" tabindex="-1"><a class="header-anchor" href="#_3-6-info信息如何获取" aria-hidden="true">#</a> 3.6 Info信息如何获取</h3><p>有细心的小伙伴会发现/info是空的，最简单的配置方式是在spring-boot-maven-plugin中加入build-info， 编译成jar后运行，即可获取info：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>build-info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,45),L={href:"https://pdai.tech/md/spring/springboot/springboot-x-monitor-actuartor.html",target:"_blank",rel:"noopener noreferrer"},X=n("strong",null,"SpringBoot监控 - 集成acturator监控工具",-1);function V(F,G){const a=i("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[n("a",r,[s("百度百科 "),t(a)]),s("的解释如下： 致动器能将某种形式的能量转换为机械能的驱动装置。如热致动器、磁致动器等，在磁盘中是指将电能转换为机械能并带动磁头运动的装置。")]),d,n("table",null,[k,n("tbody",null,[m,v,g,b,h,f,y,_,w,x,q,N,S,n("tr",null,[E,z,A,n("td",null,[s("（"),B,s("）"),n("a",Y,[s("如果配置了logging.file.name"),t(a)]),s(" 或者 logging.file.path，展示logfile内容")])]),j,C,I,R,H,M,T,D,O,J,P])]),W,n("p",null,[n("a",L,[X,t(a)])])])}const $=p(c,[["render",V],["__file","springboot-y-monitor-acturator.html.vue"]]);export{$ as default};
