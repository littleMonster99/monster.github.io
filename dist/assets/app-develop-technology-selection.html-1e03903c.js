import{_ as a,W as i,X as d,Y as e,Z as c,$ as l,a0 as r,D as n}from"./framework-f64bc974.js";const t={},h=r('<h1 id="app-开发技术选型" tabindex="-1"><a class="header-anchor" href="#app-开发技术选型" aria-hidden="true">#</a> APP 开发技术选型</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>目前 按照 APP 开发分类，分为以下三大类</p><ul><li>原生 <code>APP</code> [ <code>Android</code> <code>Swift</code> <code>Flutter</code> <code>React Native</code> ]</li><li><code>WEB APP</code></li><li><code>Hybrid App</code> [混合<code>APP</code> ]</li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20230131165137202.png" alt="image-20230131165137202" tabindex="0" loading="lazy"><figcaption>image-20230131165137202</figcaption></figure><h2 id="_2-三种开发模式区别" tabindex="-1"><a class="header-anchor" href="#_2-三种开发模式区别" aria-hidden="true">#</a> 2. 三种开发模式区别</h2><h3 id="_2-1-原生app" tabindex="-1"><a class="header-anchor" href="#_2-1-原生app" aria-hidden="true">#</a> 2.1 原生APP</h3><p>在这里就不讨论原生APP的优点了，想必大家都知道。主要围绕缺点来说</p><ol><li>需要 开发 两套 代码 <code>Android</code> 和 <code>IOS</code></li><li>旧版本出现<code>bug</code> 无法更新修改，必须用户 下载 更新</li><li>发版审核时间长，无法随时更新</li></ol><h3 id="_2-2-web-app" tabindex="-1"><a class="header-anchor" href="#_2-2-web-app" aria-hidden="true">#</a> 2.2 Web APP</h3><p>优点</p><ol><li>入门简单，成本低 (前端三件套)</li><li>可以同步更新</li><li>可以跨平台</li></ol><p>缺点</p><ol><li>不能直接访问设备硬件和离线存储，功能受限( 相机,蓝牙.......)</li><li>音视频体验不好</li></ol><h3 id="_2-3-混合app" tabindex="-1"><a class="header-anchor" href="#_2-3-混合app" aria-hidden="true">#</a> 2.3 混合APP</h3><p>优点</p><ol><li>开发效率高</li><li>更新和部署方便，不需要审核，只需要在服务器端部署</li><li>代码维护方便，版本更新快，成本低</li></ol><p>缺点</p><ol><li>需要了解 <code>原生开发</code> 才能更好的开发 <code>H5</code> 。</li><li>需要熟知 <code>原生开发</code> 与 <code>H5</code> 的各种通信和兼容性问题。</li></ol><h2 id="_3-混合开发任务分配原则" tabindex="-1"><a class="header-anchor" href="#_3-混合开发任务分配原则" aria-hidden="true">#</a> 3. <strong>混合开发任务分配原则</strong></h2><ol><li>业务关联性强的 <code>H5</code> 做</li><li><code>H5</code> 和 <code>原生</code> 都能做的，尽量使用 <code>H5</code> 来做</li><li><code>H5</code> 做不了的， <code>原生</code> 做</li><li>交互性强的 <code>原生</code> 做 [ 体验佳 ]</li></ol><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>',22),p={href:"https://cloud.tencent.com/developer/article/1886860",target:"_blank",rel:"noopener noreferrer"};function s(_,f){const o=n("ExternalLinkIcon");return i(),d("div",null,[h,e("p",null,[e("a",p,[c("APP 开发技术如何进行选型 ？"),l(o)])])])}const P=a(t,[["render",s],["__file","app-develop-technology-selection.html.vue"]]);export{P as default};
