import{_ as n,W as s,X as a,a0 as t}from"./framework-f64bc974.js";const p={},e=t(`<h1 id="系统参数配置功能-实现思路" tabindex="-1"><a class="header-anchor" href="#系统参数配置功能-实现思路" aria-hidden="true">#</a> 系统参数配置功能&amp;实现思路</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>我们在项目部署后很多配置需要根据现场情况配置。如第三方对接的api接口地址等等。如果我们每次改动都要改动代码或重启项目，那么效率也太低了。所以我们一般会设计一个参数管理功能，来实现后台配置</p><h2 id="_2-数据库设计" tabindex="-1"><a class="header-anchor" href="#_2-数据库设计" aria-hidden="true">#</a> 2. 数据库设计</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> sys_config
<span class="token punctuation">(</span>
    config_id    <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;参数主键&#39;</span>
        <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    config_name  <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;参数名称&#39;</span><span class="token punctuation">,</span>
    config_key   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;参数键名&#39;</span><span class="token punctuation">,</span>
    config_value <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;参数键值&#39;</span><span class="token punctuation">,</span>
    config_type  <span class="token keyword">char</span>         <span class="token keyword">default</span> <span class="token string">&#39;N&#39;</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;系统内置（Y是 N否）&#39;</span><span class="token punctuation">,</span>
    create_by    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>  <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;创建者&#39;</span><span class="token punctuation">,</span>
    create_time  <span class="token keyword">datetime</span>                 <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
    update_by    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>  <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;更新者&#39;</span><span class="token punctuation">,</span>
    update_time  <span class="token keyword">datetime</span>                 <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
    remark       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>             <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;备注&#39;</span>
<span class="token punctuation">)</span>
    <span class="token keyword">comment</span> <span class="token string">&#39;参数配置表&#39;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：系统内置参数是不能删除的</p><h2 id="_3-代码实现注意事项" tabindex="-1"><a class="header-anchor" href="#_3-代码实现注意事项" aria-hidden="true">#</a> 3. 代码实现注意事项</h2><h3 id="_3-1-项目启动时就需要加载进缓存" tabindex="-1"><a class="header-anchor" href="#_3-1-项目启动时就需要加载进缓存" aria-hidden="true">#</a> 3.1 项目启动时就需要加载进缓存</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SysConfigServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SysConfigService</span>
<span class="token punctuation">{</span>  <span class="token doc-comment comment">/**
     * 项目启动时，初始化参数到缓存
     */</span>
    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">loadingConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
  	<span class="token doc-comment comment">/**
     * 加载参数缓存数据
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadingConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysConfig</span><span class="token punctuation">&gt;</span></span> configsList <span class="token operator">=</span> configMapper<span class="token punctuation">.</span><span class="token function">selectConfigList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SysConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SysConfig</span> config <span class="token operator">:</span> configsList<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-查找参数时-先查缓存-再查数据库-数据库查到要插入缓存" tabindex="-1"><a class="header-anchor" href="#_3-2-查找参数时-先查缓存-再查数据库-数据库查到要插入缓存" aria-hidden="true">#</a> 3.2 查找参数时，先查缓存，再查数据库，数据库查到要插入缓存</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 根据键名查询参数配置信息
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">configKey</span> 参数key
     * <span class="token keyword">@return</span> 参数键值
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">selectConfigByKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> configKey<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">String</span> configValue <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span>redisCache<span class="token punctuation">.</span><span class="token function">getCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>configKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>configValue<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> configValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">SysConfig</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        config<span class="token punctuation">.</span><span class="token function">setConfigKey</span><span class="token punctuation">(</span>configKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SysConfig</span> retConfig <span class="token operator">=</span> configMapper<span class="token punctuation">.</span><span class="token function">selectConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>retConfig<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>configKey<span class="token punctuation">)</span><span class="token punctuation">,</span> retConfig<span class="token punctuation">.</span><span class="token function">getConfigValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> retConfig<span class="token punctuation">.</span><span class="token function">getConfigValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token constant">EMPTY</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-插入和更新成功时需要更新单项缓存" tabindex="-1"><a class="header-anchor" href="#_3-3-插入和更新成功时需要更新单项缓存" aria-hidden="true">#</a> 3.3 插入和更新成功时需要更新单项缓存</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * 新增参数配置
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">config</span> 参数配置信息
     * <span class="token keyword">@return</span> 结果
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">insertConfig</span><span class="token punctuation">(</span><span class="token class-name">SysConfig</span> config<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> row <span class="token operator">=</span> configMapper<span class="token punctuation">.</span><span class="token function">insertConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> row<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 修改参数配置
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">config</span> 参数配置信息
     * <span class="token keyword">@return</span> 结果
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">updateConfig</span><span class="token punctuation">(</span><span class="token class-name">SysConfig</span> config<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> row <span class="token operator">=</span> configMapper<span class="token punctuation">.</span><span class="token function">updateConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> row<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-删除时记得清除缓存" tabindex="-1"><a class="header-anchor" href="#_3-4-删除时记得清除缓存" aria-hidden="true">#</a> 3.4 删除时记得清除缓存</h3><p>如果是内置参数，则不能清除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 批量删除参数信息
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">configIds</span> 需要删除的参数ID
     * <span class="token keyword">@return</span> 结果
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteConfigByIds</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> configIds<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> configId <span class="token operator">:</span> configIds<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name">SysConfig</span> config <span class="token operator">=</span> <span class="token function">selectConfigById</span><span class="token punctuation">(</span>configId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">UserConstants</span><span class="token punctuation">.</span><span class="token constant">YES</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;内置参数【%1$s】不能删除 &quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            configMapper<span class="token punctuation">.</span><span class="token function">deleteConfigById</span><span class="token punctuation">(</span>configId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            redisCache<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-需要有刷新重置缓存功能" tabindex="-1"><a class="header-anchor" href="#_3-5-需要有刷新重置缓存功能" aria-hidden="true">#</a> 3.5 需要有刷新重置缓存功能</h3><p>方便用户在前端操作，快速生效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token doc-comment comment">/**
     * 重置参数缓存数据
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resetConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">clearConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">loadingConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    
    <span class="token doc-comment comment">/**
     * 清空参数缓存数据
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> redisCache<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">SYS_CONFIG_KEY</span> <span class="token operator">+</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        redisCache<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * 加载参数缓存数据
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadingConfigCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysConfig</span><span class="token punctuation">&gt;</span></span> configsList <span class="token operator">=</span> configMapper<span class="token punctuation">.</span><span class="token function">selectConfigList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SysConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">SysConfig</span> config <span class="token operator">:</span> configsList<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            redisCache<span class="token punctuation">.</span><span class="token function">setCacheObject</span><span class="token punctuation">(</span><span class="token function">getCacheKey</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getConfigKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getConfigValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-最终实现效果" tabindex="-1"><a class="header-anchor" href="#_4-最终实现效果" aria-hidden="true">#</a> 4. 最终实现效果</h2><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211009222956436.png" alt="image-20211009222956436" tabindex="0" loading="lazy"><figcaption>image-20211009222956436</figcaption></figure>`,21),c=[e];function o(i,l){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","manage-system-config-manage.html.vue"]]);export{k as default};
