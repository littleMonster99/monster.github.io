import{_ as a,W as e,X as t,Y as n,Z as p,$ as c,a0 as o,D as i}from"./framework-f64bc974.js";const l={},d=o(`<h1 id="jpa-批量删除" tabindex="-1"><a class="header-anchor" href="#jpa-批量删除" aria-hidden="true">#</a> Jpa 批量删除</h1><h2 id="_1-具体方法" tabindex="-1"><a class="header-anchor" href="#_1-具体方法" aria-hidden="true">#</a> 1. 具体方法</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StudentsRepository</span> <span class="token keyword">extends</span> <span class="token class-name">Repository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Students</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">JpaRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Students</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@function</span> 自定义JPQL
     * <span class="token keyword">@param</span> <span class="token parameter">ids</span>
     */</span>
    <span class="token comment">// 注意更新和删除是需要加事务的， 并且要加上 @Modify的注解</span>
    <span class="token annotation punctuation">@Modifying</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token annotation punctuation">@Query</span><span class="token punctuation">(</span><span class="token string">&quot;delete from Students s where s.stuId in (?1)&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">void</span> <span class="token function">deleteBatch</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 这个是通过spring data拼接关键字进行的操作</span>
    <span class="token keyword">void</span> <span class="token function">deleteStudentsByStuIdIn</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：</p><p><strong>@Modifying注解</strong></p><p>1、在@Query注解中编写JPQL实现DELETE和UPDATE操作时候必须加上@Modifying注解，通知Spring Data这是一个delete或者updata操作</p><p>2、 updata和delete操作需要使用事务，此时需要定义service层，在service方法上添加事务操作</p><p>3、 注意JPQL不支持insert操作</p><p>@Query 如果在注解中添加 nativeQuery=true 是支持原生SQL查询</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,10),r={href:"https://blog.csdn.net/yhflyl/article/details/81557670",target:"_blank",rel:"noopener noreferrer"};function u(k,m){const s=i("ExternalLinkIcon");return e(),t("div",null,[d,n("p",null,[n("a",r,[p("SpringBoot2 Jpa 批量删除"),c(s)])])])}const h=a(l,[["render",u],["__file","jpa-j-multi-delete.html.vue"]]);export{h as default};
