import{_ as d,W as n,X as s,Y as t,Z as a,$ as o,a0 as r,D as l}from"./framework-f64bc974.js";const i={},c=r(`<h1 id="mongodb数据备份与还原" tabindex="-1"><a class="header-anchor" href="#mongodb数据备份与还原" aria-hidden="true">#</a> MongoDB数据备份与还原</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>MongoDB官方提供了两套数据导入导出工具，一般来说，</p><ul><li>mongodump和mongorestore <ul><li>进行整库导出导入时使用</li><li>操作的数据是BSON格式，进行大量dump和restore时效率较高。</li></ul></li><li>mongoexport和mongoimport <ul><li>进行单个集合导出导入时使用</li><li>操作的数据是JSON格式，可读性较高</li></ul></li></ul><h2 id="_2-mongodump-备份" tabindex="-1"><a class="header-anchor" href="#_2-mongodump-备份" aria-hidden="true">#</a> 2. mongodump（备份）</h2><h3 id="_2-1-说明" tabindex="-1"><a class="header-anchor" href="#_2-1-说明" aria-hidden="true">#</a> 2.1 说明</h3><p>mongodump是一个用于导出二进制数据库内容的实用工具，它导出的bson文档中只会包含着集合文档等信息，不包括索引信息（索引信息会单独导出），所以还原后，索引必须重建（这个不用担心，使用mongorestore会自动重建mongodump生成的索引信息）。3.4版本中添加了对只读视图的支持。</p><h3 id="_2-2-参数" tabindex="-1"><a class="header-anchor" href="#_2-2-参数" aria-hidden="true">#</a> 2.2 参数</h3><table><thead><tr><th>命令</th><th>全称</th><th>默认值</th><th>参考释义</th></tr></thead><tbody><tr><td></td><td>--help</td><td></td><td>查看mongodump命令的使用帮助</td></tr><tr><td></td><td>--version</td><td></td><td>返回mongodump的版本号</td></tr><tr><td>-h</td><td><code>--host &lt;hostname&gt;&lt;:port&gt;</code></td><td><code>localhost:27017</code></td><td>指定mongod要连接的主机名及端口号</td></tr><tr><td></td><td><code>--port &lt;port&gt;</code></td><td><code>27017</code></td><td>指定MongoDB实例监听客户连接的TCP端口号</td></tr><tr><td>-u</td><td><code>--username &lt;username&gt;</code></td><td></td><td>指定用于向使用认证的MongoDB数据库认证的用户名，与--password和 --authenticationDatabase结合使用</td></tr><tr><td>-p</td><td><code>--password &lt;password&gt;</code></td><td></td><td>指定用于向使用认证的MongoDB数据库认证的密码。与--username和 -- authenticationDatabase选项结合使用。</td></tr><tr><td>-d</td><td><code>--db &lt;database&gt;</code></td><td></td><td>指定要备份的数据库。如果不指定，mongodump会将此实例中的所有数据库备份。</td></tr><tr><td>-c</td><td><code>--collection &lt;collection&gt;</code></td><td></td><td>指定要备份的集合。如果不指定，则会将指定数据库或实例中的所有集合备份。</td></tr><tr><td></td><td><code>--gzip</code></td><td></td><td>3.2版本+，压缩输出，如果mongodump指定导出到目录，则该选项会将每个文件都压缩， 并添加.gz后缀； 如果mongodump指定导出到文档或标准输出流，则该选项会压缩到文档或输出流中</td></tr><tr><td>-o</td><td><code>--out &lt;path&gt;</code></td><td></td><td>指定导出数据的目录路径，如不指定，则mongodump默认将文件输出到dump所在的工作目录中。 该选项不能和--archive一起使用</td></tr></tbody></table><h3 id="_2-3-举例" tabindex="-1"><a class="header-anchor" href="#_2-3-举例" aria-hidden="true">#</a> 2.3 举例</h3><p>将mytest数据库中的user集合导出到F:\\bk目录下(win在要bin目录下执行)</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>mongodump <span class="token operator">-</span>d mytest <span class="token operator">-</span>c user <span class="token operator">-</span>o F<span class="token punctuation">:</span>\\bk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210104143705063.png" alt="image-20210104143705063" tabindex="0" loading="lazy"><figcaption>image-20210104143705063</figcaption></figure><p>其中的metadata.json即为索引信息</p><h2 id="_3-mongorestore" tabindex="-1"><a class="header-anchor" href="#_3-mongorestore" aria-hidden="true">#</a> 3. mongorestore</h2><h3 id="_3-1-说明" tabindex="-1"><a class="header-anchor" href="#_3-1-说明" aria-hidden="true">#</a> 3.1 说明</h3><p>mongorestore用来导入数据到MongoDB实例中，3.0.0版本以上支持通过标准输入流来导入数据。</p><h3 id="_3-2-参数" tabindex="-1"><a class="header-anchor" href="#_3-2-参数" aria-hidden="true">#</a> 3.2 参数</h3><table><thead><tr><th style="text-align:left;">命令</th><th style="text-align:left;">全称</th><th style="text-align:left;">参考释义</th></tr></thead><tbody><tr><td style="text-align:left;">-d</td><td style="text-align:left;"><code>--db &lt;database&gt;</code></td><td style="text-align:left;">指定要还原的数据库。如果不指定，restore将会还原dump记录的所有数据库，并会覆盖现有数据库数据</td></tr><tr><td style="text-align:left;">-c</td><td style="text-align:left;"><code>--collection &lt;collection&gt;</code></td><td style="text-align:left;"><code>指定要还原的集合。如果不指定，mongorestore会从文件名中读取识别集合名称（如果有扩展名则会省略扩展名）</code></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">--drop</td><td style="text-align:left;">还原集合之前会先从目标数据库中删除集合，不会删除不在备份中的集合。</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">--gzip</td><td style="text-align:left;">3.2版本+，从压缩文件中还原</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;"><code>&lt;path&gt;</code></td><td style="text-align:left;">要还原的数据文件路径，该参数必须是mongorestore命令的最后一个参数</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">--dir</td><td style="text-align:left;">指定备份文件目录</td></tr></tbody></table><p>其他参数与mongodump基本一致。</p><h3 id="_3-3-举例" tabindex="-1"><a class="header-anchor" href="#_3-3-举例" aria-hidden="true">#</a> 3.3 举例：</h3><p>通过user.bson文件还原mytest数据库中的user集合，并在还原之前进行删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongorestore <span class="token parameter variable">--drop</span> <span class="token parameter variable">-d</span> mytest <span class="token parameter variable">-c</span> user <span class="token parameter variable">--dir</span> F:<span class="token punctuation">\\</span>bk<span class="token punctuation">\\</span>mytest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mongorestore <span class="token comment">--drop -d mytest -c user F:\\bk\\mytest\\user.bson</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>linux下可以使用：mongorestore <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>db_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>bson_folder<span class="token operator">&gt;</span>
windows下可以使用：mongorestore.exe <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>db_name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>bson_folder<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210104143924453.png" alt="image-20210104143924453" tabindex="0" loading="lazy"><figcaption>image-20210104143924453</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./mongorestore -h<span class="token string">&quot;127.0.0.1:27017&quot;</span>  <span class="token parameter variable">-d</span> caseDB <span class="token parameter variable">--dir</span> /home/data/caseDB_200619 <span class="token parameter variable">--bypassDocumentValidation</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-mongoexport-mongoimport与mongodump-mongorestore的对比" tabindex="-1"><a class="header-anchor" href="#_4-mongoexport-mongoimport与mongodump-mongorestore的对比" aria-hidden="true">#</a> 4. mongoexport/mongoimport与mongodump/mongorestore的对比</h2><blockquote><ol><li>mongoexport/mongoimport导入/导出的是JSON格式，而mongodump/mongorestore导入/导出的是BSON格式。</li><li>JSON可读性强但体积较大，BSON则是二进制文件，体积小但对人类几乎没有可读性。</li><li>在一些mongodb版本之间，BSON格式可能会随版本不同而有所不同，所以不同版本之间用mongodump/mongorestore可能不会成功，具体要看版本之间的兼容性。当无法使用BSON进行跨版本的数据迁移的时候，使用JSON格式即mongoexport/mongoimport是一个可选项。跨版本的mongodump/mongorestore并不推荐，实在要做请先检查文档看两个版本是否兼容（大部分时候是的）。</li><li>JSON虽然具有较好的跨版本通用性，但其只保留了数据部分，不保留索引，账户等其他基础信息。使用时应该注意。</li></ol></blockquote><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,30),p={href:"https://www.cnblogs.com/dbabd/p/13259147.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://blog.csdn.net/qq_16313365/article/details/56494522",target:"_blank",rel:"noopener noreferrer"},m={href:"https://segmentfault.com/a/1190000012330284",target:"_blank",rel:"noopener noreferrer"};function h(u,b){const e=l("ExternalLinkIcon");return n(),s("div",null,[c,t("p",null,[t("a",p,[a("MongoDB 逻辑还原工具mongorestore "),o(e)])]),t("p",null,[t("a",g,[a("MongoDB学习（六）数据库的备份、还原、导入及导出"),o(e)])]),t("p",null,[t("a",m,[a("Docker MongoDB 数据库备份 并复制到宿主 恢复"),o(e)])])])}const x=d(i,[["render",h],["__file","mongodb-backup.html.vue"]]);export{x as default};
