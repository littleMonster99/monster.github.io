import{_ as e,W as p,X as o,Y as n,Z as a,$ as t,a0 as c,D as i}from"./framework-f64bc974.js";const l={},u=c(`<h1 id="swagger的使用" tabindex="-1"><a class="header-anchor" href="#swagger的使用" aria-hidden="true">#</a> Swagger的使用</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><blockquote><p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务的接口文档。</p></blockquote><p><em>1. 接口的文档在线自动生成。</em></p><p><em>2. 功能测试。</em></p><h2 id="_2-集成" tabindex="-1"><a class="header-anchor" href="#_2-集成" aria-hidden="true">#</a> 2.集成</h2><h3 id="_2-1-引入依赖包" tabindex="-1"><a class="header-anchor" href="#_2-1-引入依赖包" aria-hidden="true">#</a> 2.1 引入依赖包</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
       ...
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swagger.version</span><span class="token punctuation">&gt;</span></span>2.7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swagger.version</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- swagger2 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-swagger2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${swagger.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- swagger2 ui --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-swagger-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${swagger.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-配置swagger" tabindex="-1"><a class="header-anchor" href="#_2-2-配置swagger" aria-hidden="true">#</a> 2.2. 配置Swagger</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Swagger2的接口配置
 * 
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableSwagger2</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerConfig</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** 系统基础配置 */</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">FarduConfig</span> ruoyiConfig<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 是否开启swagger */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${swagger.enabled}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> enabled<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 设置请求的统一前缀 */</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${swagger.pathMapping}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> pathMapping<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 创建API
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">createRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">SWAGGER_2</span><span class="token punctuation">)</span>
                <span class="token comment">// 是否启用Swagger</span>
                <span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>enabled<span class="token punctuation">)</span>
                <span class="token comment">// 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置哪些接口暴露给Swagger展示</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">// 扫描所有有注解的api，用这种方式更灵活</span>
                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withMethodAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ApiOperation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 扫描指定包中的swagger注解</span>
                <span class="token comment">// .apis(RequestHandlerSelectors.basePackage(&quot;com.fardu.project.tool.swagger&quot;))</span>
                <span class="token comment">// 扫描所有 .apis(RequestHandlerSelectors.any())</span>
                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">/* 设置安全模式，swagger可以设置访问token */</span>
                <span class="token punctuation">.</span><span class="token function">securitySchemes</span><span class="token punctuation">(</span><span class="token function">securitySchemes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">securityContexts</span><span class="token punctuation">(</span><span class="token function">securityContexts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">pathMapping</span><span class="token punctuation">(</span>pathMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 安全模式，这里指定token通过Authorization头请求头传递
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApiKey</span><span class="token punctuation">&gt;</span></span> <span class="token function">securitySchemes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApiKey</span><span class="token punctuation">&gt;</span></span> apiKeyList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApiKey</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        apiKeyList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApiKey</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;header&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> apiKeyList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 安全上下文
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityContext</span><span class="token punctuation">&gt;</span></span> <span class="token function">securityContexts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityContext</span><span class="token punctuation">&gt;</span></span> securityContexts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        securityContexts<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                <span class="token class-name">SecurityContext</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">securityReferences</span><span class="token punctuation">(</span><span class="token function">defaultAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">forPaths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">regex</span><span class="token punctuation">(</span><span class="token string">&quot;^(?!auth).*$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> securityContexts<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 默认的安全上引用
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityReference</span><span class="token punctuation">&gt;</span></span> <span class="token function">defaultAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">AuthorizationScope</span> authorizationScope <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationScope</span><span class="token punctuation">(</span><span class="token string">&quot;global&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;accessEverything&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">AuthorizationScope</span><span class="token punctuation">[</span><span class="token punctuation">]</span> authorizationScopes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationScope</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        authorizationScopes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> authorizationScope<span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityReference</span><span class="token punctuation">&gt;</span></span> securityReferences <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        securityReferences<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SecurityReference</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> authorizationScopes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> securityReferences<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 添加摘要信息
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 用ApiInfoBuilder进行定制</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置标题</span>
                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;标题：管理系统_接口文档&quot;</span><span class="token punctuation">)</span>
                <span class="token comment">// 描述</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;描述：用于管理集团旗下公司的人员信息,具体包括XXX,XXX模块...&quot;</span><span class="token punctuation">)</span>
                <span class="token comment">// 作者信息</span>
                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span>ruoyiConfig<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// 版本</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;版本号:&quot;</span> <span class="token operator">+</span> ruoyiConfig<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在application.yml 设置是否启动swagger</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>swagger:
    show: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-1-配置介绍" tabindex="-1"><a class="header-anchor" href="#_2-2-1-配置介绍" aria-hidden="true">#</a> 2.2.1 配置介绍</h4><ul><li><p>apiInfo：api基本信息的配置，信息会在api文档上显示，可有选择的填充，比如配置文档名称、项目版本号等</p></li><li><p>apis：使用什么样的方式来扫描接口，RequestHandlerSelectors下共有五种方法可选。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 1.扫描所有包下的</span>
<span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 2.扫描base包形式</span>
<span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">&quot;com.ylzinfo.appfactory&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 2.1 多包扫描base包形式</span>
<span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">&quot;com.example.demo.controller;com.example.demo.test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 3.扫描带有对应注解的方式</span>
<span class="token comment">// 3.1带有@Api注解</span>
<span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withClassAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Api</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 3.2 带有@ApiOperation 注解，这种方式最灵活推荐</span>
<span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">withMethodAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ApiOperation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>path：扫描接口的路径，PathSelectors下有四种方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// any() --- 匹配所有的路径</span>
<span class="token comment">// ant() --- 匹配传入参数的</span>
<span class="token comment">// regex() --- 通过正则表达式匹配路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>paths(PathSelectors.any())</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>


### 2.3 打开swagger地址

http://localhost:9710/swagger-ui.html

## 3. 简单使用

###  3.1 Controller 配置

\`\`\`java
@RequestMapping(&quot;appfactory/index&quot;)
@Api(value = &quot;首页工厂&quot;, tags = {&quot;首页工厂标签&quot;}, description = &quot;app首页工厂描述&quot;)
public class IndexFactoryController {

  @ApiOperation(value=&quot;查看列表&quot;)
  @GetMapping(&quot;/list&quot;)
  public Result&lt;MyDomain&gt; list(MyDomain domain) {
     
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-实体类配置" tabindex="-1"><a class="header-anchor" href="#_3-2-实体类配置" aria-hidden="true">#</a> 3.2 实体类配置</h3><p>参数的注解设置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span><span class="token string">&quot;我实体类&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDomain</span> <span class="token punctuation">{</span>
     <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;名称&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-返回结果配置" tabindex="-1"><a class="header-anchor" href="#_3-3-返回结果配置" aria-hidden="true">#</a> 3.3 返回结果配置</h3><p>返回配置需要使用泛型，并将泛型返回才行</p><p>例如：<code>Result&lt;MyDomain&gt;</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;代码&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> code<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;信息&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span><span class="token string">&quot;数据&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">T</span> data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-相关注解" tabindex="-1"><a class="header-anchor" href="#_4-相关注解" aria-hidden="true">#</a> 4.相关注解</h2><h3 id="_4-1-api注解" tabindex="-1"><a class="header-anchor" href="#_4-1-api注解" aria-hidden="true">#</a> 4.1 @API注解</h3><ol><li><p>tags：可以使用tags()允许您为操作设置多个标签的属性，而不是使用该属性。</p></li><li><p>description：可描述描述该类作用。</p></li></ol><p>例如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;appfactory/index&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;首页工厂&quot;</span><span class="token punctuation">,</span> tags <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;首页工厂标签&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;app首页工厂描述&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexFactoryController</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-apiimplicitparam" tabindex="-1"><a class="header-anchor" href="#_4-2-apiimplicitparam" aria-hidden="true">#</a> 4.2 @ApiImplicitParam：</h3><p>作用在方法上，表示单独的请求参数 参数：</p><ol><li>name ：参数名。</li><li>value ： 参数的具体意义，作用。</li><li>required ： 参数是否必填。</li><li>dataType ：参数的数据类型。</li><li>paramType ：查询参数类型，这里有几种形式：</li></ol><table><thead><tr><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>path</td><td>以地址的形式提交数据</td></tr><tr><td>query</td><td>直接跟参数完成自动映射赋值</td></tr><tr><td>body</td><td>以流的形式提交 仅支持POST</td></tr><tr><td>header</td><td>参数在request headers 里边提交</td></tr><tr><td>form</td><td>以form表单的形式提交 仅支持POST</td></tr></tbody></table><h3 id="_4-3-apiimplicitparams" tabindex="-1"><a class="header-anchor" href="#_4-3-apiimplicitparams" aria-hidden="true">#</a> 4.3 @ApiImplicitParams：</h3><p>用于方法，包含多个 @ApiImplicitParam： 例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@ApiImplicitParams({
            @ApiImplicitParam(name = &quot;id&quot;, value = &quot;book&#39;s name&quot;, required = true, dataType = &quot;Long&quot;, paramType = &quot;query&quot;),
            @ApiImplicitParam(name = &quot;date&quot;, value = &quot;book&#39;s date&quot;, required = false, dataType = &quot;string&quot;, paramType = &quot;query&quot;)})
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-apimodel" tabindex="-1"><a class="header-anchor" href="#_4-4-apimodel" aria-hidden="true">#</a> 4.4 @ApiModel：</h3><p>用于类，表示对类进行说明，用于参数用实体类接收；</p><h3 id="_4-5-apimodelproperty" tabindex="-1"><a class="header-anchor" href="#_4-5-apimodelproperty" aria-hidden="true">#</a> 4.5 @ApiModelProperty：</h3><p>用于方法，字段 ，表示对model属性的说明或者数据操作更改 例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiModel</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;用户&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1546481732633762837L</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 用户ID
 */</span>
<span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;用户ID&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;{id.empty}&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">Default</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">New</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">Update</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * code/登录帐号
 */</span>
<span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;code/登录帐号&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;{itcode.empty}&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">Default</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">New</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">Update</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token class-name">String</span> itcode<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 用户姓名
 */</span>
<span class="token annotation punctuation">@ApiModelProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;用户姓名&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@NotEmpty</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;{name.empty}&quot;</span><span class="token punctuation">,</span> groups <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">Default</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">New</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">Update</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-apioperation" tabindex="-1"><a class="header-anchor" href="#_4-6-apioperation" aria-hidden="true">#</a> 4.6 @ApiOperation：</h3><p>用于方法，表示一个http请求的操作 。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;获取图书信息&quot;</span><span class="token punctuation">,</span> notes <span class="token operator">=</span> <span class="token string">&quot;获取图书信息&quot;</span><span class="token punctuation">,</span> response <span class="token operator">=</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> responseContainer <span class="token operator">=</span> <span class="token string">&quot;Item&quot;</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ApiImplicitParams</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;book&#39;s name&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">&quot;Long&quot;</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">&quot;query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;date&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;book&#39;s date&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">&quot;query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ResponseBody</span>
<span class="token keyword">public</span> <span class="token class-name">Book</span> <span class="token function">getBook</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> books<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-7-apiresponse" tabindex="-1"><a class="header-anchor" href="#_4-7-apiresponse" aria-hidden="true">#</a> 4.7 @ApiResponse：</h3><p>用于方法，描述操作的可能响应。</p><h3 id="_4-8-apiresponses" tabindex="-1"><a class="header-anchor" href="#_4-8-apiresponses" aria-hidden="true">#</a> 4.8 @ApiResponses：</h3><p>用于方法，一个允许多个ApiResponse对象列表的包装器。 例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ApiResponses</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> 
            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;2001:因输入数据问题导致的报错&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;403:没有权限&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@ApiResponse</span><span class="token punctuation">(</span>code <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">,</span> message <span class="token operator">=</span> <span class="token string">&quot;2500:通用报错（包括数据、逻辑、外键关联等，不区分错误类型）&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-9-apiparam" tabindex="-1"><a class="header-anchor" href="#_4-9-apiparam" aria-hidden="true">#</a> 4.9 @ApiParam：</h3><p>用于方法，参数，字段说明，表示对参数的添加元数据（说明或是否必填等）</p><h3 id="_4-10-authorization" tabindex="-1"><a class="header-anchor" href="#_4-10-authorization" aria-hidden="true">#</a> 4.10 @Authorization：</h3><p>声明要在资源或操作上使用的授权方案。</p><h3 id="_4-11-authorizationscope" tabindex="-1"><a class="header-anchor" href="#_4-11-authorizationscope" aria-hidden="true">#</a> 4.11 @AuthorizationScope：</h3><p>介绍一个OAuth2授权范围。</p><h3 id="_4-12-responseheader" tabindex="-1"><a class="header-anchor" href="#_4-12-responseheader" aria-hidden="true">#</a> 4.12 @ResponseHeader：</h3><p>响应头设置，使用方法。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,57),r={href:"https://blog.csdn.net/java_yes/article/details/79183804",target:"_blank",rel:"noopener noreferrer"},d={href:"https://blog.csdn.net/qq1515312832/article/details/103212461",target:"_blank",rel:"noopener noreferrer"};function k(v,m){const s=i("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[a("SwaggerAPI注解详解,以及注解常用参数配置"),t(s)])]),n("p",null,[n("a",d,[a("spring boot 之使用Swagger配置详解"),t(s)])])])}const g=e(l,[["render",k],["__file","swagger-x-use.html.vue"]]);export{g as default};
