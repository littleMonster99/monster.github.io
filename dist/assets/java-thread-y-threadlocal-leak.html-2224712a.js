const e=JSON.parse('{"key":"v-142fe08d","path":"/java/thread/java-thread-y-threadlocal-leak.html","title":"ThreadLocal使用不当导致内存泄漏","lang":"zh-CN","frontmatter":{"description":"线程池的一个线程使用完 Threadlocal 对象之后，由于线程池中的线程不会退出，线程池中的线程池存在，同时ThreadLocal变量也会存在，占用内存，造成OOM溢出。 参考文章 多图深入分析ThreadLocal原理 (https://blog.csdn.net/xlgen157387/article/details/78297568) Jav...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/thread/java-thread-y-threadlocal-leak.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"ThreadLocal使用不当导致内存泄漏"}],["meta",{"property":"og:description","content":"线程池的一个线程使用完 Threadlocal 对象之后，由于线程池中的线程不会退出，线程池中的线程池存在，同时ThreadLocal变量也会存在，占用内存，造成OOM溢出。 参考文章 多图深入分析ThreadLocal原理 (https://blog.csdn.net/xlgen157387/article/details/78297568) Jav..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":0.39,"words":117},"filePathRelative":"java/thread/java-thread-y-threadlocal-leak.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
