import{_ as r,W as o,X as i,Y as e,Z as n,$ as t,a0 as l,D as d}from"./framework-f64bc974.js";const c={},h=l('<h1 id="商城设计要点-三-购物车-混合存储" tabindex="-1"><a class="header-anchor" href="#商城设计要点-三-购物车-混合存储" aria-hidden="true">#</a> 商城设计要点(三)-购物车，混合存储</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>购物车是电商系统的标配功能，暂存用户想要购买的商品。分为添加商品、列表查看、结算下单三个动作。</p><p>技术设计并不是特别复杂，存储的信息也相对有限（用户id、商品id、sku_id、数量、添加时间）。这里特别拿出来单讲主要是用户体验层面要注意几个问题：</p><h3 id="_1-1-未登录时添加商品" tabindex="-1"><a class="header-anchor" href="#_1-1-未登录时添加商品" aria-hidden="true">#</a> 1.1 未登录时添加商品</h3><p>添加购物车时，后端校验用户未登录，常规思路，引导用户跳转登录页，待登录成功后，再添加购物车。多了一步操作，给用户一种强迫的感觉，体验会比较差。有没有更好的方式？</p><p>如果细心体验京东、淘宝等大平台，你会发现即使未登录态也可以添加购物车，这到底是怎么实现的？</p><h2 id="_2-解决" tabindex="-1"><a class="header-anchor" href="#_2-解决" aria-hidden="true">#</a> 2. 解决</h2><p>细细琢磨其实原理并不复杂，服务端这边在用户登录态校验时，做了分支路由</p><ol><li><p>当用户未登录时，会创建一个临时<code>Token</code>，作为用户的唯一标识，购物车数据挂载在该<code>Token</code>下</p></li><li><p>为了避免购物车数据相互影响以及设计的复杂度，这里会有一个临时购物车表。</p><p>当然，临时购物车表的数据量并不会太大，why？用户不会一直闲着添加购物车玩</p></li><li><p>当用户登录后，查看自己的购物车，服务端会从请求的cookie里<strong>查找购物车<code>Token</code>标识</strong>，并<strong>查询临时购物车表是否有数据，然后合并到正式购物车表里</strong>。</p></li></ol><blockquote><ol><li>mall 商城项目未采用该方案</li><li>Mall 购物车一定要登录才能使用</li></ol></blockquote><h2 id="_3-特别说明" tabindex="-1"><a class="header-anchor" href="#_3-特别说明" aria-hidden="true">#</a> 3. 特别说明</h2><p>临时购物车是不是一定要在服务端存储？未必。</p><p>有架构师倾向前置存储，将数据存储在浏览器或者<code>APP LocalStorage</code>，这部分数据毕竟不是共享的，但是不太好的增加了设计的复杂度。</p><ul><li>客户端需要借助本地数据索引，远程请求查完整信息</li><li>如果是登录态，还要增加数据合并逻辑</li></ul><p>考虑到这两部分数据只是用户标识的差异性，所以作者还是建议统一存到服务端，日后即使业务逻辑变更，只需要改一处就可以了，毕竟自运营系统，良好的可维护性也需要我们非常关注的。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>',17),s={href:"https://mp.weixin.qq.com/s/BgVr0jEBJwQI5UW_ele08A",target:"_blank",rel:"noopener noreferrer"};function p(_,u){const a=d("ExternalLinkIcon");return o(),i("div",null,[h,e("p",null,[e("a",s,[n("聊聊电商系统中常见的9大坑！库存超卖、重复下单、物流单ABA"),t(a)])])])}const k=r(c,[["render",p],["__file","mall-key-points-cart-hybrid.html.vue"]]);export{k as default};
