import{_ as t,W as l,X as s,Y as e,Z as n,$ as a,a0 as i,D as u}from"./framework-f64bc974.js";const d={},c=i('<h1 id="gitlab-runner的安装与使用" tabindex="-1"><a class="header-anchor" href="#gitlab-runner的安装与使用" aria-hidden="true">#</a> Gitlab-Runner的安装与使用</h1><h2 id="_1-安装步骤" tabindex="-1"><a class="header-anchor" href="#_1-安装步骤" aria-hidden="true">#</a> 1. 安装步骤</h2><h3 id="_1-1-安装gitlab-ci-multi-runner" tabindex="-1"><a class="header-anchor" href="#_1-1-安装gitlab-ci-multi-runner" aria-hidden="true">#</a> 1.1 安装gitlab-ci-multi-runner</h3>',3),o=e("li",null,[e("p",null,"添加yum源"),e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh | sudo bash
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])])],-1),g=e("p",null,"安装",-1),h=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`yum install gitlab-ci-multi-runner
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),b={href:"https://gitlab.com/gitlab-org/gitlab-ci-multi-runner",target:"_blank",rel:"noopener noreferrer"},p=i(`<h3 id="_1-2-使用gitlab-ci-multi-runner注册runner" tabindex="-1"><a class="header-anchor" href="#_1-2-使用gitlab-ci-multi-runner注册runner" aria-hidden="true">#</a> 1.2 使用gitlab-ci-multi-runner注册Runner</h3><p>安装好gitlab-ci-multi-runner这个软件之后，我们可以用它想gitlab-ci注册runner</p><p>向gitlab-CI注册runner需要两样东西:<strong>GitLab-CI的url</strong>和<strong>注册token</strong>。</p><p>其中，token是为了确定你这个Runner是<strong>所有工程都能够使用的Shared Runner</strong>还是具体<strong>某一个工程才能使用的Specific Runner</strong>。</p><h4 id="_1-2-1-所有工程都能够使用的shared-runner" tabindex="-1"><a class="header-anchor" href="#_1-2-1-所有工程都能够使用的shared-runner" aria-hidden="true">#</a> 1.2.1 所有工程都能够使用的Shared Runner</h4><p>如果要注册Shared Runner，你需要到管理界面的Runners页面里面去找注册token。如下图所示：</p><h4 id="_1-2-2-某一个工程才能使用的specific-runner" tabindex="-1"><a class="header-anchor" href="#_1-2-2-某一个工程才能使用的specific-runner" aria-hidden="true">#</a> 1.2.2 某一个工程才能使用的Specific Runner</h4><p>如果要注册Specific Runner，你需要到项目的设置的Runner页面里面去找注册token。如下图所示：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200109135721629.png" alt="image-20200109135721629" tabindex="0" loading="lazy"><figcaption>image-20200109135721629</figcaption></figure><h4 id="_1-2-3-注册runner" tabindex="-1"><a class="header-anchor" href="#_1-2-3-注册runner" aria-hidden="true">#</a> 1.2.3 注册runner</h4><p>找到token之后，运行下面这条命令注册Runner（当然，除了url和token之外，还需要其他的信息，比如执行器<code>executor</code>、构建目录<code>builds_dir</code>等）。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 如果启动sudo 这里也要加上sudo
gitlab-ci-multi-runner register

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200109140942669.png" alt="image-20200109140942669" tabindex="0" loading="lazy"><figcaption>image-20200109140942669</figcaption></figure><p>依据提示输入</p><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h3><ul><li><p>Whether to run untagged builds [true/false]:</p><p>是否运行在没有 tag 的 build 上面。在配置 gitlab-ci 时，会有很多 job，每个 job 可以通过 tags 属性来选择 Runner。<strong>这里为 true 表示如果 job 没有配置 tags，也执行。</strong></p></li><li><p>Whether to lock the Runner to current project [true/false]:</p><p>是否锁定 Runner 到当前项目</p></li><li><p>选择 executor，这里列出了很多 executor</p><p>shell</p></li></ul><p>注册完成之后，GitLab-CI就会多出一条Runner记录，如下图所示：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20200109141223152.png" alt="image-20200109141223152" tabindex="0" loading="lazy"><figcaption>image-20200109141223152</figcaption></figure><h3 id="_1-3-让注册好的runner运行起来" tabindex="-1"><a class="header-anchor" href="#_1-3-让注册好的runner运行起来" aria-hidden="true">#</a> 1.3 让注册好的Runner运行起来</h3><p>Runner注册完成之后还不行，还必须让它运行起来，否则它无法接收到GitLab-CI的通知并且执行软件集成脚本。怎么让Runner运行起来呢？<code>gitlab-ci-multi-runner</code>提供了这样一条命令<code>gitlab-ci-multi-runner run-single</code>，详情如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>gitlab-ci-multi-runner start gitbook-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看runner运行状态</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ps -aux | grep gitlab-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>gitlab运行成功了</p><h2 id="_2-可能遇到的问题" tabindex="-1"><a class="header-anchor" href="#_2-可能遇到的问题" aria-hidden="true">#</a> 2. 可能遇到的问题</h2><h3 id="_2-1-注册-runner-后-gitlab-runner-出现灰色感叹号" tabindex="-1"><a class="header-anchor" href="#_2-1-注册-runner-后-gitlab-runner-出现灰色感叹号" aria-hidden="true">#</a> 2.1 注册 runner 后，gitlab runner 出现灰色感叹号</h3><p>在服务器注册完 runner 后，在 gitlab 的 runner 处出现灰色感叹号，并提示 new runner has not connected yet。这个问题一般都是权限问题造成的，加 sudo 和不加 sudo 所创建的配置文件不同。在使用 <code>gitlab-runner register</code> 注册的时候，加上 sudo，在启动 runner 时也要加上 sudo ， <code>sudo gitlab-runner restart</code> 或 <code>sudo gitlab-runner start</code> 。</p><h3 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h3>`,28),m={href:"https://www.jianshu.com/p/2b43151fb92e",target:"_blank",rel:"noopener noreferrer"};function _(x,f){const r=u("ExternalLinkIcon");return l(),s("div",null,[c,e("ul",null,[o,e("li",null,[g,h,e("p",null,[n("这里是官网的安装教程，其它操作系统的请参考 "),e("a",b,[n("https://gitlab.com/gitlab-org/gitlab-ci-multi-runner"),a(r)])])])]),p,e("p",null,[e("a",m,[n("GitLab-CI与GitLab-Runner"),a(r)])])])}const R=t(d,[["render",_],["__file","gitlab-x-runner-install.html.vue"]]);export{R as default};
