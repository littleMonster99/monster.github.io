import{_ as a,W as e,X as p,Y as n,$ as t,a0 as o,D as c}from"./framework-f64bc974.js";const l={},i=o(`<h1 id="redis进阶-数据类型-stream详解" tabindex="-1"><a class="header-anchor" href="#redis进阶-数据类型-stream详解" aria-hidden="true">#</a> Redis进阶 - 数据类型：Stream详解</h1><blockquote><p>Redis5.0 中还增加了一个数据类型Stream，它借鉴了Kafka的设计，是一个新的强大的支持多播的可持久化的消息队列。</p></blockquote><h2 id="_1-为什么会设计stream" tabindex="-1"><a class="header-anchor" href="#_1-为什么会设计stream" aria-hidden="true">#</a> 1. 为什么会设计Stream</h2><blockquote><p>Redis5.0 中还增加了一个数据结构Stream，从字面上看是流类型，但其实从功能上看，应该是Redis对消息队列（MQ，Message Queue）的完善实现。</p></blockquote><p>用过Redis做消息队列的都了解，基于Reids的消息队列实现有很多种，例如：</p><ul><li>PUB/SUB，订阅/发布模式 <ul><li>但是发布订阅模式是无法持久化的，如果出现网络断开、Redis 宕机等，消息就会被丢弃；</li></ul></li><li>基于<strong>List LPUSH+BRPOP</strong> 或者 基于<strong>Sorted-Set</strong>的实现 <ul><li>支持了持久化，但是不支持多播，分组消费等</li></ul></li></ul><p>为什么上面的结构无法满足广泛的MQ场景？ 这里便引出一个核心的问题：如果我们期望设计一种数据结构来实现消息队列，最重要的就是要理解<strong>设计一个消息队列需要考虑什么</strong>？初步的我们很容易想到</p><ul><li>消息的生产</li><li>消息的消费 <ul><li>单播和多播（多对多）</li><li>阻塞和非阻塞读取</li></ul></li><li>消息有序性</li><li>消息的持久化</li></ul><p>其它还要考虑啥嗯？</p><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220623201858393.png" alt="image-20220623201858393"><p><strong>我们不妨看看Redis考虑了哪些设计</strong>？</p><ul><li>消息ID的序列化生成</li><li>消息遍历</li><li>消息的阻塞和非阻塞读取</li><li>消息的分组消费</li><li>未完成消息的处理</li><li>消息队列监控</li><li>...</li></ul><blockquote><p>这也是我们需要理解Stream的点，但是结合上面的图，我们也应该理解Redis Stream也是一种超轻量MQ并没有完全实现消息队列所有设计要点，这决定着它适用的场景。</p></blockquote><h2 id="_2-stream详解" tabindex="-1"><a class="header-anchor" href="#_2-stream详解" aria-hidden="true">#</a> 2. Stream详解</h2><blockquote><p>经过梳理总结，我认为从以下几个大的方面去理解Stream是比较合适的，总结如下</p></blockquote><ul><li>Stream的结构设计</li><li>生产和消费 <ul><li>基本的增删查改</li><li>单一消费者的消费</li><li>消费组的消费</li></ul></li><li>监控状态</li></ul><h3 id="_2-1-stream的结构" tabindex="-1"><a class="header-anchor" href="#_2-1-stream的结构" aria-hidden="true">#</a> 2.1 Stream的结构</h3><p>每个 Stream 都有唯一的名称，它就是 Redis 的 key，在我们首次使用 xadd 指令追加消息时自动创建。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220623202132225.png" alt="image-20220623202132225" tabindex="0" loading="lazy"><figcaption>image-20220623202132225</figcaption></figure><p>上图解析：</p><ul><li><code>Consumer Group</code> ：消费组，使用 XGROUP CREATE 命令创建，一个消费组有多个消费者(Consumer), 这些消费者之间是竞争关系。</li><li><code>last_delivered_id</code> ：游标，每个消费组会有个游标 last_delivered_id，任意一个消费者读取了消息都会使游标 last_delivered_id 往前移动。</li><li><code>pending_ids</code> ：消费者(Consumer)的状态变量，作用是维护消费者的未确认的 id。 pending_ids 记录了当前已经被客户端读取的消息，但是还没有 <code>ack</code> (Acknowledge character：确认字符）。如果客户端没有ack，这个变量里面的消息ID会越来越多，一旦某个消息被ack，它就开始减少。这个pending_ids变量在Redis官方被称之为PEL，也就是Pending Entries List，这是一个很核心的数据结构，它用来确保客户端至少消费了消息一次，而不会在网络传输的中途丢失了没处理。</li></ul><p>此外我们还需要理解两点：</p><ul><li><code>消息ID</code>: 消息ID的形式是timestampInMillis-sequence，例如1527846880572-5，它表示当前的消息在毫米时间戳1527846880572时产生，并且是该毫秒内产生的第5条消息。消息ID可以由服务器自动生成，也可以由客户端自己指定，但是形式必须是整数-整数，而且必须是后面加入的消息的ID要大于前面的消息ID。</li><li><code>消息内容</code>: 消息内容就是键值对，形如hash结构的键值对，这没什么特别之处。</li></ul><h3 id="_2-2-增删改查" tabindex="-1"><a class="header-anchor" href="#_2-2-增删改查" aria-hidden="true">#</a> 2.2 增删改查</h3><p>消息队列相关命令：</p><ul><li>XADD - 添加消息到末尾</li><li>XTRIM - 对流进行修剪，限制长度</li><li>XDEL - 删除消息</li><li>XLEN - 获取流包含的元素数量，即消息长度</li><li>XRANGE - 获取消息列表，会自动过滤已经删除的消息</li><li>XREVRANGE - 反向获取消息列表，ID 从大到小</li><li>XREAD - 以阻塞或非阻塞方式获取消息列表</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># <span class="token operator">*</span>号表示服务器自动生成<span class="token constant">ID</span>，后面顺序跟着一堆key<span class="token operator">/</span>value
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xadd codehole <span class="token operator">*</span> name laoqian age <span class="token number">30</span>  #  名字叫laoqian，年龄<span class="token number">30</span>岁
<span class="token number">1527849609889</span><span class="token operator">-</span><span class="token number">0</span>  # 生成的消息<span class="token constant">ID</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xadd codehole <span class="token operator">*</span> name xiaoyu age <span class="token number">29</span>
<span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xadd codehole <span class="token operator">*</span> name xiaoqian age <span class="token number">1</span>
<span class="token number">1527849637634</span><span class="token operator">-</span><span class="token number">0</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xlen codehole
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xrange codehole <span class="token operator">-</span> <span class="token operator">+</span>  # <span class="token operator">-</span>表示最小值<span class="token punctuation">,</span> <span class="token operator">+</span>表示最大值
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xrange codehole <span class="token operator">-</span> <span class="token operator">+</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849609889</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;laoqian&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;30&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoyu&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;29&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849637634</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoqian&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xrange codehole <span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span> <span class="token operator">+</span>  # 指定最小消息<span class="token constant">ID</span>的列表
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoyu&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;29&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849637634</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoqian&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xrange codehole <span class="token operator">-</span> <span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span>  # 指定最大消息<span class="token constant">ID</span>的列表
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849609889</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;laoqian&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;30&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoyu&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;29&quot;</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xdel codehole <span class="token number">1527849609889</span><span class="token operator">-</span><span class="token number">0</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xlen codehole  # 长度不受影响
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> xrange codehole <span class="token operator">-</span> <span class="token operator">+</span>  # 被删除的消息没了
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849629172</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoyu&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;29&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527849637634</span><span class="token operator">-</span><span class="token number">0</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoqian&quot;</span>
      <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
      <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">6379</span><span class="token operator">&gt;</span> del codehole  # 删除整个<span class="token class-name">Stream</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-独立消费" tabindex="-1"><a class="header-anchor" href="#_2-3-独立消费" aria-hidden="true">#</a> 2.3 独立消费</h3><p>我们可以在不定义消费组的情况下进行Stream消息的独立消费，当Stream没有新消息时，甚至可以阻塞等待。Redis设计了一个单独的消费指令xread，可以将Stream当成普通的消息队列(list)来使用。使用xread时，我们可以完全忽略消费组(Consumer Group)的存在，就好比Stream就是一个普通的列表(list)。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 从Stream头部读取两条消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xread count <span class="token number">2</span> streams codehole <span class="token number">0</span>-0
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;codehole&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851486781</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;laoqian&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;30&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851493405</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;yurui&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;29&quot;</span>
<span class="token comment"># 从Stream尾部读取一条消息，毫无疑问，这里不会返回任何消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xread count <span class="token number">1</span> streams codehole $
<span class="token punctuation">(</span>nil<span class="token punctuation">)</span>
<span class="token comment"># 从尾部阻塞等待新消息到来，下面的指令会堵住，直到新消息到来</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xread block <span class="token number">0</span> count <span class="token number">1</span> streams codehole $
<span class="token comment"># 我们从新打开一个窗口，在这个窗口往Stream里塞消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xadd codehole * name youming age <span class="token number">60</span>
<span class="token number">1527852774092</span>-0
<span class="token comment"># 再切换到前面的窗口，我们可以看到阻塞解除了，返回了新的消息内容</span>
<span class="token comment"># 而且还显示了一个等待时间，这里我们等待了93s</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xread block <span class="token number">0</span> count <span class="token number">1</span> streams codehole $
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;codehole&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527852774092</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;youming&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;60&quot;</span>
<span class="token punctuation">(</span><span class="token number">93</span>.11s<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端如果想要使用xread进行顺序消费，一定要记住当前消费到哪里了，也就是返回的消息ID。下次继续调用xread时，将上次返回的最后一个消息ID作为参数传递进去，就可以继续消费后续的消息。</p><p>block 0表示永远阻塞，直到消息到来，block 1000表示阻塞1s，如果1s内没有任何消息到来，就返回nil</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xread block <span class="token number">1000</span> count <span class="token number">1</span> streams codehole $
<span class="token punctuation">(</span>nil<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">1</span>.07s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-消费组消费" tabindex="-1"><a class="header-anchor" href="#_2-4-消费组消费" aria-hidden="true">#</a> 2.4 消费组消费</h3><ul><li><strong>消费组消费图</strong></li></ul><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220623202747788.png" alt="image-20220623202747788" tabindex="0" loading="lazy"><figcaption>image-20220623202747788</figcaption></figure><ul><li><p>相关命令：</p><ul><li><p>XGROUP CREATE - 创建消费者组</p></li><li><p>XREADGROUP GROUP - 读取消费者组中的消息</p></li><li><p>XACK - 将消息标记为&quot;已处理&quot;</p></li><li><p>XGROUP SETID - 为消费者组设置新的最后递送消息ID</p></li><li><p>XGROUP DELCONSUMER - 删除消费者</p></li><li><p>XGROUP DESTROY - 删除消费者组</p></li><li><p>XPENDING - 显示待处理消息的相关信息</p></li><li><p>XCLAIM - 转移消息的归属权</p></li><li><p>XINFO - 查看流和消费者组的相关信息；</p></li><li><p>XINFO GROUPS - 打印消费者组的信息；</p></li><li><p>XINFO STREAM - 打印流信息</p></li></ul></li><li><p><strong>创建消费组</strong></p></li></ul><p>Stream通过xgroup create指令创建消费组(Consumer Group)，需要传递起始消息ID参数用来初始化last_delivered_id变量。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xgroup create codehole cg1 <span class="token number">0</span>-0  <span class="token comment">#  表示从头开始消费</span>
OK
<span class="token comment"># $表示从尾部开始消费，只接受新消息，当前Stream消息会全部忽略</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xgroup create codehole cg2 $
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xinfo stream codehole  <span class="token comment"># 获取Stream信息</span>
 <span class="token number">1</span><span class="token punctuation">)</span> length
 <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>  <span class="token comment"># 共3个消息</span>
 <span class="token number">3</span><span class="token punctuation">)</span> radix-tree-keys
 <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
 <span class="token number">5</span><span class="token punctuation">)</span> radix-tree-nodes
 <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
 <span class="token number">7</span><span class="token punctuation">)</span> <span class="token function">groups</span>
 <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>  <span class="token comment"># 两个消费组</span>
 <span class="token number">9</span><span class="token punctuation">)</span> first-entry  <span class="token comment"># 第一个消息</span>
<span class="token number">10</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851486781</span>-0
    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;laoqian&quot;</span>
       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
       <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;30&quot;</span>
<span class="token number">11</span><span class="token punctuation">)</span> last-entry  <span class="token comment"># 最后一个消息</span>
<span class="token number">12</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851498956</span>-0
    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoqian&quot;</span>
       <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
       <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xinfo <span class="token function">groups</span> codehole  <span class="token comment"># 获取Stream的消费组信息</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;cg1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> consumers
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>  <span class="token comment"># 该消费组还没有消费者</span>
   <span class="token number">5</span><span class="token punctuation">)</span> pending
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>  <span class="token comment"># 该消费组没有正在处理的消息</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;cg2&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> consumers  <span class="token comment"># 该消费组还没有消费者</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
   <span class="token number">5</span><span class="token punctuation">)</span> pending
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>  <span class="token comment"># 该消费组没有正在处理的消息</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>消费组消费</strong></li></ul><p>Stream提供了xreadgroup指令可以进行消费组的组内消费，需要提供消费组名称、消费者名称和起始消息ID。它同xread一样，也可以阻塞等待新消息。读到新消息后，对应的消息ID就会进入消费者的PEL(正在处理的消息)结构里，客户端处理完毕后使用xack指令通知服务器，本条消息已经处理完毕，该消息ID就会从PEL中移除。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># &gt;号表示从当前消费组的last_delivered_id后面开始读</span>
<span class="token comment"># 每当消费者读取一条消息，last_delivered_id变量就会前进</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xreadgroup GROUP cg1 c1 count <span class="token number">1</span> streams codehole <span class="token operator">&gt;</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;codehole&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851486781</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;laoqian&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;30&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xreadgroup GROUP cg1 c1 count <span class="token number">1</span> streams codehole <span class="token operator">&gt;</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;codehole&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851493405</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;yurui&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;29&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xreadgroup GROUP cg1 c1 count <span class="token number">2</span> streams codehole <span class="token operator">&gt;</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;codehole&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527851498956</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;xiaoqian&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527852774092</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;youming&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;60&quot;</span>
<span class="token comment"># 再继续读取，就没有新消息了</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xreadgroup GROUP cg1 c1 count <span class="token number">1</span> streams codehole <span class="token operator">&gt;</span>
<span class="token punctuation">(</span>nil<span class="token punctuation">)</span>
<span class="token comment"># 那就阻塞等待吧</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xreadgroup GROUP cg1 c1 block <span class="token number">0</span> count <span class="token number">1</span> streams codehole <span class="token operator">&gt;</span>
<span class="token comment"># 开启另一个窗口，往里塞消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xadd codehole * name lanying age <span class="token number">61</span>
<span class="token number">1527854062442</span>-0
<span class="token comment"># 回到前一个窗口，发现阻塞解除，收到新消息了</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xreadgroup GROUP cg1 c1 block <span class="token number">0</span> count <span class="token number">1</span> streams codehole <span class="token operator">&gt;</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;codehole&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1527854062442</span>-0
         <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
            <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;lanying&quot;</span>
            <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;age&quot;</span>
            <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;61&quot;</span>
<span class="token punctuation">(</span><span class="token number">36</span>.54s<span class="token punctuation">)</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xinfo <span class="token function">groups</span> codehole  <span class="token comment"># 观察消费组信息</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;cg1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> consumers
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>  <span class="token comment"># 一个消费者</span>
   <span class="token number">5</span><span class="token punctuation">)</span> pending
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>  <span class="token comment"># 共5条正在处理的信息还有没有ack</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;cg2&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> consumers
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>  <span class="token comment"># 消费组cg2没有任何变化，因为前面我们一直在操纵cg1</span>
   <span class="token number">5</span><span class="token punctuation">)</span> pending
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>
<span class="token comment"># 如果同一个消费组有多个消费者，我们可以通过xinfo consumers指令观察每个消费者的状态</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xinfo consumers codehole cg1  <span class="token comment"># 目前还有1个消费者</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;c1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> pending
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>  <span class="token comment"># 共5条待处理消息</span>
   <span class="token number">5</span><span class="token punctuation">)</span> idle
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">418715</span>  <span class="token comment"># 空闲了多长时间ms没有读取消息了</span>
<span class="token comment"># 接下来我们ack一条消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xack codehole cg1 <span class="token number">1527851486781</span>-0
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xinfo consumers codehole cg1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;c1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> pending
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>  <span class="token comment"># 变成了5条</span>
   <span class="token number">5</span><span class="token punctuation">)</span> idle
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">668504</span>
<span class="token comment"># 下面ack所有消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xack codehole cg1 <span class="token number">1527851493405</span>-0 <span class="token number">1527851498956</span>-0 <span class="token number">1527852774092</span>-0 <span class="token number">1527854062442</span>-0
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> xinfo consumers codehole cg1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> name
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;c1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> pending
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span>  <span class="token comment"># pel空了</span>
   <span class="token number">5</span><span class="token punctuation">)</span> idle
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">745505</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-信息监控" tabindex="-1"><a class="header-anchor" href="#_2-5-信息监控" aria-hidden="true">#</a> 2.5 信息监控</h3><p>Stream提供了XINFO来实现对服务器信息的监控，可以查询：</p><ul><li>查看队列信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> Xinfo stream mq
 <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;length&quot;</span>
 <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7</span>
 <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;radix-tree-keys&quot;</span>
 <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
 <span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;radix-tree-nodes&quot;</span>
 <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span>
 <span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">&quot;groups&quot;</span>
 <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
 <span class="token number">9</span><span class="token punctuation">)</span> <span class="token string">&quot;last-generated-id&quot;</span>
<span class="token number">10</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-9&quot;</span>
<span class="token number">11</span><span class="token punctuation">)</span> <span class="token string">&quot;first-entry&quot;</span>
<span class="token number">12</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-3&quot;</span>
    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;msg&quot;</span>
       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;4&quot;</span>
<span class="token number">13</span><span class="token punctuation">)</span> <span class="token string">&quot;last-entry&quot;</span>
<span class="token number">14</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-9&quot;</span>
    <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;msg&quot;</span>
       <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;10&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消费组信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> Xinfo <span class="token function">groups</span> mq
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;mqGroup&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;consumers&quot;</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
   <span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;pending&quot;</span>
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span>
   <span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">&quot;last-delivered-id&quot;</span>
   <span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-4&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消费者组成员信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XINFO CONSUMERS mq mqGroup
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;pending&quot;</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
   <span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;idle&quot;</span>
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">18949894</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerB&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;pending&quot;</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
   <span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;idle&quot;</span>
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3092719</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;name&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerC&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;pending&quot;</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
   <span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;idle&quot;</span>
   <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">23683256</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，消息队列的操作说明大体结束！</p><h2 id="_3-更深入理解" tabindex="-1"><a class="header-anchor" href="#_3-更深入理解" aria-hidden="true">#</a> 3. 更深入理解</h2><blockquote><p>我们结合MQ中常见问题，看Redis是如何解决的，来进一步理解Redis。</p></blockquote><h3 id="_3-1-stream用在什么样场景" tabindex="-1"><a class="header-anchor" href="#_3-1-stream用在什么样场景" aria-hidden="true">#</a> 3.1 Stream用在什么样场景</h3><p>可用作时通信等，大数据分析，异地数据备份等</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220623203113285.png" alt="image-20220623203113285" tabindex="0" loading="lazy"><figcaption>image-20220623203113285</figcaption></figure><p>客户端可以平滑扩展，提高处理能力</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220623203132557.png" alt="image-20220623203132557" tabindex="0" loading="lazy"><figcaption>image-20220623203132557</figcaption></figure><h3 id="_3-2-消息id的设计是否考虑了时间回拨的问题" tabindex="-1"><a class="header-anchor" href="#_3-2-消息id的设计是否考虑了时间回拨的问题" aria-hidden="true">#</a> 3.2 消息ID的设计是否考虑了时间回拨的问题？</h3><blockquote><p>在 <a href="">分布式算法 - ID算法</a>设计中, 一个常见的问题就是时间回拨问题，那么Redis的消息ID设计中是否考虑到这个问题呢？</p></blockquote><p>XADD生成的1553439850328-0，就是Redis生成的消息ID，由两部分组成:<strong>时间戳-序号</strong>。时间戳是毫秒级单位，是生成消息的Redis服务器时间，它是个64位整型（int64）。序号是在这个毫秒时间点内的消息序号，它也是个64位整型。</p><p>可以通过multi批处理，来验证序号的递增：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> MULTI
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XADD memberMessage * msg one
QUEUED
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XADD memberMessage * msg two
QUEUED
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XADD memberMessage * msg three
QUEUED
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XADD memberMessage * msg four
QUEUED
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XADD memberMessage * msg five
QUEUED
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> EXEC
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553441006884-0&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1553441006884-1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;1553441006884-2&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">&quot;1553441006884-3&quot;</span>
<span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">&quot;1553441006884-4&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于一个redis命令的执行很快，所以可以看到在同一时间戳内，是通过序号递增来表示消息的。</p><p>为了保证消息是有序的，因此Redis生成的ID是单调递增有序的。由于ID中包含时间戳部分，为了避免服务器时间错误而带来的问题（例如服务器时间延后了），Redis的每个Stream类型数据都维护一个latest_generated_id属性，用于记录最后一个消息的ID。<strong>若发现当前时间戳退后（小于latest_generated_id所记录的），则采用时间戳不变而序号递增的方案来作为新消息ID</strong>（这也是序号为什么使用int64的原因，保证有足够多的的序号），从而保证ID的单调递增性质。</p><p>强烈建议使用Redis的方案生成消息ID，因为这种时间戳+序号的单调递增的ID方案，几乎可以满足你全部的需求。但同时，记住ID是支持自定义的，别忘了！</p><h3 id="_3-3-消费者崩溃带来的会不会消息丢失问题" tabindex="-1"><a class="header-anchor" href="#_3-3-消费者崩溃带来的会不会消息丢失问题" aria-hidden="true">#</a> 3.3 消费者崩溃带来的会不会消息丢失问题?</h3><p>为了解决组内消息读取但处理期间消费者崩溃带来的消息丢失问题，STREAM 设计了 Pending 列表，用于记录读取但并未处理完毕的消息。命令XPENDIING 用来获消费组或消费内消费者的未处理完毕的消息。演示如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XPENDING mq mqGroup <span class="token comment"># mpGroup的Pending情况</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span> <span class="token comment"># 5个已读取但未处理的消息</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-0&quot;</span> <span class="token comment"># 起始ID</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-4&quot;</span> <span class="token comment"># 结束ID</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span> <span class="token comment"># 消费者A有3个</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerB&quot;</span> <span class="token comment"># 消费者B有1个</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerC&quot;</span> <span class="token comment"># 消费者C有1个</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>

<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XPENDING mq mqGroup - + <span class="token number">10</span> <span class="token comment"># 使用 start end count 选项可以获取详细信息</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-0&quot;</span> <span class="token comment"># 消息ID</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span> <span class="token comment"># 消费者</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1654355</span> <span class="token comment"># 从读取到现在经历了1654355ms，IDLE</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span> <span class="token comment"># 消息被读取了5次，delivery counter</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-1&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1654355</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>
<span class="token comment"># 共5个，余下3个省略 ...</span>

<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XPENDING mq mqGroup - + <span class="token number">10</span> consumerA <span class="token comment"># 在加上消费者参数，获取具体某个消费者的Pending列表</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-0&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1641083</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span>
<span class="token comment"># 共3个，余下2个省略 ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个Pending的消息有4个属性：</p><ul><li>消息ID</li><li>所属消费者</li><li>IDLE，已读取时长</li><li>delivery counter，消息被读取次数</li></ul><p>上面的结果我们可以看到，我们之前读取的消息，都被记录在Pending列表中，说明全部读到的消息都没有处理，仅仅是读取了。那如何表示消费者处理完毕了消息呢？使用命令 XACK 完成告知消息处理完成，演示如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XACK mq mqGroup <span class="token number">1553585533795</span>-0 <span class="token comment"># 通知消息处理结束，用消息ID标识</span>
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>

<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XPENDING mq mqGroup <span class="token comment"># 再次查看Pending列表</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span> <span class="token comment"># 已读取但未处理的消息已经变为4个</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-1&quot;</span>
<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-4&quot;</span>
<span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span> <span class="token comment"># 消费者A，还有2个消息处理</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerB&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerC&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有了这样一个Pending机制，就意味着在某个消费者读取消息但未处理后，消息是不会丢失的。等待消费者再次上线后，可以读取该Pending列表，就可以继续处理该消息了，保证消息的有序和不丢失。</p><h3 id="_3-4-消费者彻底宕机后如何转移给其它消费者处理" tabindex="-1"><a class="header-anchor" href="#_3-4-消费者彻底宕机后如何转移给其它消费者处理" aria-hidden="true">#</a> 3.4 消费者彻底宕机后如何转移给其它消费者处理？</h3><blockquote><p>还有一个问题，就是若某个消费者宕机之后，没有办法再上线了，那么就需要将该消费者Pending的消息，转义给其他的消费者处理，就是消息转移。</p></blockquote><p>消息转移的操作时将某个消息转移到自己的Pending列表中。使用语法XCLAIM来实现，需要设置组、转移的目标消费者和消息ID，同时需要提供IDLE（已被读取时长），只有超过这个时长，才能被转移。演示如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 当前属于消费者A的消息1553585533795-1，已经15907,787ms未处理了</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XPENDING mq mqGroup - + <span class="token number">10</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-1&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerA&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">15907787</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span>

<span class="token comment"># 转移超过3600s的消息1553585533795-1到消费者B的Pending列表</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XCLAIM mq mqGroup consumerB <span class="token number">3600000</span> <span class="token number">1553585533795</span>-1
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-1&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;msg&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;2&quot;</span>

<span class="token comment"># 消息1553585533795-1已经转移到消费者B的Pending中。</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XPENDING mq mqGroup - + <span class="token number">10</span>
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-1&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;consumerB&quot;</span>
   <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">84404</span> <span class="token comment"># 注意IDLE，被重置了</span>
   <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span> <span class="token comment"># 注意，读取次数也累加了1次</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码，完成了一次消息转移。转移除了要指定ID外，还需要指定IDLE，保证是长时间未处理的才被转移。被转移的消息的IDLE会被重置，用以保证不会被重复转移，以为可能会出现将过期的消息同时转移给多个消费者的并发操作，设置了IDLE，则可以避免后面的转移不会成功，因为IDLE不满足条件。例如下面的连续两条转移，第二条不会成功。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XCLAIM mq mqGroup consumerB <span class="token number">3600000</span> <span class="token number">1553585533795</span>-1
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XCLAIM mq mqGroup consumerC <span class="token number">3600000</span> <span class="token number">1553585533795</span>-1

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是消息转移。至此我们使用了一个Pending消息的ID，所属消费者和IDLE的属性，还有一个属性就是消息被读取次数，delivery counter，该属性的作用由于统计消息被读取的次数，包括被转移也算。这个属性主要用在判定是否为错误数据上。</p><h3 id="_3-5-坏消息问题-dead-letter-死信问题" tabindex="-1"><a class="header-anchor" href="#_3-5-坏消息问题-dead-letter-死信问题" aria-hidden="true">#</a> 3.5 坏消息问题，Dead Letter，死信问题</h3><p>正如上面所说，如果某个消息，不能被消费者处理，也就是不能被XACK，这是要长时间处于Pending列表中，即使被反复的转移给各个消费者也是如此。此时该消息的delivery counter就会累加（上一节的例子可以看到），当累加到某个我们预设的临界值时，我们就认为是坏消息（也叫死信，DeadLetter，无法投递的消息），由于有了判定条件，我们将坏消息处理掉即可，删除即可。删除一个消息，使用XDEL语法，演示如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除队列中的消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XDEL mq <span class="token number">1553585533795</span>-1
<span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span>
<span class="token comment"># 查看队列中再无此消息</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> XRANGE mq - +
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-0&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;msg&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;1&quot;</span>
<span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;1553585533795-2&quot;</span>
   <span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;msg&quot;</span>
      <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">&quot;3&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意本例中，并没有删除Pending中的消息因此你查看Pending，消息还会在。可以执行XACK标识其处理完毕！</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,86),u={href:"https://pdai.tech/md/db/nosql-redis/db-redis-data-type-stream.html",target:"_blank",rel:"noopener noreferrer"},r=n("strong",null,"Redis入门 - 数据类型：Stream详解",-1);function k(m,d){const s=c("ExternalLinkIcon");return e(),p("div",null,[i,n("p",null,[n("a",u,[r,t(s)])])])}const v=a(l,[["render",k],["__file","db-redis-data-type-stream.html.vue"]]);export{v as default};
