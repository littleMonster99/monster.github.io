const e=JSON.parse('{"key":"v-103fc216","path":"/java/thread/java-thread-y-threadpool.html","title":"线程池","lang":"zh-CN","frontmatter":{"description":"1. 为什么要使用线程池 降低资源消耗：通过重复利用已创建的线程降低线程创建和销毁造成的消耗。; 提高响应速度：当任务到达时，任务可以不需要的等到线程创建就能立即执行。; 提高线程的可管理行性：线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。; 2. 实现Runnable接口和Cal...","head":[["meta",{"property":"og:url","content":"http://www.mr-monster.site/java/thread/java-thread-y-threadpool.html"}],["meta",{"property":"og:site_name","content":"Java学习笔记"}],["meta",{"property":"og:title","content":"线程池"}],["meta",{"property":"og:description","content":"1. 为什么要使用线程池 降低资源消耗：通过重复利用已创建的线程降低线程创建和销毁造成的消耗。; 提高响应速度：当任务到达时，任务可以不需要的等到线程创建就能立即执行。; 提高线程的可管理行性：线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。; 2. 实现Runnable接口和Cal..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-03-30T07:30:48.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2023-03-30T07:30:48.000Z"}]]},"headers":[{"level":2,"title":"1. 为什么要使用线程池","slug":"_1-为什么要使用线程池","link":"#_1-为什么要使用线程池","children":[]},{"level":2,"title":"2. 实现Runnable接口和Callable接口的区别","slug":"_2-实现runnable接口和callable接口的区别","link":"#_2-实现runnable接口和callable接口的区别","children":[]},{"level":2,"title":"3. 执行execute()方法和submit()方法的区别是什么呢？","slug":"_3-执行execute-方法和submit-方法的区别是什么呢","link":"#_3-执行execute-方法和submit-方法的区别是什么呢","children":[]},{"level":2,"title":"4. 如何创建线程池","slug":"_4-如何创建线程池","link":"#_4-如何创建线程池","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":1680161448000,"updatedTime":1680161448000,"contributors":[{"name":"fanweihua","email":"littlemonster163@163.com","commits":1}]},"readingTime":{"minutes":3.02,"words":907},"filePathRelative":"java/thread/java-thread-y-threadpool.md","localizedDate":"2023年3月30日","autoDesc":true}');export{e as data};
