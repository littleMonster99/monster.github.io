import{_ as a,W as e,X as t,Y as n,Z as p,$ as o,a0 as l,D as c}from"./framework-f64bc974.js";const i={},r=l(`<h1 id="代码生成功能-实现思路" tabindex="-1"><a class="header-anchor" href="#代码生成功能-实现思路" aria-hidden="true">#</a> 代码生成功能&amp;实现思路</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>大部分项目里其实有很多代码都是重复的，几乎每个基础模块的代码<strong>都有增删改查的功能</strong>，而这些功能都是大同小异，如果这些功能都要自己去写，将会大大浪费我们的精力和降低。所以这种重复性的代码可以使用代码生成。</p><h2 id="_2-代码生成设计思路" tabindex="-1"><a class="header-anchor" href="#_2-代码生成设计思路" aria-hidden="true">#</a> 2. 代码生成设计思路</h2><h3 id="_2-1-项目组成部分" tabindex="-1"><a class="header-anchor" href="#_2-1-项目组成部分" aria-hidden="true">#</a> 2.1 项目组成部分</h3><p>我们java 项目的构成主要如下</p><ul><li><p>后端代码</p><ul><li>controller</li><li>service <ul><li>serviceImpl</li></ul></li><li>mapper</li><li>Mapper.xml(mybatis)</li><li>domain</li></ul></li><li><p>前端</p><ul><li>对应的vue增删改查</li><li>vue 接口的api</li></ul></li><li><p>sql代码</p><p>如果项目中设计到后台配置菜单，那么也需要将菜单sql生成出来</p></li></ul><h3 id="_2-2-生成的目标" tabindex="-1"><a class="header-anchor" href="#_2-2-生成的目标" aria-hidden="true">#</a> 2.2 生成的目标</h3><ul><li>希望生成项目模块中所有代码。 <ul><li>如果只引入 <code>mybatis generator</code> 这类工具，只能解决mapper 层的问题。而且sql 非常不清晰，完全无法复用</li></ul></li><li>生成的代码可以自定义配置，而不是一成不变的</li><li>生成的代码扩展性要强，新增模板方便 <ul><li>增加批量删除功能</li><li>增加批量新增和修改mapper</li></ul></li></ul><h3 id="_2-3-实现思路" tabindex="-1"><a class="header-anchor" href="#_2-3-实现思路" aria-hidden="true">#</a> 2.3 实现思路</h3><ul><li>使用模板引擎根据我们的项目结构生成前后端模板代码</li></ul><h2 id="_3-数据库设计" tabindex="-1"><a class="header-anchor" href="#_3-数据库设计" aria-hidden="true">#</a> 3. 数据库设计</h2><h3 id="_3-1-代码生成业务表" tabindex="-1"><a class="header-anchor" href="#_3-1-代码生成业务表" aria-hidden="true">#</a> 3.1 代码生成业务表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- 18、代码生成业务表</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> gen_table<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> gen_table <span class="token punctuation">(</span>
  table_id          <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>      <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span>    <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
  table_name        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;表名称&#39;</span><span class="token punctuation">,</span>
  table_comment     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;表描述&#39;</span><span class="token punctuation">,</span>
  sub_table_name    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token boolean">null</span>               <span class="token keyword">comment</span> <span class="token string">&#39;关联子表的表名&#39;</span><span class="token punctuation">,</span>
  sub_table_fk_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token boolean">null</span>               <span class="token keyword">comment</span> <span class="token string">&#39;子表关联的外键名&#39;</span><span class="token punctuation">,</span>
  class_name        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;实体类名称&#39;</span><span class="token punctuation">,</span>
  tpl_category      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;crud&#39;</span>             <span class="token keyword">comment</span> <span class="token string">&#39;使用的模板（crud单表操作 tree树表操作）&#39;</span><span class="token punctuation">,</span>
  package_name      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;生成包路径&#39;</span><span class="token punctuation">,</span>
  module_name       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;生成模块名&#39;</span><span class="token punctuation">,</span>
  business_name     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;生成业务名&#39;</span><span class="token punctuation">,</span>
  function_name     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;生成功能名&#39;</span><span class="token punctuation">,</span>
  function_author   <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;生成功能作者&#39;</span><span class="token punctuation">,</span>
  gen_type          <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>         <span class="token keyword">default</span> <span class="token string">&#39;0&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;生成代码方式（0zip压缩包 1自定义路径）&#39;</span><span class="token punctuation">,</span>
  gen_path          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;/&#39;</span>                <span class="token keyword">comment</span> <span class="token string">&#39;生成路径（不填默认项目路径）&#39;</span><span class="token punctuation">,</span>
  options           <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>                              <span class="token keyword">comment</span> <span class="token string">&#39;其它生成选项&#39;</span><span class="token punctuation">,</span>
  create_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;创建者&#39;</span><span class="token punctuation">,</span>
  create_time 	    <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
  update_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;更新者&#39;</span><span class="token punctuation">,</span>
  update_time       <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
  remark            <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token boolean">null</span>               <span class="token keyword">comment</span> <span class="token string">&#39;备注&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>table_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">comment</span> <span class="token operator">=</span> <span class="token string">&#39;代码生成业务表&#39;</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-代码生成业务表字段" tabindex="-1"><a class="header-anchor" href="#_3-2-代码生成业务表字段" aria-hidden="true">#</a> 3.2 代码生成业务表字段</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token comment">-- ----------------------------</span>
<span class="token comment">-- 19、代码生成业务表字段</span>
<span class="token comment">-- ----------------------------</span>
<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> gen_table_column<span class="token punctuation">;</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> gen_table_column <span class="token punctuation">(</span>
  column_id         <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>      <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span>    <span class="token keyword">comment</span> <span class="token string">&#39;编号&#39;</span><span class="token punctuation">,</span>
  table_id          <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>                                <span class="token keyword">comment</span> <span class="token string">&#39;归属表编号&#39;</span><span class="token punctuation">,</span>
  column_name       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;列名称&#39;</span><span class="token punctuation">,</span>
  column_comment    <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;列描述&#39;</span><span class="token punctuation">,</span>
  column_type       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;列类型&#39;</span><span class="token punctuation">,</span>
  java_type         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;JAVA类型&#39;</span><span class="token punctuation">,</span>
  java_field        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;JAVA字段名&#39;</span><span class="token punctuation">,</span>
  is_pk             <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否主键（1是）&#39;</span><span class="token punctuation">,</span>
  is_increment      <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否自增（1是）&#39;</span><span class="token punctuation">,</span>
  is_required       <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否必填（1是）&#39;</span><span class="token punctuation">,</span>
  is_insert         <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否为插入字段（1是）&#39;</span><span class="token punctuation">,</span>
  is_edit           <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否编辑字段（1是）&#39;</span><span class="token punctuation">,</span>
  is_list           <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否列表字段（1是）&#39;</span><span class="token punctuation">,</span>
  is_query          <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                    <span class="token keyword">comment</span> <span class="token string">&#39;是否查询字段（1是）&#39;</span><span class="token punctuation">,</span>
  query_type        <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;EQ&#39;</span>               <span class="token keyword">comment</span> <span class="token string">&#39;查询方式（等于、不等于、大于、小于、范围）&#39;</span><span class="token punctuation">,</span>
  html_type         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>                               <span class="token keyword">comment</span> <span class="token string">&#39;显示类型（文本框、文本域、下拉框、复选框、单选框、日期控件）&#39;</span><span class="token punctuation">,</span>
  dict_type         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;字典类型&#39;</span><span class="token punctuation">,</span>
  sort              <span class="token keyword">int</span>                                        <span class="token keyword">comment</span> <span class="token string">&#39;排序&#39;</span><span class="token punctuation">,</span>
  create_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;创建者&#39;</span><span class="token punctuation">,</span>
  create_time 	    <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
  update_by         <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span>                 <span class="token keyword">comment</span> <span class="token string">&#39;更新者&#39;</span><span class="token punctuation">,</span>
  update_time       <span class="token keyword">datetime</span>                                   <span class="token keyword">comment</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>column_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">comment</span> <span class="token operator">=</span> <span class="token string">&#39;代码生成业务表字段&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-代码实现注意事项" tabindex="-1"><a class="header-anchor" href="#_4-代码实现注意事项" aria-hidden="true">#</a> 4. 代码实现注意事项</h2><h3 id="_4-1导入表结构信息" tabindex="-1"><a class="header-anchor" href="#_4-1导入表结构信息" aria-hidden="true">#</a> 4.1导入表结构信息</h3><p>根据选中的表名，生成表结构</p><ol><li><p>查询表结构（information_schema）信息（包括表英文名和中文注释）</p></li><li><p>查询表字段信息</p></li><li><p>将数据库表字段类型 转为 java字段类型</p></li><li><p>插入表结构信息</p></li><li><p>插入表字段信息</p></li></ol><h4 id="_4-1-1-controller-层" tabindex="-1"><a class="header-anchor" href="#_4-1-1-controller-层" aria-hidden="true">#</a> 4.1.1 controller 层</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 导入表结构（保存）
 */</span>
<span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;@ss.hasPermi(&#39;tool:gen:import&#39;)&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Log</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">&quot;代码生成&quot;</span><span class="token punctuation">,</span> businessType <span class="token operator">=</span> <span class="token class-name">BusinessType</span><span class="token punctuation">.</span><span class="token constant">IMPORT</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/importTable&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">AjaxResult</span> <span class="token function">importTableSave</span><span class="token punctuation">(</span><span class="token class-name">String</span> tables<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStrArray</span><span class="token punctuation">(</span>tables<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询表信息</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTable</span><span class="token punctuation">&gt;</span></span> tableList <span class="token operator">=</span> genTableService<span class="token punctuation">.</span><span class="token function">selectDbTableListByNames</span><span class="token punctuation">(</span>tableNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
    genTableService<span class="token punctuation">.</span><span class="token function">importGenTable</span><span class="token punctuation">(</span>tableList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">AjaxResult</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-service" tabindex="-1"><a class="header-anchor" href="#_4-1-2-service" aria-hidden="true">#</a> 4.1.2 service</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 查询据库列表
 * 
 * <span class="token keyword">@param</span> <span class="token parameter">tableNames</span> 表名称组
 * <span class="token keyword">@return</span> 数据库表集合
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTable</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectDbTableListByNames</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> genTableMapper<span class="token punctuation">.</span><span class="token function">selectDbTableListByNames</span><span class="token punctuation">(</span>tableNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


    <span class="token doc-comment comment">/**
     * 导入表结构
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">tableList</span> 导入表列表
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importGenTable</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTable</span><span class="token punctuation">&gt;</span></span> tableList<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">String</span> operName <span class="token operator">=</span> <span class="token class-name">SecurityUtils</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GenTable</span> table <span class="token operator">:</span> tableList<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name">String</span> tableName <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">GenUtils</span><span class="token punctuation">.</span><span class="token function">initTable</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> operName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> row <span class="token operator">=</span> genTableMapper<span class="token punctuation">.</span><span class="token function">insertGenTable</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">// 保存列信息</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTableColumn</span><span class="token punctuation">&gt;</span></span> genTableColumns <span class="token operator">=</span> genTableColumnMapper<span class="token punctuation">.</span><span class="token function">selectDbTableColumnsByName</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GenTableColumn</span> column <span class="token operator">:</span> genTableColumns<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token class-name">GenUtils</span><span class="token punctuation">.</span><span class="token function">initColumnField</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        genTableColumnMapper<span class="token punctuation">.</span><span class="token function">insertGenTableColumn</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CustomException</span><span class="token punctuation">(</span><span class="token string">&quot;导入失败：&quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-3-mapper" tabindex="-1"><a class="header-anchor" href="#_4-1-3-mapper" aria-hidden="true">#</a> 4.1.3 mapper</h4><h5 id="_4-1-3-1-查询表结构信息" tabindex="-1"><a class="header-anchor" href="#_4-1-3-1-查询表结构信息" aria-hidden="true">#</a> 4.1.3.1 查询表结构信息</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;selectDbTableListByNames&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;GenTableResult&quot;</span><span class="token operator">&gt;</span>
		<span class="token keyword">select</span> table_name<span class="token punctuation">,</span> table_comment<span class="token punctuation">,</span> create_time<span class="token punctuation">,</span> update_time <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
		<span class="token keyword">where</span> table_name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">&#39;qrtz_%&#39;</span> <span class="token operator">and</span> table_name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">&#39;gen_%&#39;</span> <span class="token operator">and</span> table_schema <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token operator">and</span> table_name <span class="token operator">in</span>
	    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;array&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span>
 			<span class="token comment">#{name}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span> 
	<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010125640172.png" alt="image-20211010125640172" tabindex="0" loading="lazy"><figcaption>image-20211010125640172</figcaption></figure><h5 id="_4-1-3-2-查询列信息" tabindex="-1"><a class="header-anchor" href="#_4-1-3-2-查询列信息" aria-hidden="true">#</a> 4.1.3.2 查询列信息</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>   <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;selectDbTableColumnsByName&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;String&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;GenTableColumnResult&quot;</span><span class="token operator">&gt;</span>
		<span class="token keyword">select</span> column_name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>is_nullable <span class="token operator">=</span> <span class="token string">&#39;no&#39;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token punctuation">[</span>CDATA<span class="token punctuation">[</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> column_key <span class="token operator">!=</span> <span class="token string">&#39;PRI&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">else</span> <span class="token boolean">null</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> is_required<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> column_key <span class="token operator">=</span> <span class="token string">&#39;PRI&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">else</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> is_pk<span class="token punctuation">,</span> ordinal_position <span class="token keyword">as</span> sort<span class="token punctuation">,</span> column_comment<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> extra <span class="token operator">=</span> <span class="token string">&#39;auto_increment&#39;</span> <span class="token keyword">then</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">else</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> is_increment<span class="token punctuation">,</span> column_type
		<span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">and</span> table_name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token comment">#{tableName})</span>
		<span class="token keyword">order</span> <span class="token keyword">by</span> ordinal_position
	<span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010130749447.png" alt="image-20211010130749447" tabindex="0" loading="lazy"><figcaption>image-20211010130749447</figcaption></figure><h5 id="_4-1-3-3-插入表结构信息" tabindex="-1"><a class="header-anchor" href="#_4-1-3-3-插入表结构信息" aria-hidden="true">#</a> 4.1.3.3 插入表结构信息</h5><p>表信息中不单单只有表信息，还包括了表对应的生成信息。如生成的模板类型，包路径，生成代码方式等</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;insertGenTable&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;GenTable&quot;</span> useGeneratedKeys<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> keyProperty<span class="token operator">=</span><span class="token string">&quot;tableId&quot;</span><span class="token operator">&gt;</span>
       <span class="token keyword">insert</span> <span class="token keyword">into</span> gen_table <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableName != null&quot;</span><span class="token operator">&gt;</span>table_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableComment != null and tableComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>table_comment<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;className != null and className != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>class_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tplCategory != null and tplCategory != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>tpl_category<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;packageName != null and packageName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>package_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;moduleName != null and moduleName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>module_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;businessName != null and businessName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>business_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionName != null and functionName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>function_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionAuthor != null and functionAuthor != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>function_author<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genType != null and genType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>gen_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genPath != null and genPath != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>gen_path<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;remark != null and remark != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>remark<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
         <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>create_by<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      create_time
        <span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableName != null&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tableName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableComment != null and tableComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tableComment},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;className != null and className != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{className},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tplCategory != null and tplCategory != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tplCategory},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;packageName != null and packageName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{packageName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;moduleName != null and moduleName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{moduleName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;businessName != null and businessName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{businessName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionName != null and functionName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{functionName},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;functionAuthor != null and functionAuthor != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{functionAuthor},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genType != null and genType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{genType},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;genPath != null and genPath != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{genPath},&lt;/if&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;remark != null and remark != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{remark},&lt;/if&gt;</span>
         <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{createBy},&lt;/if&gt;</span>
      sysdate<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010172355888.png" alt="image-20211010172355888" tabindex="0" loading="lazy"><figcaption>image-20211010172355888</figcaption></figure><h5 id="_4-1-3-4-插入表字段信息" tabindex="-1"><a class="header-anchor" href="#_4-1-3-4-插入表字段信息" aria-hidden="true">#</a> 4.1.3.4 插入表字段信息</h5><p>表字段信息中不单单有表字段信息，还包括生成字段在前端展示兴泰，如是否需要展示，查询方式，是否使用字典等</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;insertGenTableColumn&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;GenTableColumn&quot;</span> useGeneratedKeys<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> keyProperty<span class="token operator">=</span><span class="token string">&quot;columnId&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">insert</span> <span class="token keyword">into</span> gen_table_column <span class="token punctuation">(</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableId != null and tableId != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>table_id<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnName != null and columnName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>column_name<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnComment != null and columnComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>column_comment<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnType != null and columnType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>column_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaType != null and javaType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>java_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaField != null  and javaField != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>java_field<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isPk != null and isPk != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_pk<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isIncrement != null and isIncrement != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_increment<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isRequired != null and isRequired != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_required<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isInsert != null and isInsert != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_insert<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isEdit != null and isEdit != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_edit<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isList != null and isList != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_list<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isQuery != null and isQuery != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>is_query<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;queryType != null and queryType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>query_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;htmlType != null and htmlType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>html_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;dictType != null and dictType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>dict_type<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;sort != null&quot;</span><span class="token operator">&gt;</span>sort<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span>create_by<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
			create_time
         <span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;tableId != null and tableId != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{tableId},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnName != null and columnName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{columnName},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnComment != null and columnComment != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{columnComment},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;columnType != null and columnType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{columnType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaType != null and javaType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{javaType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;javaField != null and javaField != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{javaField},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isPk != null and isPk != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isPk},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isIncrement != null and isIncrement != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isIncrement},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isRequired != null and isRequired != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isRequired},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isInsert != null and isInsert != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isInsert},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isEdit != null and isEdit != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isEdit},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isList != null and isList != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isList},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;isQuery != null and isQuery != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{isQuery},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;queryType != null and queryType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{queryType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;htmlType != null and htmlType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{htmlType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;dictType != null and dictType != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{dictType},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;sort != null&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{sort},&lt;/if&gt;</span>
			<span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;createBy != null and createBy != &#39;&#39;&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{createBy},&lt;/if&gt;</span>
			sysdate<span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">)</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010172448197.png" alt="image-20211010172448197" tabindex="0" loading="lazy"><figcaption>image-20211010172448197</figcaption></figure><h5 id="_4-1-3-4-resultmap" tabindex="-1"><a class="header-anchor" href="#_4-1-3-4-resultmap" aria-hidden="true">#</a> 4.1.3.4 resultMap</h5><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span>resultMap <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;GenTable&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;GenTableResult&quot;</span><span class="token operator">&gt;</span>
	    <span class="token operator">&lt;</span>id     property<span class="token operator">=</span><span class="token string">&quot;tableId&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;table_id&quot;</span>          <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;tableName&quot;</span>      <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;table_name&quot;</span>        <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;tableComment&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;table_comment&quot;</span>     <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;subTableName&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;sub_table_name&quot;</span>    <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;subTableFkName&quot;</span> <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;sub_table_fk_name&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;className&quot;</span>      <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;class_name&quot;</span>        <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;tplCategory&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;tpl_category&quot;</span>      <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;packageName&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;package_name&quot;</span>      <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;moduleName&quot;</span>     <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;module_name&quot;</span>       <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;businessName&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;business_name&quot;</span>     <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;functionName&quot;</span>   <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;function_name&quot;</span>     <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;functionAuthor&quot;</span> <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;function_author&quot;</span>   <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;genType&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;gen_type&quot;</span>          <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;genPath&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;gen_path&quot;</span>          <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;options&quot;</span>        <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;options&quot;</span>           <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;createBy&quot;</span>       <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;create_by&quot;</span>         <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;createTime&quot;</span>     <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;create_time&quot;</span>       <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;updateBy&quot;</span>       <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;update_by&quot;</span>         <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;updateTime&quot;</span>     <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;update_time&quot;</span>       <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;remark&quot;</span>         <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;remark&quot;</span>            <span class="token operator">/</span><span class="token operator">&gt;</span>
		<span class="token operator">&lt;</span>collection  property<span class="token operator">=</span><span class="token string">&quot;columns&quot;</span>  javaType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span>  resultMap<span class="token operator">=</span><span class="token string">&quot;GenTableColumnResult&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-5-domain" tabindex="-1"><a class="header-anchor" href="#_4-1-5-domain" aria-hidden="true">#</a> 4.1.5 domain</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 业务表 gen_table
 * 
 * <span class="token keyword">@author</span> ygn
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenTable</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 编号 */</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> tableId<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 表名称 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;表名称不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tableName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 表描述 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;表描述不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tableComment<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 关联父表的表名 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> subTableName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 本表关联父表的外键名 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> subTableFkName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 实体类名称(首字母大写) */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;实体类名称不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> className<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 使用的模板（crud单表操作 tree树表操作 sub主子表操作） */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tplCategory<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成包路径 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;生成包路径不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> packageName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成模块名 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;生成模块名不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> moduleName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成业务名 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;生成业务名不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> businessName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成功能名 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;生成功能名不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> functionName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成作者 */</span>
    <span class="token annotation punctuation">@NotBlank</span><span class="token punctuation">(</span>message <span class="token operator">=</span> <span class="token string">&quot;作者不能为空&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> functionAuthor<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成代码方式（0zip压缩包 1自定义路径） */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> genType<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 生成路径（不填默认项目路径） */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> genPath<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 主键信息 */</span>
    <span class="token keyword">private</span> <span class="token class-name">GenTableColumn</span> pkColumn<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 子表信息 */</span>
    <span class="token keyword">private</span> <span class="token class-name">GenTable</span> subTable<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 表列信息 */</span>
    <span class="token annotation punctuation">@Valid</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GenTableColumn</span><span class="token punctuation">&gt;</span></span> columns<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 其它生成选项 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> options<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 树编码字段 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> treeCode<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 树父编码字段 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> treeParentCode<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 树名称字段 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> treeName<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 上级菜单ID字段 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> parentMenuId<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/** 上级菜单名称字段 */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> parentMenuName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-6-页面效果" tabindex="-1"><a class="header-anchor" href="#_4-1-6-页面效果" aria-hidden="true">#</a> 4.1.6 页面效果</h4><h5 id="_4-1-6-1-导入表" tabindex="-1"><a class="header-anchor" href="#_4-1-6-1-导入表" aria-hidden="true">#</a> 4.1.6.1 导入表</h5><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010172655487.png" alt="image-20211010172655487" tabindex="0" loading="lazy"><figcaption>image-20211010172655487</figcaption></figure><h5 id="_4-1-6-2-导入后表基本信息" tabindex="-1"><a class="header-anchor" href="#_4-1-6-2-导入后表基本信息" aria-hidden="true">#</a> 4.1.6.2 导入后表基本信息</h5><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010173151657.png" alt="image-20211010173151657" tabindex="0" loading="lazy"><figcaption>image-20211010173151657</figcaption></figure><h5 id="_4-1-6-3-导入后表字段信息" tabindex="-1"><a class="header-anchor" href="#_4-1-6-3-导入后表字段信息" aria-hidden="true">#</a> 4.1.6.3 导入后表字段信息</h5><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010173235650.png" alt="image-20211010173235650" tabindex="0" loading="lazy"><figcaption>image-20211010173235650</figcaption></figure><h5 id="_4-1-6-4-导入后生成信息" tabindex="-1"><a class="header-anchor" href="#_4-1-6-4-导入后生成信息" aria-hidden="true">#</a> 4.1.6.4 导入后生成信息</h5><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/image-20211010173250906.png" alt="image-20211010173250906" tabindex="0" loading="lazy"><figcaption>image-20211010173250906</figcaption></figure><h4 id="_4-1-5-生成工具类genutils" tabindex="-1"><a class="header-anchor" href="#_4-1-5-生成工具类genutils" aria-hidden="true">#</a> 4.1.5 生成工具类GenUtils</h4><p>主要功能</p><ul><li>initTable： 初始化表结构信息 <ul><li>表名</li><li>包名</li><li>模块名</li></ul></li><li>initColumnField ： 初始化列名信息 <ul><li>需要将数据库类型转为java类型</li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token comment">/**
 * 代码生成器 工具类
 * 
 * @author ygn
 */</span>
<span class="token keyword">public</span> class GenUtils
{
    <span class="token comment">/**
     * 初始化表信息
     */</span>
    <span class="token keyword">public</span> static void initTable<span class="token punctuation">(</span>GenTable genTable<span class="token punctuation">,</span> String operName<span class="token punctuation">)</span>
    {
        genTable<span class="token punctuation">.</span>setClassName<span class="token punctuation">(</span>convertClassName<span class="token punctuation">(</span>genTable<span class="token punctuation">.</span>getTableName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setPackageName<span class="token punctuation">(</span>GenConfig<span class="token punctuation">.</span>getPackageName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setModuleName<span class="token punctuation">(</span>getModuleName<span class="token punctuation">(</span>GenConfig<span class="token punctuation">.</span>getPackageName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setBusinessName<span class="token punctuation">(</span>getBusinessName<span class="token punctuation">(</span>genTable<span class="token punctuation">.</span>getTableName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setFunctionName<span class="token punctuation">(</span>replaceText<span class="token punctuation">(</span>genTable<span class="token punctuation">.</span>getTableComment<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setFunctionAuthor<span class="token punctuation">(</span>GenConfig<span class="token punctuation">.</span>getAuthor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        genTable<span class="token punctuation">.</span>setCreateBy<span class="token punctuation">(</span>operName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 初始化列属性字段
     */</span>
    <span class="token keyword">public</span> static void initColumnField<span class="token punctuation">(</span>GenTableColumn <span class="token keyword">column</span><span class="token punctuation">,</span> GenTable <span class="token keyword">table</span><span class="token punctuation">)</span>
    {
        String dataType <span class="token operator">=</span> getDbType<span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">.</span>getColumnType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String columnName <span class="token operator">=</span> <span class="token keyword">column</span><span class="token punctuation">.</span>getColumnName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setTableId<span class="token punctuation">(</span><span class="token keyword">table</span><span class="token punctuation">.</span>getTableId<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setCreateBy<span class="token punctuation">(</span><span class="token keyword">table</span><span class="token punctuation">.</span>getCreateBy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置java字段名</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaField<span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>toCamelCase<span class="token punctuation">(</span>columnName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置默认类型</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_STRING<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_STR<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span> <span class="token operator">||</span> arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_TEXT<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token comment">// 字符串长度超过500设置为文本域</span>
            <span class="token keyword">Integer</span> columnLength <span class="token operator">=</span> getColumnLength<span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">.</span>getColumnType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String htmlType <span class="token operator">=</span> columnLength <span class="token operator">&gt;=</span> <span class="token number">500</span> <span class="token operator">||</span> arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_TEXT<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span> ? GenConstants<span class="token punctuation">.</span>HTML_TEXTAREA : GenConstants<span class="token punctuation">.</span>HTML_INPUT<span class="token punctuation">;</span>
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>htmlType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_TIME<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_DATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_DATETIME<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNTYPE_NUMBER<span class="token punctuation">,</span> dataType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 如果是浮点型 统一用BigDecimal</span>
            String<span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>split<span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>substringBetween<span class="token punctuation">(</span><span class="token keyword">column</span><span class="token punctuation">.</span>getColumnType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">=</span><span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">Integer</span><span class="token punctuation">.</span>parseInt<span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            {
                <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_BIGDECIMAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
            <span class="token comment">// 如果是整形</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">=</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">Integer</span><span class="token punctuation">.</span>parseInt<span class="token punctuation">(</span>str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span>
            {
                <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_INTEGER<span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
            <span class="token comment">// 长整形</span>
            <span class="token keyword">else</span>
            {
                <span class="token keyword">column</span><span class="token punctuation">.</span>setJavaType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>TYPE_LONG<span class="token punctuation">)</span><span class="token punctuation">;</span>
            }
        }

        <span class="token comment">// 插入字段（默认所有字段都需要插入）</span>
        <span class="token keyword">column</span><span class="token punctuation">.</span>setIsInsert<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 编辑字段</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNNAME_NOT_EDIT<span class="token punctuation">,</span> columnName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">column</span><span class="token punctuation">.</span>isPk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setIsEdit<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 列表字段</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNNAME_NOT_LIST<span class="token punctuation">,</span> columnName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">column</span><span class="token punctuation">.</span>isPk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setIsList<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 查询字段</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arraysContains<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>COLUMNNAME_NOT_QUERY<span class="token punctuation">,</span> columnName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">column</span><span class="token punctuation">.</span>isPk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setIsQuery<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span><span class="token keyword">REQUIRE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }

        <span class="token comment">// 查询字段类型</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setQueryType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>QUERY_LIKE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 状态字段设置单选框</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_RADIO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 类型&amp;性别字段设置下拉框</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;sex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_SELECT<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 图片字段设置图片上传控件</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;image&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_IMAGE_UPLOAD<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 文件字段设置文件上传控件</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_FILE_UPLOAD<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token comment">// 内容字段设置富文本控件</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>endsWithIgnoreCase<span class="token punctuation">(</span>columnName<span class="token punctuation">,</span> <span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">column</span><span class="token punctuation">.</span>setHtmlType<span class="token punctuation">(</span>GenConstants<span class="token punctuation">.</span>HTML_EDITOR<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
    }

    <span class="token comment">/**
     * 校验数组是否包含指定值
     * 
     * @param arr 数组
     * @param targetValue 值
     * @return 是否包含
     */</span>
    <span class="token keyword">public</span> static <span class="token keyword">boolean</span> arraysContains<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> String targetValue<span class="token punctuation">)</span>
    {
        <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span>asList<span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">contains</span><span class="token punctuation">(</span>targetValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 获取模块名
     * 
     * @param packageName 包名
     * @return 模块名
     */</span>
    <span class="token keyword">public</span> static String getModuleName<span class="token punctuation">(</span>String packageName<span class="token punctuation">)</span>
    {
        <span class="token keyword">int</span> lastIndex <span class="token operator">=</span> packageName<span class="token punctuation">.</span>lastIndexOf<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nameLength <span class="token operator">=</span> packageName<span class="token punctuation">.</span>length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String moduleName <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>substring<span class="token punctuation">(</span>packageName<span class="token punctuation">,</span> lastIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nameLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> moduleName<span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 获取业务名
     * 
     * @param tableName 表名
     * @return 业务名
     */</span>
    <span class="token keyword">public</span> static String getBusinessName<span class="token punctuation">(</span>String tableName<span class="token punctuation">)</span>
    {
        <span class="token keyword">int</span> lastIndex <span class="token operator">=</span> tableName<span class="token punctuation">.</span>lastIndexOf<span class="token punctuation">(</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nameLength <span class="token operator">=</span> tableName<span class="token punctuation">.</span>length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String businessName <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>substring<span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> lastIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nameLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> businessName<span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 表名转换成Java类名
     * 
     * @param tableName 表名称
     * @return 类名
     */</span>
    <span class="token keyword">public</span> static String convertClassName<span class="token punctuation">(</span>String tableName<span class="token punctuation">)</span>
    {
        <span class="token keyword">boolean</span> autoRemovePre <span class="token operator">=</span> GenConfig<span class="token punctuation">.</span>getAutoRemovePre<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        String tablePrefix <span class="token operator">=</span> GenConfig<span class="token punctuation">.</span>getTablePrefix<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>autoRemovePre <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span>isNotEmpty<span class="token punctuation">(</span>tablePrefix<span class="token punctuation">)</span><span class="token punctuation">)</span>
        {
            String<span class="token punctuation">[</span><span class="token punctuation">]</span> searchList <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>split<span class="token punctuation">(</span>tablePrefix<span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tableName <span class="token operator">=</span> replaceFirst<span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> searchList<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span>convertToCamelCase<span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 批量替换前缀
     * 
     * @param replacementm 替换值
     * @param searchList 替换列表
     * @return
     */</span>
    <span class="token keyword">public</span> static String replaceFirst<span class="token punctuation">(</span>String replacementm<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span> searchList<span class="token punctuation">)</span>
    {
        String <span class="token keyword">text</span> <span class="token operator">=</span> replacementm<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>String searchString : searchList<span class="token punctuation">)</span>
        {
            <span class="token keyword">if</span> <span class="token punctuation">(</span>replacementm<span class="token punctuation">.</span>startsWith<span class="token punctuation">(</span>searchString<span class="token punctuation">)</span><span class="token punctuation">)</span>
            {
                <span class="token keyword">text</span> <span class="token operator">=</span> replacementm<span class="token punctuation">.</span>replaceFirst<span class="token punctuation">(</span>searchString<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            }
        }
        <span class="token keyword">return</span> <span class="token keyword">text</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 关键字替换
     * 
     * @param text 需要被替换的名字
     * @return 替换后的名字
     */</span>
    <span class="token keyword">public</span> static String replaceText<span class="token punctuation">(</span>String <span class="token keyword">text</span><span class="token punctuation">)</span>
    {
        <span class="token keyword">return</span> RegExUtils<span class="token punctuation">.</span>replaceAll<span class="token punctuation">(</span><span class="token keyword">text</span><span class="token punctuation">,</span> <span class="token string">&quot;(?:表|好名网)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    }

    <span class="token comment">/**
     * 获取数据库类型字段
     * 
     * @param columnType 列类型
     * @return 截取后的列类型
     */</span>
    <span class="token keyword">public</span> static String getDbType<span class="token punctuation">(</span>String columnType<span class="token punctuation">)</span>
    {
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        {
            <span class="token keyword">return</span> StringUtils<span class="token punctuation">.</span>substringBefore<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span>
        {
            <span class="token keyword">return</span> columnType<span class="token punctuation">;</span>
        }
    }

    <span class="token comment">/**
     * 获取字段长度
     * 
     * @param columnType 列类型
     * @return 截取后的列类型
     */</span>
    <span class="token keyword">public</span> static <span class="token keyword">Integer</span> getColumnLength<span class="token punctuation">(</span>String columnType<span class="token punctuation">)</span>
    {
        <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        {
            String length <span class="token operator">=</span> StringUtils<span class="token punctuation">.</span>substringBetween<span class="token punctuation">(</span>columnType<span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">Integer</span><span class="token punctuation">.</span>valueOf<span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        }
        <span class="token keyword">else</span>
        {
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        }
    }
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-生成代码模板" tabindex="-1"><a class="header-anchor" href="#_4-2-生成代码模板" aria-hidden="true">#</a> 4.2 生成代码模板</h3><h4 id="_4-2-1-controller层" tabindex="-1"><a class="header-anchor" href="#_4-2-1-controller层" aria-hidden="true">#</a> 4.2.1 controller层</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token doc-comment comment">/**
     * 批量生成代码
     */</span>
    <span class="token annotation punctuation">@PreAuthorize</span><span class="token punctuation">(</span><span class="token string">&quot;@ss.hasPermi(&#39;tool:gen:code&#39;)&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Log</span><span class="token punctuation">(</span>title <span class="token operator">=</span> <span class="token string">&quot;代码生成&quot;</span><span class="token punctuation">,</span> businessType <span class="token operator">=</span> <span class="token class-name">BusinessType</span><span class="token punctuation">.</span><span class="token constant">GENCODE</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/batchGenCode&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">batchGenCode</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> tables<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames <span class="token operator">=</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStrArray</span><span class="token punctuation">(</span>tables<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> genTableService<span class="token punctuation">.</span><span class="token function">downloadCode</span><span class="token punctuation">(</span>tableNames<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">genCode</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    
    <span class="token doc-comment comment">/**
     * 生成zip文件
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">genCode</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>
    <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Expose-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment; filename=\\&quot;ygn.zip\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Length&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/octet-stream; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-service层" tabindex="-1"><a class="header-anchor" href="#_4-2-2-service层" aria-hidden="true">#</a> 4.2.2 Service层</h4><ul><li>设置表基本信息和主键信息等</li><li>获取我们的模板组</li><li>依次渲染模板内容</li><li>再将渲染好的内容放入zip包</li><li>返回下载的zip包</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
     * 批量生成代码（下载方式）
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">tableNames</span> 表数组
     * <span class="token keyword">@return</span> 数据
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">downloadCode</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tableNames<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">ByteArrayOutputStream</span> outputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ZipOutputStream</span> zip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZipOutputStream</span><span class="token punctuation">(</span>outputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> tableName <span class="token operator">:</span> tableNames<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">generatorCode</span><span class="token punctuation">(</span>tableName<span class="token punctuation">,</span> zip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>zip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> outputStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
     * 查询表信息并生成代码
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">generatorCode</span><span class="token punctuation">(</span><span class="token class-name">String</span> tableName<span class="token punctuation">,</span> <span class="token class-name">ZipOutputStream</span> zip<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// 查询表信息</span>
        <span class="token class-name">GenTable</span> table <span class="token operator">=</span> genTableMapper<span class="token punctuation">.</span><span class="token function">selectGenTableByName</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置主子表信息</span>
        <span class="token function">setSubTable</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置主键列信息</span>
        <span class="token function">setPkColumn</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">VelocityInitializer</span><span class="token punctuation">.</span><span class="token function">initVelocity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">VelocityContext</span> context <span class="token operator">=</span> <span class="token class-name">VelocityUtils</span><span class="token punctuation">.</span><span class="token function">prepareContext</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 获取模板列表</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> templates <span class="token operator">=</span> <span class="token class-name">VelocityUtils</span><span class="token punctuation">.</span><span class="token function">getTemplateList</span><span class="token punctuation">(</span>table<span class="token punctuation">.</span><span class="token function">getTplCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> template <span class="token operator">:</span> templates<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">// 渲染模板</span>
            <span class="token class-name">StringWriter</span> sw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Template</span> tpl <span class="token operator">=</span> <span class="token class-name">Velocity</span><span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">UTF8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tpl<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> sw<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span>
            <span class="token punctuation">{</span>
                <span class="token comment">// 添加到zip</span>
                zip<span class="token punctuation">.</span><span class="token function">putNextEntry</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ZipEntry</span><span class="token punctuation">(</span><span class="token class-name">VelocityUtils</span><span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> table<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>sw<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zip<span class="token punctuation">,</span> <span class="token class-name">Constants</span><span class="token punctuation">.</span><span class="token constant">UTF8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">closeQuietly</span><span class="token punctuation">(</span>sw<span class="token punctuation">)</span><span class="token punctuation">;</span>
				zip<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                zip<span class="token punctuation">.</span><span class="token function">closeEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;渲染模板失败，表名：&quot;</span> <span class="token operator">+</span> table<span class="token punctuation">.</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-代码模板" tabindex="-1"><a class="header-anchor" href="#_4-3-代码模板" aria-hidden="true">#</a> 4.3 代码模板</h3><h4 id="_4-3-1-mybatis-sql-模板" tabindex="-1"><a class="header-anchor" href="#_4-3-1-mybatis-sql-模板" aria-hidden="true">#</a> 4.3.1 mybatis sql 模板</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span>?xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span> ?<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mapper
<span class="token keyword">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>
<span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">&quot;\${packageName}.mapper.\${ClassName}Mapper&quot;</span><span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span>resultMap <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;\${ClassName}Result&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach ($column in $columns)</span>
        <span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;\${column.javaField}&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;\${column.columnName}&quot;</span>    <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>
<span class="token comment">#if($table.sub)</span>

    <span class="token operator">&lt;</span>resultMap id<span class="token operator">=</span><span class="token string">&quot;\${ClassName}\${subClassName}Result&quot;</span> <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span> extends<span class="token operator">=</span><span class="token string">&quot;\${ClassName}Result&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>collection property<span class="token operator">=</span><span class="token string">&quot;\${subclassName}List&quot;</span> notNullColumn<span class="token operator">=</span><span class="token string">&quot;sub_\${subTable.pkColumn.columnName}&quot;</span> javaType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;\${subClassName}Result&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span>resultMap <span class="token keyword">type</span><span class="token operator">=</span><span class="token string">&quot;\${subClassName}&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;\${subClassName}Result&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach ($column in $subTable.columns)</span>
        <span class="token operator">&lt;</span>result property<span class="token operator">=</span><span class="token string">&quot;\${column.javaField}&quot;</span>    <span class="token keyword">column</span><span class="token operator">=</span><span class="token string">&quot;sub_\${column.columnName}&quot;</span>    <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>resultMap<span class="token operator">&gt;</span>
<span class="token comment">#end</span>

    <span class="token operator">&lt;</span><span class="token keyword">sql</span> id<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}Vo&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">select</span><span class="token comment">#foreach($column in $columns) $column.columnName#if($velocityCount != $columns.size()),#end#end from \${tableName}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">sql</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}List&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;\${ClassName}Result&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}Vo&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token keyword">where</span><span class="token operator">&gt;</span>  
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#set($queryType=$column.queryType)</span>
<span class="token comment">#set($javaField=$column.javaField)</span>
<span class="token comment">#set($javaType=$column.javaType)</span>
<span class="token comment">#set($columnName=$column.columnName)</span>
<span class="token comment">#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + \${column.javaField.substring(1)})</span>
<span class="token comment">#if($column.query)</span>
<span class="token comment">#if($column.queryType == &quot;EQ&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;NE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">!=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;GT&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;GTE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>gt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;LT&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;LTE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span><span class="token operator">=</span> <span class="token comment">#{$javaField}&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;LIKE&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$javaField != null #if($javaType == &#39;String&#39; ) and $javaField.trim() != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">like</span> concat<span class="token punctuation">(</span><span class="token string">&#39;%&#39;</span><span class="token punctuation">,</span> <span class="token comment">#{$javaField}, &#39;%&#39;)&lt;/if&gt;</span>
<span class="token comment">#elseif($queryType == &quot;BETWEEN&quot;)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;params.begin$AttrName != null and params.begin$AttrName != &#39;&#39; and params.end$AttrName != null and params.end$AttrName != &#39;&#39;&quot;</span><span class="token operator">&gt;</span> <span class="token operator">and</span> $columnName <span class="token operator">between</span> <span class="token comment">#{params.begin$AttrName} and #{params.end$AttrName}&lt;/if&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">where</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
    
    <span class="token operator">&lt;</span><span class="token keyword">select</span> id<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}ById&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${pkColumn.javaType}&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;#if($table.sub)\${ClassName}\${subClassName}Result#else\${ClassName}Result#end&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#if($table.crud || $table.tree)</span>
        <span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">&quot;select\${ClassName}Vo&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
<span class="token comment">#elseif($table.sub)</span>
        <span class="token keyword">select</span><span class="token comment">#foreach($column in $columns) a.$column.columnName#if($velocityCount != $columns.size()),#end#end,</span>
           <span class="token comment">#foreach($column in $subTable.columns) b.$column.columnName as sub_$column.columnName#if($velocityCount != $subTable.columns.size()),#end#end</span>

        <span class="token keyword">from</span> \${tableName} a
        <span class="token keyword">left</span> <span class="token keyword">join</span> \${subTableName} b <span class="token keyword">on</span> b<span class="token punctuation">.</span>\${subTableFkName} <span class="token operator">=</span> a<span class="token punctuation">.</span>\${pkColumn<span class="token punctuation">.</span>columnName}
        <span class="token keyword">where</span> a<span class="token punctuation">.</span>\${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
<span class="token comment">#end</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">select</span><span class="token operator">&gt;</span>
        
    <span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;insert\${ClassName}&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span><span class="token comment">#if($pkColumn.increment) useGeneratedKeys=&quot;true&quot; keyProperty=&quot;$pkColumn.javaField&quot;#end&gt;</span>
        <span class="token keyword">insert</span> <span class="token keyword">into</span> \${tableName}
        <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;(&quot;</span> suffix<span class="token operator">=</span><span class="token string">&quot;)&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$column.javaField != null#if($column.javaType == &#39;String&#39; &amp;&amp; $column.required) and $column.javaField != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span>$<span class="token keyword">column</span><span class="token punctuation">.</span>columnName<span class="token punctuation">,</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
         <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;values (&quot;</span> suffix<span class="token operator">=</span><span class="token string">&quot;)&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#if($column.columnName != $pkColumn.columnName || !$pkColumn.increment)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$column.javaField != null#if($column.javaType == &#39;String&#39; &amp;&amp; $column.required) and $column.javaField != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span><span class="token comment">#{$column.javaField},&lt;/if&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
         <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">update</span> id<span class="token operator">=</span><span class="token string">&quot;update\${ClassName}&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${ClassName}&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">update</span> \${tableName}
        <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;SET&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">#foreach($column in $columns)</span>
<span class="token comment">#if($column.columnName != $pkColumn.columnName)</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;$column.javaField != null#if($column.javaType == &#39;String&#39; &amp;&amp; $column.required) and $column.javaField != &#39;&#39;#end&quot;</span><span class="token operator">&gt;</span>$<span class="token keyword">column</span><span class="token punctuation">.</span>columnName <span class="token operator">=</span> <span class="token comment">#{$column.javaField},&lt;/if&gt;</span>
<span class="token comment">#end</span>
<span class="token comment">#end</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
        <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">update</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${ClassName}ById&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;\${pkColumn.javaType}&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${tableName} <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">=</span> <span class="token comment">#{\${pkColumn.javaField}}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${ClassName}ByIds&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;String&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${tableName} <span class="token keyword">where</span> \${pkColumn<span class="token punctuation">.</span>columnName} <span class="token operator">in</span> 
        <span class="token operator">&lt;</span>foreach item<span class="token operator">=</span><span class="token string">&quot;\${pkColumn.javaField}&quot;</span> collection<span class="token operator">=</span><span class="token string">&quot;array&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span>
            <span class="token comment">#{\${pkColumn.javaField}}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>
<span class="token comment">#if($table.sub)</span>
    
    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${subClassName}By\${subTableFkClassName}s&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;String&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${subTableName} <span class="token keyword">where</span> \${subTableFkName} <span class="token operator">in</span> 
        <span class="token operator">&lt;</span>foreach item<span class="token operator">=</span><span class="token string">&quot;\${subTableFkclassName}&quot;</span> collection<span class="token operator">=</span><span class="token string">&quot;array&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span>
            <span class="token comment">#{\${subTableFkclassName}}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">delete</span> id<span class="token operator">=</span><span class="token string">&quot;delete\${subClassName}By\${subTableFkClassName}&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;Long&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">delete</span> <span class="token keyword">from</span> \${subTableName} <span class="token keyword">where</span> \${subTableFkName} <span class="token operator">=</span> <span class="token comment">#{\${subTableFkclassName}}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token keyword">insert</span> id<span class="token operator">=</span><span class="token string">&quot;batch\${subClassName}&quot;</span><span class="token operator">&gt;</span>
        <span class="token keyword">insert</span> <span class="token keyword">into</span> \${subTableName}<span class="token punctuation">(</span><span class="token comment">#foreach($column in $subTable.columns) $column.columnName#if($velocityCount != $subTable.columns.size()),#end#end) values</span>
		<span class="token operator">&lt;</span>foreach item<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">&quot;index&quot;</span> collection<span class="token operator">=</span><span class="token string">&quot;list&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
            <span class="token punctuation">(</span><span class="token comment">#foreach($column in $subTable.columns) #{item.$column.javaField}#if($velocityCount != $subTable.columns.size()),#end#end)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">insert</span><span class="token operator">&gt;</span>
<span class="token comment">#end</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-2-service实现类模板" tabindex="-1"><a class="header-anchor" href="#_4-3-2-service实现类模板" aria-hidden="true">#</a> 4.3.2 Service实现类模板</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>package \${packageName}.service.impl;

import java.util.List;
#foreach ($column in $columns)
#if($column.javaField == &#39;createTime&#39; || $column.javaField == &#39;updateTime&#39;)
import com.ygn.common.utils.DateUtils;
#break
#end
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
#if($table.sub)
import java.util.ArrayList;
import com.ygn.common.utils.StringUtils;
import org.springframework.transaction.annotation.Transactional;
import \${packageName}.domain.\${subClassName};
#end
import \${packageName}.mapper.\${ClassName}Mapper;
import \${packageName}.domain.\${ClassName};
import \${packageName}.service.\${ClassName}Service;

/**
 * \${functionName}Service业务层处理
 * 
 * @author \${author}
 * @date \${datetime}
 */
@Service
public class \${ClassName}ServiceImpl implements \${ClassName}Service
{
    @Resource
    private \${ClassName}Mapper \${className}Mapper;

    /**
     * 查询\${functionName}
     * 
     * @param \${pkColumn.javaField} \${functionName}ID
     * @return \${functionName}
     */
    @Override
    public \${ClassName} select\${ClassName}ById(\${pkColumn.javaType} \${pkColumn.javaField})
    {
        return \${className}Mapper.select\${ClassName}ById(\${pkColumn.javaField});
    }

    /**
     * 查询\${functionName}列表
     * 
     * @param \${className} \${functionName}
     * @return \${functionName}
     */
    @Override
    public List&lt;\${ClassName}&gt; select\${ClassName}List(\${ClassName} \${className})
    {
        return \${className}Mapper.select\${ClassName}List(\${className});
    }

    /**
     * 新增\${functionName}
     * 
     * @param \${className} \${functionName}
     * @return 结果
     */
#if($table.sub)
    @Transactional
#end
    @Override
    public int insert\${ClassName}(\${ClassName} \${className})
    {
#foreach ($column in $columns)
#if($column.javaField == &#39;createTime&#39;)
        \${className}.setCreateTime(DateUtils.getNowDate());
#end
#end
#if($table.sub)
        int rows = \${className}Mapper.insert\${ClassName}(\${className});
        insert\${subClassName}(\${className});
        return rows;
#else
        return \${className}Mapper.insert\${ClassName}(\${className});
#end
    }

    /**
     * 修改\${functionName}
     * 
     * @param \${className} \${functionName}
     * @return 结果
     */
#if($table.sub)
    @Transactional
#end
    @Override
    public int update\${ClassName}(\${ClassName} \${className})
    {
#foreach ($column in $columns)
#if($column.javaField == &#39;updateTime&#39;)
        \${className}.setUpdateTime(DateUtils.getNowDate());
#end
#end
#if($table.sub)
        \${className}Mapper.delete\${subClassName}By\${subTableFkClassName}(\${className}.get\${pkColumn.capJavaField}());
        insert\${subClassName}(\${className});
#end
        return \${className}Mapper.update\${ClassName}(\${className});
    }

    /**
     * 批量删除\${functionName}
     * 
     * @param \${pkColumn.javaField}s 需要删除的\${functionName}ID
     * @return 结果
     */
#if($table.sub)
    @Transactional
#end
    @Override
    public int delete\${ClassName}ByIds(\${pkColumn.javaType}[] \${pkColumn.javaField}s)
    {
#if($table.sub)
        \${className}Mapper.delete\${subClassName}By\${subTableFkClassName}s(\${pkColumn.javaField}s);
#end
        return \${className}Mapper.delete\${ClassName}ByIds(\${pkColumn.javaField}s);
    }

    /**
     * 删除\${functionName}信息
     * 
     * @param \${pkColumn.javaField} \${functionName}ID
     * @return 结果
     */
    @Override
    public int delete\${ClassName}ById(\${pkColumn.javaType} \${pkColumn.javaField})
    {
#if($table.sub)
        \${className}Mapper.delete\${subClassName}By\${subTableFkClassName}(\${pkColumn.javaField});
#end
        return \${className}Mapper.delete\${ClassName}ById(\${pkColumn.javaField});
    }
#if($table.sub)

    /**
     * 新增\${subTable.functionName}信息
     * 
     * @param \${className} \${functionName}对象
     */
    public void insert\${subClassName}(\${ClassName} \${className})
    {
        List&lt;\${subClassName}&gt; \${subclassName}List = \${className}.get\${subClassName}List();
        Long \${pkColumn.javaField} = \${className}.get\${pkColumn.capJavaField}();
        if (StringUtils.isNotNull(\${subclassName}List))
        {
            List&lt;\${subClassName}&gt; list = new ArrayList&lt;\${subClassName}&gt;();
            for (\${subClassName} \${subclassName} : \${subclassName}List)
            {
                \${subclassName}.set\${subTableFkClassName}(\${pkColumn.javaField});
                list.add(\${subclassName});
            }
            if (list.size() &gt; 0)
            {
                \${className}Mapper.batch\${subClassName}(list);
            }
        }
    }
#end
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,68),u={href:"http://doc.ruoyi.vip/ruoyi/document/htsc.html#%E6%89%8B%E5%8A%A8%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%E6%BA%90",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=c("ExternalLinkIcon");return e(),t("div",null,[r,n("p",null,[n("a",u,[p("若依官方文档"),o(s)])])])}const b=a(i,[["render",k],["__file","manage-system-code-gen.html.vue"]]);export{b as default};
