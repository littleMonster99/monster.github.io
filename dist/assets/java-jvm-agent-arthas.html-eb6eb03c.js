import{_ as r,W as l,X as o,Y as a,Z as s,$ as e,a0 as t,D as i}from"./framework-f64bc974.js";const c={},p=a("h1",{id:"调试排错-java-问题排查之应用在线调试arthas",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#调试排错-java-问题排查之应用在线调试arthas","aria-hidden":"true"},"#"),s(" 调试排错 - Java 问题排查之应用在线调试Arthas")],-1),d=a("h2",{id:"_1-arthas简介",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-arthas简介","aria-hidden":"true"},"#"),s(" 1. Arthas简介")],-1),u={href:"https://pdai.tech/md/java/jvm/java-jvm-agent-usage.html",target:"_blank",rel:"noopener noreferrer"},h=t('<h3 id="_1-1-arthas是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-arthas是什么" aria-hidden="true">#</a> 1.1 Arthas是什么</h3><p><code>Arthas</code> 是Alibaba开源的Java诊断工具，深受开发者喜爱。</p><h3 id="_1-2-arthas能解决什么问题" tabindex="-1"><a class="header-anchor" href="#_1-2-arthas能解决什么问题" aria-hidden="true">#</a> 1.2 Arthas能解决什么问题</h3><p>当你遇到以下类似问题而束手无策时，<code>Arthas</code>可以帮助你解决：</p><ul><li>这个类从哪个 jar 包加载的? 为什么会报各种类相关的 Exception?</li><li>我改的代码为什么没有执行到? 难道是我没 commit? 分支搞错了?</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗?</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况?</li><li>有什么办法可以监控到JVM的实时运行状态?</li></ul><p><code>Arthas</code>支持JDK 6+，支持Linux/Mac/Windows，采用命令行交互模式，同时提供丰富的 <code>Tab</code> 自动补全功能，进一步方便进行问题的定位和诊断。</p><h3 id="_1-3-arthas资源推荐" tabindex="-1"><a class="header-anchor" href="#_1-3-arthas资源推荐" aria-hidden="true">#</a> 1.3 Arthas资源推荐</h3>',7),b={href:"https://alibaba.github.io/arthas/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://alibaba.github.io/arthas/arthas-tutorials?language=cn",target:"_blank",rel:"noopener noreferrer"},v={href:"https://alibaba.github.io/arthas/quick-start.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://alibaba.github.io/arthas/advanced-use.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://alibaba.github.io/arthas/commands.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://alibaba.github.io/arthas/web-console.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://alibaba.github.io/arthas/docker.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/alibaba/arthas/issues?q=label%3Auser-case",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/alibaba/arthas/issues?utf8=%E2%9C%93&q=label%3Aquestion-answered+",target:"_blank",rel:"noopener noreferrer"},A=a("h3",{id:"_1-4-arthas基于了哪些工具上发展而来",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-4-arthas基于了哪些工具上发展而来","aria-hidden":"true"},"#"),s(" 1.4 Arthas基于了哪些工具上发展而来")],-1),C={href:"https://github.com/oldmanpushcart/greys-anatomy",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/termd/termd",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/crashub/crash",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/crashub/crash/tree/1.3.2/shell",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/eclipse-vertx/vert.x/tree/master/src/main/java/io/vertx/core/cli",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/skalogs/SkaETL/tree/master/compiler",target:"_blank",rel:"noopener noreferrer"},L={href:"https://commons.apache.org/proper/commons-net/",target:"_blank",rel:"noopener noreferrer"},M=a("li",null,[a("code",null,"JavaAgent"),s("：运行在 main方法之前的拦截器，它内定的方法名叫 premain ，也就是说先执行 premain 方法然后再执行 main 方法")],-1),I=a("li",null,[a("code",null,"ASM"),s("：一个通用的Java字节码操作和分析框架。它可以用于修改现有的类或直接以二进制形式动态生成类。ASM提供了一些常见的字节码转换和分析算法，可以从它们构建定制的复杂转换和代码分析工具。ASM提供了与其他Java字节码框架类似的功能，但是主要关注性能。因为它被设计和实现得尽可能小和快，所以非常适合在动态系统中使用(当然也可以以静态方式使用，例如在编译器中)")],-1),q=a("h3",{id:"_1-5-同类工具有哪些",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-5-同类工具有哪些","aria-hidden":"true"},"#"),s(" 1.5 同类工具有哪些")],-1),D=a("li",null,"BTrace",-1),H=a("li",null,"美团 Java-debug-tool",-1),W={href:"https://github.com/qunarcorp/bistoury",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/XhinLiang/arthas",target:"_blank",rel:"noopener noreferrer"},P=a("h2",{id:"_2-arthas入门",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-arthas入门","aria-hidden":"true"},"#"),s(" 2. Arthas入门")],-1),R=a("h3",{id:"_2-1-arthas-上手前",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-1-arthas-上手前","aria-hidden":"true"},"#"),s(" 2.1 Arthas 上手前")],-1),F={href:"https://arthas.aliyun.com/doc/arthas-tutorials.html?language=cn&id=arthas-basics",target:"_blank",rel:"noopener noreferrer"},J=t(`<h3 id="_2-2-arthas-安装" tabindex="-1"><a class="header-anchor" href="#_2-2-arthas-安装" aria-hidden="true">#</a> 2.2 Arthas 安装</h3><p>下载<code>arthas-boot.jar</code>，然后用<code>java -jar</code>的方式启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-O</span> https://alibaba.github.io/arthas/arthas-boot.jar
<span class="token function">java</span> <span class="token parameter variable">-jar</span> arthas-boot.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-arthas-官方案例展示" tabindex="-1"><a class="header-anchor" href="#_2-3-arthas-官方案例展示" aria-hidden="true">#</a> 2.3 Arthas 官方案例展示</h3><h4 id="_2-3-1-dashboard" tabindex="-1"><a class="header-anchor" href="#_2-3-1-dashboard" aria-hidden="true">#</a> 2.3.1 Dashboard</h4>`,5),V={href:"https://alibaba.github.io/arthas/dashboard",target:"_blank",rel:"noopener noreferrer"},z=t(`<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220827222601003.png" alt="image-20220827222601003" tabindex="0" loading="lazy"><figcaption>image-20220827222601003</figcaption></figure><h4 id="_2-3-2-thread" tabindex="-1"><a class="header-anchor" href="#_2-3-2-thread" aria-hidden="true">#</a> 2.3.2 Thread</h4><p>一目了然的了解系统的状态，哪些线程比较占cpu? 他们到底在做什么?</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ thread <span class="token parameter variable">-n</span> <span class="token number">3</span>
<span class="token string">&quot;as-command-execute-daemon&quot;</span> <span class="token assign-left variable">Id</span><span class="token operator">=</span><span class="token number">29</span> <span class="token assign-left variable">cpuUsage</span><span class="token operator">=</span><span class="token number">75</span>% RUNNABLE
    at sun.management.ThreadImpl.dumpThreads0<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
    at sun.management.ThreadImpl.getThreadInfo<span class="token punctuation">(</span>ThreadImpl.java:440<span class="token punctuation">)</span>
    at com.taobao.arthas.core.command.monitor200.ThreadCommand<span class="token variable">$1</span>.action<span class="token punctuation">(</span>ThreadCommand.java:58<span class="token punctuation">)</span>
    at com.taobao.arthas.core.command.handler.AbstractCommandHandler.execute<span class="token punctuation">(</span>AbstractCommandHandler.java:238<span class="token punctuation">)</span>
    at com.taobao.arthas.core.command.handler.DefaultCommandHandler.handleCommand<span class="token punctuation">(</span>DefaultCommandHandler.java:67<span class="token punctuation">)</span>
    at com.taobao.arthas.core.server.ArthasServer<span class="token variable">$4</span>.run<span class="token punctuation">(</span>ArthasServer.java:276<span class="token punctuation">)</span>
    at java.util.concurrent.ThreadPoolExecutor.runWorker<span class="token punctuation">(</span>ThreadPoolExecutor.java:1145<span class="token punctuation">)</span>
    at java.util.concurrent.ThreadPoolExecutor<span class="token variable">$Worker</span>.run<span class="token punctuation">(</span>ThreadPoolExecutor.java:615<span class="token punctuation">)</span>
    at java.lang.Thread.run<span class="token punctuation">(</span>Thread.java:745<span class="token punctuation">)</span>

    Number of locked synchronizers <span class="token operator">=</span> <span class="token number">1</span>
    - java.util.concurrent.ThreadPoolExecutor<span class="token variable">$Worker</span>@6cd0b6f8

<span class="token string">&quot;as-session-expire-daemon&quot;</span> <span class="token assign-left variable">Id</span><span class="token operator">=</span><span class="token number">25</span> <span class="token assign-left variable">cpuUsage</span><span class="token operator">=</span><span class="token number">24</span>% TIMED_WAITING
    at java.lang.Thread.sleep<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
    at com.taobao.arthas.core.server.DefaultSessionManager<span class="token variable">$2</span>.run<span class="token punctuation">(</span>DefaultSessionManager.java:85<span class="token punctuation">)</span>

<span class="token string">&quot;Reference Handler&quot;</span> <span class="token assign-left variable">Id</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">cpuUsage</span><span class="token operator">=</span><span class="token number">0</span>% WAITING on java.lang.ref.Reference<span class="token variable">$Lock</span>@69ba0f27
    at java.lang.Object.wait<span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>
    -  waiting on java.lang.ref.Reference<span class="token variable">$Lock</span>@69ba0f27
    at java.lang.Object.wait<span class="token punctuation">(</span>Object.java:503<span class="token punctuation">)</span>
    at java.lang.ref.Reference<span class="token variable">$ReferenceHandler</span>.run<span class="token punctuation">(</span>Reference.java:133<span class="token punctuation">)</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-3-jad" tabindex="-1"><a class="header-anchor" href="#_2-3-3-jad" aria-hidden="true">#</a> 2.3.3 jad</h4><p>对类进行反编译:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jad <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span>Servlet</span>

<span class="token class-name">ClassLoader</span><span class="token operator">:</span>
<span class="token operator">+</span><span class="token operator">-</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URLClassLoader</span><span class="token annotation punctuation">@6108b2d7</span>
  <span class="token operator">+</span><span class="token operator">-</span><span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Launcher</span>$<span class="token class-name">AppClassLoader</span><span class="token annotation punctuation">@18b4aac2</span>
    <span class="token operator">+</span><span class="token operator">-</span><span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Launcher</span>$<span class="token class-name">ExtClassLoader</span><span class="token annotation punctuation">@1ddf84b8</span>

<span class="token class-name">Location</span><span class="token operator">:</span>
<span class="token operator">/</span><span class="token class-name">Users</span><span class="token operator">/</span>xxx<span class="token operator">/</span>work<span class="token operator">/</span>test<span class="token operator">/</span>lib<span class="token operator">/</span>servlet<span class="token operator">-</span>api<span class="token punctuation">.</span>jar

<span class="token comment">/*
 * Decompiled with CFR 0_122.
 */</span>
<span class="token keyword">package</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletConfig</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletResponse</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">ServletConfig</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ServletConfig</span> <span class="token function">getServletConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> var1<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> var2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getServletInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-4-mc" tabindex="-1"><a class="header-anchor" href="#_2-3-4-mc" aria-hidden="true">#</a> 2.3.4 mc</h4><p>Memory Compiler/内存编译器，编译<code>.java</code>文件生成<code>.class</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mc</span> /tmp/Test.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-3-5-redefine" tabindex="-1"><a class="header-anchor" href="#_2-3-5-redefine" aria-hidden="true">#</a> 2.3.5 redefine</h4><p>加载外部的<code>.class</code>文件，redefine jvm已加载的类。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>redefine /tmp/Test.class
redefine <span class="token parameter variable">-c</span> 327a647b /tmp/Test.class /tmp/Test<span class="token punctuation">\\</span><span class="token variable">$Inner</span>.class
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-6-sc" tabindex="-1"><a class="header-anchor" href="#_2-3-6-sc" aria-hidden="true">#</a> 2.3.6 sc</h4><p>查找JVM中已经加载的类</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ sc <span class="token parameter variable">-d</span> org.springframework.web.context.support.XmlWebApplicationContext
 class-info        org.springframework.web.context.support.XmlWebApplicationContext
 code-source       /Users/xxx/work/test/WEB-INF/lib/spring-web-3.2.11.RELEASE.jar
 name              org.springframework.web.context.support.XmlWebApplicationContext
 isInterface       <span class="token boolean">false</span>
 isAnnotation      <span class="token boolean">false</span>
 isEnum            <span class="token boolean">false</span>
 isAnonymousClass  <span class="token boolean">false</span>
 isArray           <span class="token boolean">false</span>
 isLocalClass      <span class="token boolean">false</span>
 isMemberClass     <span class="token boolean">false</span>
 isPrimitive       <span class="token boolean">false</span>
 isSynthetic       <span class="token boolean">false</span>
 simple-name       XmlWebApplicationContext
 modifier          public
 annotation
 interfaces
 super-class       +-org.springframework.web.context.support.AbstractRefreshableWebApplicationContext
                     +-org.springframework.context.support.AbstractRefreshableConfigApplicationContext
                       +-org.springframework.context.support.AbstractRefreshableApplicationContext
                         +-org.springframework.context.support.AbstractApplicationContext
                           +-org.springframework.core.io.DefaultResourceLoader
                             +-java.lang.Object
 class-loader      +-org.apache.catalina.loader.ParallelWebappClassLoader
                     +-java.net.URLClassLoader@6108b2d7
                       +-sun.misc.Launcher<span class="token variable">$AppClassLoader</span>@18b4aac2
                         +-sun.misc.Launcher<span class="token variable">$ExtClassLoader</span>@1ddf84b8
 classLoaderHash   <span class="token number">25131501</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-7-stack" tabindex="-1"><a class="header-anchor" href="#_2-3-7-stack" aria-hidden="true">#</a> 2.3.7 stack</h4><p>查看方法 <code>test.arthas.TestStack#doGet</code> 的调用堆栈：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ stack test.arthas.TestStack doGet
Press Ctrl+C to abort.
Affect<span class="token punctuation">(</span>class-cnt:1 , method-cnt:1<span class="token punctuation">)</span> cost <span class="token keyword">in</span> <span class="token number">286</span> ms.
<span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2018</span>-09-18 <span class="token number">10</span>:11:45<span class="token punctuation">;</span><span class="token assign-left variable">thread_name</span><span class="token operator">=</span>http-bio-8080-exec-10<span class="token punctuation">;</span><span class="token assign-left variable">id</span><span class="token operator">=</span>d9<span class="token punctuation">;</span><span class="token assign-left variable">is_daemon</span><span class="token operator">=</span>true<span class="token punctuation">;</span><span class="token assign-left variable">priority</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token assign-left variable">TCCL</span><span class="token operator">=</span>org.apache.catalina.loader.ParallelWebappClassLoader@25131501
    @test.arthas.TestStack.doGet<span class="token punctuation">(</span><span class="token punctuation">)</span>
        at javax.servlet.http.HttpServlet.service<span class="token punctuation">(</span>HttpServlet.java:624<span class="token punctuation">)</span>
        at javax.servlet.http.HttpServlet.service<span class="token punctuation">(</span>HttpServlet.java:731<span class="token punctuation">)</span>
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:303<span class="token punctuation">)</span>
        at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:208<span class="token punctuation">)</span>
        at org.apache.tomcat.websocket.server.WsFilter.doFilter<span class="token punctuation">(</span>WsFilter.java:52<span class="token punctuation">)</span>
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:241<span class="token punctuation">)</span>
        at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:208<span class="token punctuation">)</span>
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:241<span class="token punctuation">)</span>
        at org.apache.catalina.core.ApplicationFilterChain.doFilter<span class="token punctuation">(</span>ApplicationFilterChain.java:208<span class="token punctuation">)</span>
        at org.apache.catalina.core.StandardWrapperValve.invoke<span class="token punctuation">(</span>StandardWrapperValve.java:220<span class="token punctuation">)</span>
        at org.apache.catalina.core.StandardContextValve.invoke<span class="token punctuation">(</span>StandardContextValve.java:110<span class="token punctuation">)</span>
        <span class="token punctuation">..</span>.
        at org.apache.catalina.core.StandardHostValve.invoke<span class="token punctuation">(</span>StandardHostValve.java:169<span class="token punctuation">)</span>
        at org.apache.catalina.valves.ErrorReportValve.invoke<span class="token punctuation">(</span>ErrorReportValve.java:103<span class="token punctuation">)</span>
        at org.apache.catalina.core.StandardEngineValve.invoke<span class="token punctuation">(</span>StandardEngineValve.java:116<span class="token punctuation">)</span>
        at org.apache.catalina.connector.CoyoteAdapter.service<span class="token punctuation">(</span>CoyoteAdapter.java:451<span class="token punctuation">)</span>
        at org.apache.coyote.http11.AbstractHttp11Processor.process<span class="token punctuation">(</span>AbstractHttp11Processor.java:1121<span class="token punctuation">)</span>
        at org.apache.coyote.AbstractProtocol<span class="token variable">$AbstractConnectionHandler</span>.process<span class="token punctuation">(</span>AbstractProtocol.java:637<span class="token punctuation">)</span>
        at org.apache.tomcat.util.net.JIoEndpoint<span class="token variable">$SocketProcessor</span>.run<span class="token punctuation">(</span>JIoEndpoint.java:316<span class="token punctuation">)</span>
        at java.util.concurrent.ThreadPoolExecutor.runWorker<span class="token punctuation">(</span>ThreadPoolExecutor.java:1142<span class="token punctuation">)</span>
        at java.util.concurrent.ThreadPoolExecutor<span class="token variable">$Worker</span>.run<span class="token punctuation">(</span>ThreadPoolExecutor.java:617<span class="token punctuation">)</span>
        at org.apache.tomcat.util.threads.TaskThread<span class="token variable">$WrappingRunnable</span>.run<span class="token punctuation">(</span>TaskThread.java:61<span class="token punctuation">)</span>
        at java.lang.Thread.run<span class="token punctuation">(</span>Thread.java:745<span class="token punctuation">)</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-8-trace" tabindex="-1"><a class="header-anchor" href="#_2-3-8-trace" aria-hidden="true">#</a> 2.3.8 Trace</h4><p>观察方法执行的时候哪个子调用比较慢:</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220827223031123.png" alt="image-20220827223031123" tabindex="0" loading="lazy"><figcaption>image-20220827223031123</figcaption></figure><h4 id="_2-3-9-watch" tabindex="-1"><a class="header-anchor" href="#_2-3-9-watch" aria-hidden="true">#</a> 2.3.9 Watch</h4><p>观察方法 <code>test.arthas.TestWatch#doGet</code> 执行的入参，仅当方法抛出异常时才输出。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">watch</span> test.arthas.TestWatch doGet <span class="token punctuation">{</span>params<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>, throwExp<span class="token punctuation">}</span> <span class="token parameter variable">-e</span>
Press Ctrl+C to abort.
Affect<span class="token punctuation">(</span>class-cnt:1 , method-cnt:1<span class="token punctuation">)</span> cost <span class="token keyword">in</span> <span class="token number">65</span> ms.
<span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2018</span>-09-18 <span class="token number">10</span>:26:28<span class="token punctuation">;</span><span class="token assign-left variable">result</span><span class="token operator">=</span>@ArrayList<span class="token punctuation">[</span>
    @RequestFacade<span class="token punctuation">[</span>org.apache.catalina.connector.RequestFacade@79f922b2<span class="token punctuation">]</span>,
    @NullPointerException<span class="token punctuation">[</span>java.lang.NullPointerException<span class="token punctuation">]</span>,
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-10-monitor" tabindex="-1"><a class="header-anchor" href="#_2-3-10-monitor" aria-hidden="true">#</a> 2.3.10 Monitor</h4><p>监控某个特殊方法的调用统计数据，包括总调用次数，平均rt，成功率等信息，每隔5秒输出一次。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ monitor <span class="token parameter variable">-c</span> <span class="token number">5</span> org.apache.dubbo.demo.provider.DemoServiceImpl sayHello
Press Ctrl+C to abort.
Affect<span class="token punctuation">(</span>class-cnt:1 , method-cnt:1<span class="token punctuation">)</span> cost <span class="token keyword">in</span> <span class="token number">109</span> ms.
 timestamp            class                                           method    total  success  fail  avg-rt<span class="token punctuation">(</span>ms<span class="token punctuation">)</span>  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 <span class="token number">2018</span>-09-20 09:45:32  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  <span class="token number">5</span>      <span class="token number">5</span>        <span class="token number">0</span>     <span class="token number">0.67</span>        <span class="token number">0.00</span>%

 timestamp            class                                           method    total  success  fail  avg-rt<span class="token punctuation">(</span>ms<span class="token punctuation">)</span>  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 <span class="token number">2018</span>-09-20 09:45:37  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  <span class="token number">5</span>      <span class="token number">5</span>        <span class="token number">0</span>     <span class="token number">1.00</span>        <span class="token number">0.00</span>%

 timestamp            class                                           method    total  success  fail  avg-rt<span class="token punctuation">(</span>ms<span class="token punctuation">)</span>  fail-rate
----------------------------------------------------------------------------------------------------------------------------
 <span class="token number">2018</span>-09-20 09:45:42  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  <span class="token number">5</span>      <span class="token number">5</span>        <span class="token number">0</span>     <span class="token number">0.43</span>        <span class="token number">0.00</span>%

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-11-time-tunnel-tt" tabindex="-1"><a class="header-anchor" href="#_2-3-11-time-tunnel-tt" aria-hidden="true">#</a> 2.3.11 Time Tunnel(tt)</h4><p>记录方法调用信息，支持事后查看方法调用的参数，返回值，抛出的异常等信息，仿佛穿越时空隧道回到调用现场一般。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ tt <span class="token parameter variable">-t</span> org.apache.dubbo.demo.provider.DemoServiceImpl sayHello
Press Ctrl+C to abort.
Affect<span class="token punctuation">(</span>class-cnt:1 , method-cnt:1<span class="token punctuation">)</span> cost <span class="token keyword">in</span> <span class="token number">75</span> ms.
 INDEX   TIMESTAMP            COST<span class="token punctuation">(</span>ms<span class="token punctuation">)</span>  IS-RET  IS-EXP   OBJECT         CLASS                          METHOD
-------------------------------------------------------------------------------------------------------------------------------------
 <span class="token number">1000</span>    <span class="token number">2018</span>-09-20 09:54:10  <span class="token number">1.971195</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1001</span>    <span class="token number">2018</span>-09-20 09:54:11  <span class="token number">0.215685</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1002</span>    <span class="token number">2018</span>-09-20 09:54:12  <span class="token number">0.236303</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1003</span>    <span class="token number">2018</span>-09-20 09:54:13  <span class="token number">0.159598</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1004</span>    <span class="token number">2018</span>-09-20 09:54:14  <span class="token number">0.201982</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1005</span>    <span class="token number">2018</span>-09-20 09:54:15  <span class="token number">0.214205</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1006</span>    <span class="token number">2018</span>-09-20 09:54:16  <span class="token number">0.241863</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1007</span>    <span class="token number">2018</span>-09-20 09:54:17  <span class="token number">0.305747</span>  <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
 <span class="token number">1008</span>    <span class="token number">2018</span>-09-20 09:54:18  <span class="token number">0.18468</span>   <span class="token boolean">true</span>    <span class="token boolean">false</span>    0x55965cca     DemoServiceImpl                sayHello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-12-classloader" tabindex="-1"><a class="header-anchor" href="#_2-3-12-classloader" aria-hidden="true">#</a> 2.3.12 Classloader</h4><p>了解当前系统中有多少类加载器，以及每个加载器加载的类数量，帮助您判断是否有类加载器泄露。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ classloader
 name                                                  numberOfInstances  loadedCountTotal
 BootstrapClassLoader                                  <span class="token number">1</span>                  <span class="token number">3346</span>
 com.taobao.arthas.agent.ArthasClassloader             <span class="token number">1</span>                  <span class="token number">1262</span>
 java.net.URLClassLoader                               <span class="token number">2</span>                  <span class="token number">1033</span>
 org.apache.catalina.loader.ParallelWebappClassLoader  <span class="token number">1</span>                  <span class="token number">628</span>
 sun.reflect.DelegatingClassLoader                     <span class="token number">166</span>                <span class="token number">166</span>
 sun.misc.Launcher<span class="token variable">$AppClassLoader</span>                      <span class="token number">1</span>                  <span class="token number">31</span>
 com.alibaba.fastjson.util.ASMClassLoader              <span class="token number">6</span>                  <span class="token number">15</span>
 sun.misc.Launcher<span class="token variable">$ExtClassLoader</span>                      <span class="token number">1</span>                  <span class="token number">7</span>
 org.jvnet.hk2.internal.DelegatingClassLoader          <span class="token number">2</span>                  <span class="token number">2</span>
 sun.reflect.misc.MethodUtil                           <span class="token number">1</span>                  <span class="token number">1</span>

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-13-web-console" tabindex="-1"><a class="header-anchor" href="#_2-3-13-web-console" aria-hidden="true">#</a> 2.3.13 Web Console</h4>`,35),N={href:"https://alibaba.github.io/arthas/web-console",target:"_blank",rel:"noopener noreferrer"},U=t('<figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220827223405858.png" alt="image-20220827223405858" tabindex="0" loading="lazy"><figcaption>image-20220827223405858</figcaption></figure><h3 id="_2-4-arthas-命令集" tabindex="-1"><a class="header-anchor" href="#_2-4-arthas-命令集" aria-hidden="true">#</a> 2.4 Arthas 命令集</h3><h4 id="_2-4-1-基础命令" tabindex="-1"><a class="header-anchor" href="#_2-4-1-基础命令" aria-hidden="true">#</a> 2.4.1 基础命令</h4>',3),G=a("li",null,"help——查看命令帮助信息",-1),O={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/cat.md",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/grep.md",target:"_blank",rel:"noopener noreferrer"},X={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/pwd.md",target:"_blank",rel:"noopener noreferrer"},K=a("li",null,"cls——清空当前屏幕区域",-1),Y=a("li",null,"session——查看当前会话的信息",-1),Z={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/reset.md",target:"_blank",rel:"noopener noreferrer"},Q=a("li",null,"version——输出当前目标 Java 进程所加载的 Arthas 版本号",-1),aa=a("li",null,"history——打印命令历史",-1),sa=a("li",null,"quit——退出当前 Arthas 客户端，其他 Arthas 客户端不受影响",-1),na=a("li",null,"stop/shutdown——关闭 Arthas 服务端，所有 Arthas 客户端全部退出",-1),ea={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/keymap.md",target:"_blank",rel:"noopener noreferrer"},ta=a("h4",{id:"_2-4-2-jvm相关",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-2-jvm相关","aria-hidden":"true"},"#"),s(" 2.4.2 jvm相关")],-1),ra={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/dashboard.md",target:"_blank",rel:"noopener noreferrer"},la={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/thread.md",target:"_blank",rel:"noopener noreferrer"},oa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/jvm.md",target:"_blank",rel:"noopener noreferrer"},ia={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/sysprop.md",target:"_blank",rel:"noopener noreferrer"},ca={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/sysenv.md",target:"_blank",rel:"noopener noreferrer"},pa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/vmoption.md",target:"_blank",rel:"noopener noreferrer"},da={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/logger.md",target:"_blank",rel:"noopener noreferrer"},ua={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/getstatic.md",target:"_blank",rel:"noopener noreferrer"},ha={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/ognl.md",target:"_blank",rel:"noopener noreferrer"},ba={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/mbean.md",target:"_blank",rel:"noopener noreferrer"},ma={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/heapdump.md",target:"_blank",rel:"noopener noreferrer"},va=a("h4",{id:"_2-4-3-class-classloader相关",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-3-class-classloader相关","aria-hidden":"true"},"#"),s(" 2.4.3 class/classloader相关")],-1),ka={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/sc.md",target:"_blank",rel:"noopener noreferrer"},ga={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/sm.md",target:"_blank",rel:"noopener noreferrer"},_a={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/jad.md",target:"_blank",rel:"noopener noreferrer"},fa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/mc.md",target:"_blank",rel:"noopener noreferrer"},xa=a("code",null,".java",-1),ja=a("code",null,".class",-1),Aa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/redefine.md",target:"_blank",rel:"noopener noreferrer"},Ca=a("code",null,".class",-1),ya={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/dump.md",target:"_blank",rel:"noopener noreferrer"},Sa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/classloader.md",target:"_blank",rel:"noopener noreferrer"},wa=a("h4",{id:"_2-4-4-monitor-watch-trace相关",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-4-monitor-watch-trace相关","aria-hidden":"true"},"#"),s(" 2.4.4 monitor/watch/trace相关")],-1),Ta=a("blockquote",null,[a("p",null,[s("请注意，这些命令，都通过字节码增强技术来实现的，会在指定类的方法中插入一些切面来实现数据统计和观测，因此在线上、预发使用时，请尽量明确需要观测的类、方法以及条件，诊断结束要执行 "),a("code",null,"shutdown"),s(" 或将增强过的类执行 "),a("code",null,"reset"),s(" 命令。")])],-1),Ea={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/monitor.md",target:"_blank",rel:"noopener noreferrer"},La={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/watch.md",target:"_blank",rel:"noopener noreferrer"},Ma={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/trace.md",target:"_blank",rel:"noopener noreferrer"},Ia={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/stack.md",target:"_blank",rel:"noopener noreferrer"},qa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/tt.md",target:"_blank",rel:"noopener noreferrer"},Da=a("h4",{id:"_2-4-5-options",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-5-options","aria-hidden":"true"},"#"),s(" 2.4.5 options")],-1),Ha={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/options.md",target:"_blank",rel:"noopener noreferrer"},Wa=a("h4",{id:"_2-4-6-管道",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-6-管道","aria-hidden":"true"},"#"),s(" 2.4.6 管道")],-1),$a=a("p",null,[s("Arthas支持使用管道对上述命令的结果进行进一步的处理，如"),a("code",null,"sm java.lang.String * | grep 'index'")],-1),Pa=a("ul",null,[a("li",null,"grep——搜索满足条件的结果"),a("li",null,"plaintext——将命令的结果去除ANSI颜色"),a("li",null,"wc——按行统计输出结果")],-1),Ra=a("h4",{id:"_2-4-7-后台异步任务",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-7-后台异步任务","aria-hidden":"true"},"#"),s(" 2.4.7 后台异步任务")],-1),Fa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/async.md",target:"_blank",rel:"noopener noreferrer"},Ja=a("ul",null,[a("li",null,"使用 > 将结果重写向到日志文件，使用 & 指定命令是后台运行，session断开不影响任务执行(生命周期默认为1天)"),a("li",null,"jobs——列出所有job"),a("li",null,"kill——强制终止任务"),a("li",null,"fg——将暂停的任务拉到前台执行"),a("li",null,"bg——将暂停的任务放到后台执行")],-1),Va=a("h4",{id:"_2-4-8-web-console",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-8-web-console","aria-hidden":"true"},"#"),s(" 2.4.8 Web Console")],-1),za=a("p",null,"通过websocket连接Arthas。",-1),Na={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/web-console.md",target:"_blank",rel:"noopener noreferrer"},Ua=a("h4",{id:"_2-4-9-用户数据回报",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-9-用户数据回报","aria-hidden":"true"},"#"),s(" 2.4.9 用户数据回报")],-1),Ga=a("p",null,[s("在"),a("code",null,"3.1.4"),s("版本后，增加了用户数据回报功能，方便统一做安全或者历史数据统计。")],-1),Oa=a("p",null,[s("在启动时，指定"),a("code",null,"stat-url"),s("，就会回报执行的每一行命令，比如： "),a("code",null,"./as.sh --stat-url 'http://192.168.10.11:8080/api/stat'")],-1),Ba=a("p",null,"在tunnel server里有一个示例的回报代码，用户可以自己在服务器上实现。",-1),Xa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/https://github.com/alibaba/arthas/blob/master/tunnel-server/src/main/java/com/alibaba/arthas/tunnel/server/app/web/StatController.java",target:"_blank",rel:"noopener noreferrer"},Ka=a("h4",{id:"_2-4-10-其他特性",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-4-10-其他特性","aria-hidden":"true"},"#"),s(" 2.4.10 其他特性")],-1),Ya={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/async.md",target:"_blank",rel:"noopener noreferrer"},Za={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/save-log.md",target:"_blank",rel:"noopener noreferrer"},Qa={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/batch-support.md",target:"_blank",rel:"noopener noreferrer"},as={href:"https://github.com/alibaba/arthas/blob/master/site/src/site/sphinx/https://github.com/alibaba/arthas/issues/11",target:"_blank",rel:"noopener noreferrer"},ss=t(`<h2 id="_3-arthas场景实战" tabindex="-1"><a class="header-anchor" href="#_3-arthas场景实战" aria-hidden="true">#</a> 3. Arthas场景实战</h2><h3 id="_3-1-查看最繁忙的线程-以及是否有阻塞情况发生" tabindex="-1"><a class="header-anchor" href="#_3-1-查看最繁忙的线程-以及是否有阻塞情况发生" aria-hidden="true">#</a> 3.1 查看最繁忙的线程，以及是否有阻塞情况发生?</h3><blockquote><p>场景：我想看下查看最繁忙的线程，以及是否有阻塞情况发生? 常规查看线程，一般我们可以通过 top 等系统命令进行查看，但是那毕竟要很多个步骤，很麻烦。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>thread <span class="token parameter variable">-n</span> <span class="token number">3</span> <span class="token comment"># 查看最繁忙的三个线程栈信息</span>
thread  <span class="token comment"># 以直观的方式展现所有的线程情况</span>
thread <span class="token parameter variable">-b</span> <span class="token comment">#找出当前阻塞其他线程的线程</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-确认某个类是否已被系统加载" tabindex="-1"><a class="header-anchor" href="#_3-2-确认某个类是否已被系统加载" aria-hidden="true">#</a> 3.2 确认某个类是否已被系统加载?</h3><blockquote><p>场景：我新写了一个类或者一个方法，我想知道新写的代码是否被部署了?</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 即可以找到需要的类全路径，如果存在的话</span>
sc *MyServlet

<span class="token comment"># 查看这个某个类所有的方法</span>
sm pdai.tech.servlet.TestMyServlet *

<span class="token comment"># 查看某个方法的信息，如果存在的话</span>
sm pdai.tech.servlet.TestMyServlet testMethod  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-如何查看一个class类的源码信息" tabindex="-1"><a class="header-anchor" href="#_3-3-如何查看一个class类的源码信息" aria-hidden="true">#</a> 3.3 如何查看一个class类的源码信息?</h3><blockquote><p>场景：我新修改的内容在方法内部，而上一个步骤只能看到方法，这时候可以反编译看下源码</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 直接反编译出java 源代码，包含一此额外信息的</span>
jad pdai.tech.servlet.TestMyServlet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-重要-如何跟踪某个方法的返回值、入参" tabindex="-1"><a class="header-anchor" href="#_3-4-重要-如何跟踪某个方法的返回值、入参" aria-hidden="true">#</a> 3.4 重要：如何跟踪某个方法的返回值、入参.... ?</h3><blockquote><p>场景：我想看下我新加的方法在线运行的参数和返回值?</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 同时监控入参，返回值，及异常</span>
<span class="token function">watch</span> pdai.tech.servlet.TestMyServlet testMethod <span class="token string">&quot;{params, returnObj, throwExp}&quot;</span> <span class="token parameter variable">-e</span> <span class="token parameter variable">-x</span> <span class="token number">2</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>具体看watch命令。</p><h3 id="_3-5-如何看方法调用栈的信息" tabindex="-1"><a class="header-anchor" href="#_3-5-如何看方法调用栈的信息" aria-hidden="true">#</a> 3.5 如何看方法调用栈的信息?</h3><blockquote><p>场景：我想看下某个方法的调用栈的信息?</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>stack pdai.tech.servlet.TestMyServlet testMethod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行此命令之后需要即时触发方法才会有响应的信息打印在控制台上</p><h3 id="_3-6-重要-找到最耗时的方法调用" tabindex="-1"><a class="header-anchor" href="#_3-6-重要-找到最耗时的方法调用" aria-hidden="true">#</a> 3.6 重要：找到最耗时的方法调用?</h3><blockquote><p>场景：testMethod这个方法入口响应很慢，如何找到最耗时的子调用?</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 执行的时候每个子调用的运行时长，可以找到最耗时的子调用。</span>
trace pdai.tech.servlet.TestMyServlet testMethod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>运行此命令之后需要即时触发方法才会有响应的信息打印在控制台上，然后一层一层看子调用。</p><h3 id="_3-7-重要-如何临时更改代码运行" tabindex="-1"><a class="header-anchor" href="#_3-7-重要-如何临时更改代码运行" aria-hidden="true">#</a> 3.7 重要：如何临时更改代码运行?</h3><blockquote><p>场景：我找到了问题所在，能否线上直接修改测试，而不需要在本地改了代码后，重新打包部署，然后重启观察效果?</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先反编译出class源码</span>
jad --source-only com.example.demo.arthas.user.UserController <span class="token operator">&gt;</span> /tmp/UserController.java  

<span class="token comment"># 然后使用外部工具编辑内容</span>
<span class="token function">mc</span> /tmp/UserController.java <span class="token parameter variable">-d</span> /tmp  <span class="token comment"># 再编译成class</span>

<span class="token comment"># 最后，重新载入定义的类，就可以实时验证你的猜测了</span>
redefine /tmp/com/example/demo/arthas/user/UserController.class

  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上，是直接更改线上代码的方式，但是一般好像是编译不成功的。所以，最好是本地ide编译成 class文件后，再上传替换为好！</p><p>总之，已经完全不用重启和发布了！这个功能真的很方便，比起重启带来的代价，真的是不可比的。比如，重启时可能导致负载重分配，选主等等问题，就不是你能控制的了。</p><h3 id="_3-8-我如何测试某个方法的性能问题" tabindex="-1"><a class="header-anchor" href="#_3-8-我如何测试某个方法的性能问题" aria-hidden="true">#</a> 3.8 我如何测试某个方法的性能问题?</h3><blockquote><p>场景：我想看下某个方法的性能</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>monitor <span class="token parameter variable">-c</span> <span class="token number">5</span> demo.MathGame primeFactors
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-arthas源码" tabindex="-1"><a class="header-anchor" href="#_4-arthas源码" aria-hidden="true">#</a> 4. Arthas源码</h2><p>首先我们先放出一张整体宏观的模块调用图：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/image-20220827225837014.png" alt="image-20220827225837014" tabindex="0" loading="lazy"><figcaption>image-20220827225837014</figcaption></figure><p>源码理解可以看移步这两篇文章:</p>`,34),ns={href:"https://www.jianshu.com/p/70c1c55f12ef",target:"_blank",rel:"noopener noreferrer"},es={href:"https://yq.aliyun.com/articles/704228",target:"_blank",rel:"noopener noreferrer"},ts=a("h2",{id:"_5-优秀案例",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_5-优秀案例","aria-hidden":"true"},"#"),s(" 5. 优秀案例")],-1),rs={href:"https://github.com/alibaba/arthas/issues/1892",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://github.com/alibaba/arthas/issues/1202",target:"_blank",rel:"noopener noreferrer"},os={href:"https://github.com/alibaba/arthas/issues/1416",target:"_blank",rel:"noopener noreferrer"},is={href:"https://github.com/alibaba/arthas/issues/729",target:"_blank",rel:"noopener noreferrer"},cs={href:"https://hengyun.tech/arthas-spring-boot-404-401/",target:"_blank",rel:"noopener noreferrer"},ps={href:"https://github.com/alibaba/arthas/issues/597",target:"_blank",rel:"noopener noreferrer"},ds=a("ul",null,[a("li",null,"为什么有时候trace 是多层的")],-1),us={href:"https://github.com/alibaba/arthas/issues/569",target:"_blank",rel:"noopener noreferrer"},hs={href:"https://github.com/alibaba/arthas/issues/537#top",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://github.com/alibaba/arthas/issues/434#top",target:"_blank",rel:"noopener noreferrer"},ms={href:"https://github.com/alibaba/arthas/issues/160#top",target:"_blank",rel:"noopener noreferrer"},vs={href:"https://github.com/alibaba/arthas/issues/71#top",target:"_blank",rel:"noopener noreferrer"},ks={href:"https://github.com/alibaba/arthas/issues/20#top",target:"_blank",rel:"noopener noreferrer"},gs=a("h2",{id:"参考文章",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),s(" 参考文章")],-1),_s={href:"https://pdai.tech/md/java/jvm/java-jvm-agent-arthas.html",target:"_blank",rel:"noopener noreferrer"};function fs(xs,js){const n=i("ExternalLinkIcon");return l(),o("div",null,[p,d,a("blockquote",null,[a("p",null,[s("在学习Arthas之前，推荐先看上一篇美团技术团队的"),a("a",u,[s("Java 动态调试技术原理及实践"),e(n)]),s("，这样你会对它最底层技术有个了解。可以看下文中最后有个对比图：Greys(Arthas也是基于它做的二次开发)和Java-debug-tool。")])]),h,a("ul",null,[a("li",null,[a("a",b,[s("用户文档"),e(n)])]),a("li",null,[a("a",m,[s("官方在线教程(推荐) "),e(n)])]),a("li",null,[a("a",v,[s("快速入门"),e(n)])]),a("li",null,[a("a",k,[s("进阶使用"),e(n)])]),a("li",null,[a("a",g,[s("命令列表"),e(n)])]),a("li",null,[a("a",_,[s("WebConsole "),e(n)])]),a("li",null,[a("a",f,[s("Docker"),e(n)])]),a("li",null,[a("a",x,[s("用户案例"),e(n)])]),a("li",null,[a("a",j,[s("常见问题"),e(n)])])]),A,a("ul",null,[a("li",null,[a("a",C,[s("greys-anatomy"),e(n)]),s(": Arthas代码基于Greys二次开发而来，非常感谢Greys之前所有的工作，以及Greys原作者对Arthas提出的意见和建议！")]),a("li",null,[a("a",y,[s("termd"),e(n)]),s(": Arthas的命令行实现基于termd开发，是一款优秀的命令行程序开发框架，感谢termd提供了优秀的框架。")]),a("li",null,[a("a",S,[s("crash"),e(n)]),s(": Arthas的文本渲染功能基于crash中的文本渲染功能开发，可以从"),a("a",w,[s("这里"),e(n)]),s("看到源码，感谢crash在这方面所做的优秀工作。")]),a("li",null,[a("a",T,[s("cli"),e(n)]),s(": Arthas的命令行界面基于vert.x提供的cli库进行开发，感谢vert.x在这方面做的优秀工作。")]),a("li",null,[a("a",E,[s("compiler"),e(n)]),s(" Arthas里的内存编绎器代码来源")]),a("li",null,[a("a",L,[s("Apache Commons Net"),e(n)]),s(" Arthas里的Telnet Client代码来源")]),M,I]),q,a("ul",null,[D,H,a("li",null,[a("a",W,[s("去哪儿Bistoury: 一个集成了Arthas的项目"),e(n)])]),a("li",null,[a("a",$,[s("一个使用MVEL脚本的fork "),e(n)])])]),P,R,a("p",null,[s("推荐先在线使用下arthas："),a("a",F,[s("官方在线教程(推荐) "),e(n)])]),J,a("ul",null,[a("li",null,[a("a",V,[s("https://alibaba.github.io/arthas/dashboard"),e(n)])])]),z,a("ul",null,[a("li",null,[a("a",N,[s("https://alibaba.github.io/arthas/web-console"),e(n)])])]),U,a("ul",null,[G,a("li",null,[a("a",O,[s("cat"),e(n)]),s("——打印文件内容，和linux里的cat命令类似")]),a("li",null,[a("a",B,[s("grep"),e(n)]),s("——匹配查找，和linux里的grep命令类似")]),a("li",null,[a("a",X,[s("pwd"),e(n)]),s("——返回当前的工作目录，和linux命令类似")]),K,Y,a("li",null,[a("a",Z,[s("reset"),e(n)]),s("——重置增强类，将被 Arthas 增强过的类全部还原，Arthas 服务端关闭时会重置所有增强过的类")]),Q,aa,sa,na,a("li",null,[a("a",ea,[s("keymap"),e(n)]),s("——Arthas快捷键列表及自定义快捷键")])]),ta,a("ul",null,[a("li",null,[a("a",ra,[s("dashboard"),e(n)]),s("——当前系统的实时数据面板")]),a("li",null,[a("a",la,[s("thread"),e(n)]),s("——查看当前 JVM 的线程堆栈信息")]),a("li",null,[a("a",oa,[s("jvm"),e(n)]),s("——查看当前 JVM 的信息")]),a("li",null,[a("a",ia,[s("sysprop"),e(n)]),s("——查看和修改JVM的系统属性")]),a("li",null,[a("a",ca,[s("sysenv"),e(n)]),s("——查看JVM的环境变量")]),a("li",null,[a("a",pa,[s("vmoption"),e(n)]),s("——查看和修改JVM里诊断相关的option")]),a("li",null,[a("a",da,[s("logger"),e(n)]),s("——查看和修改logger")]),a("li",null,[a("a",ua,[s("getstatic"),e(n)]),s("——查看类的静态属性")]),a("li",null,[a("a",ha,[s("ognl"),e(n)]),s("——执行ognl表达式")]),a("li",null,[a("a",ba,[s("mbean"),e(n)]),s("——查看 Mbean 的信息")]),a("li",null,[a("a",ma,[s("heapdump"),e(n)]),s("——dump java heap, 类似jmap命令的heap dump功能")])]),va,a("ul",null,[a("li",null,[a("a",ka,[s("sc"),e(n)]),s("——查看JVM已加载的类信息")]),a("li",null,[a("a",ga,[s("sm"),e(n)]),s("——查看已加载类的方法信息")]),a("li",null,[a("a",_a,[s("jad"),e(n)]),s("——反编译指定已加载类的源码")]),a("li",null,[a("a",fa,[s("mc"),e(n)]),s("——内存编绎器，内存编绎"),xa,s("文件为"),ja,s("文件")]),a("li",null,[a("a",Aa,[s("redefine"),e(n)]),s("——加载外部的"),Ca,s("文件，redefine到JVM里")]),a("li",null,[a("a",ya,[s("dump"),e(n)]),s("——dump 已加载类的 byte code 到特定目录")]),a("li",null,[a("a",Sa,[s("classloader"),e(n)]),s("——查看classloader的继承树，urls，类加载信息，使用classloader去getResource")])]),wa,Ta,a("ul",null,[a("li",null,[a("a",Ea,[s("monitor"),e(n)]),s("——方法执行监控")]),a("li",null,[a("a",La,[s("watch"),e(n)]),s("——方法执行数据观测")]),a("li",null,[a("a",Ma,[s("trace"),e(n)]),s("——方法内部调用路径，并输出方法路径上的每个节点上耗时")]),a("li",null,[a("a",Ia,[s("stack"),e(n)]),s("——输出当前方法被调用的调用路径")]),a("li",null,[a("a",qa,[s("tt"),e(n)]),s("——方法执行数据的时空隧道，记录下指定方法每次调用的入参和返回信息，并能对这些不同的时间下调用进行观测")])]),Da,a("ul",null,[a("li",null,[a("a",Ha,[s("options"),e(n)]),s("——查看或设置Arthas全局开关")])]),Wa,$a,Pa,Ra,a("p",null,[s("当线上出现偶发的问题，比如需要watch某个条件，而这个条件一天可能才会出现一次时，异步后台任务就派上用场了，详情请参考"),a("a",Fa,[s("这里"),e(n)])]),Ja,Va,za,a("ul",null,[a("li",null,[a("a",Na,[s("Web Console"),e(n)])])]),Ua,Ga,Oa,Ba,a("p",null,[a("a",Xa,[s("StatController.java"),e(n)])]),Ka,a("ul",null,[a("li",null,[a("a",Ya,[s("异步命令支持"),e(n)])]),a("li",null,[a("a",Za,[s("执行结果存日志"),e(n)])]),a("li",null,[a("a",Qa,[s("批处理的支持"),e(n)])]),a("li",null,[a("a",as,[s("ognl表达式的用法说明"),e(n)])])]),ss,a("ul",null,[a("li",null,[a("a",ns,[s("什么是 Arthas"),e(n)])]),a("li",null,[a("a",es,[s("Arthas阅读"),e(n)])])]),ts,a("ul",null,[a("li",null,[a("p",null,[a("a",rs,[s("通过 Arthas Trace 命令将接口性能优化十倍"),e(n)])])]),a("li",null,[a("p",null,[a("a",ls,[s("利用Arthas精准定位Java应用CPU负载过高问题"),e(n)])])]),a("li",null,[a("p",null,[a("a",os,[s("使用arthas+jprofiler做复杂链路分析"),e(n)])])]),a("li",null,[a("p",null,[a("a",is,[s("Arthas实践：是哪个Controller处理了请求？"),e(n)])])]),a("li",null,[a("p",null,[a("a",cs,[s("Arthas实践--快速排查Spring Boot应用404/401问题"),e(n)])])]),a("li",null,[a("p",null,[a("a",ps,[s("Arthas里 Trace 命令怎样工作的/ Trace命令的实现原理"),e(n)])]),ds]),a("li",null,[a("p",null,[a("a",us,[s("引发线程cpu占用率持续飙升的根因分析"),e(n)])])]),a("li",null,[a("p",null,[a("a",hs,[s("Arthas实践--jad/mc/redefine线上热更新一条龙"),e(n)])])]),a("li",null,[a("p",null,[a("a",bs,[s("watch/monitor/trace 等判断重载函数/同名函数"),e(n)])])]),a("li",null,[a("p",null,[a("a",ms,[s("利用Arthas排查Spring Boot应用NoSuchMethodError"),e(n)])])]),a("li",null,[a("p",null,[a("a",vs,[s("Arthas的一些特殊用法文档说明"),e(n)])])]),a("li",null,[a("p",null,[a("a",ks,[s("【Arthas问题排查集】谁调用了System.exit/System.gc?"),e(n)])])])]),gs,a("p",null,[a("a",_s,[s("调试排错 - Java 问题排查之应用在线调试Arthas"),e(n)])])])}const Cs=r(c,[["render",fs],["__file","java-jvm-agent-arthas.html.vue"]]);export{Cs as default};
