import{_ as a,W as e,X as t,Y as n,Z as o,$ as p,a0 as l,D as c}from"./framework-f64bc974.js";const i={},u=l(`<h1 id="前端js-vue下载后台传过来的流文件" tabindex="-1"><a class="header-anchor" href="#前端js-vue下载后台传过来的流文件" aria-hidden="true">#</a> 前端js/vue下载后台传过来的流文件</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>项目中经常需要用到下载文件，如导出用户信息，下载一些文件等。我们在vue中如何实现呢？主要有如下两种方案</p><ul><li>使用Blob对象，构造a标签</li><li>使用封装好的<strong>js-file-download</strong></li></ul><blockquote><p>这两种方法下载的文件都<strong>不会乱码</strong>，但是 <strong>不管使用哪种方法，发送请求时都要设置 responseType</strong></p></blockquote><h2 id="_2-方案一-使用blob对象-构造a标签" tabindex="-1"><a class="header-anchor" href="#_2-方案一-使用blob对象-构造a标签" aria-hidden="true">#</a> 2. 方案一：使用Blob对象，构造a标签</h2><h3 id="_2-1-blob-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-blob-简介" aria-hidden="true">#</a> 2.1 Blob 简介</h3><p>Blob对象表示一个不可变、原始数据的类文件对象。Blob 表示的不一定是JavaScript原生格式的数据。File接口基于Blob，继承了blob的功能并将其扩展使其支持用户系统上的文件。</p><h3 id="_2-2-blob-构造函数" tabindex="-1"><a class="header-anchor" href="#_2-2-blob-构造函数" aria-hidden="true">#</a> 2.2 Blob()构造函数</h3><p>语法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> aBlob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span> array<span class="token punctuation">,</span> options <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数</p><ul><li><em>array</em> 是一个由<code>ArrayBuffer</code> <code>ArrayBufferView</code>, Blob<code>, </code>DOMString<code>等对象构成的 [</code>Array<code>，或者其他类似对象的混合体，它将会被放进 </code>Blob\`。DOMStrings会被编码为UTF-8。</li><li><em>options</em> 是可选的，它可能会指定如下两个属性： <ul><li><code>type</code>，默认值为 <code>&quot;&quot;</code>，它代表了将会被放入到blob中的数组内容的MIME类型。<strong>也就是设置文件类型。</strong></li><li><code>endings</code>，默认值为<code>&quot;transparent&quot;</code>，用于指定包含行结束符<code>\\n</code>的字符串如何被写入。 它是以下两个值中的一个： <code>&quot;native&quot;</code>，代表行结束符会被更改为适合宿主操作系统文件系统的换行符，或者 <code>&quot;transparent&quot;</code>，代表会保持blob中保存的结束符不变。</li></ul></li></ul><h3 id="_2-3-url对象" tabindex="-1"><a class="header-anchor" href="#_2-3-url对象" aria-hidden="true">#</a> 2.3 URL对象</h3><p>通过创建URL对象指定文件的下载链接。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建新的URL表示指定的File对象或者Blob对象。</span>
<span class="token keyword">let</span> objectURL <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span> 
window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>objectURL<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 释放内存</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>在每次调用createObjectURL()方法时，都会创建一个新的 URL 对象，即使你已经用相同的对象作为参数创建过。当不再需要这些 URL 对象时，每个对象必须通过调用 URL.revokeObjectURL()方法来释放。浏览器会在文档退出的时候自动释放它们，但是为了获得最佳性能和内存使用状况，你应该在安全的时机主动释放掉它们。</p></blockquote><h3 id="_2-4-利用a标签自定义文件名" tabindex="-1"><a class="header-anchor" href="#_2-4-利用a标签自定义文件名" aria-hidden="true">#</a> 2.4 利用a标签自定义文件名</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成一个a标签。</span>
link<span class="token punctuation">.</span>href <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// href属性指定下载链接</span>
link<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName<span class="token punctuation">;</span> <span class="token comment">// dowload属性指定文件名</span>
link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// click()事件触发下载</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>download 属性设置文件名时，可以直接设置扩展名。如果没有设置，则浏览器将自动检测正确的文件扩展名并添加到文件 。</p><h3 id="_2-5-主要完整代码" tabindex="-1"><a class="header-anchor" href="#_2-5-主要完整代码" aria-hidden="true">#</a> 2.5 主要完整代码</h3><ul><li><p>普通下载</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>postUrl<span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;arraybuffer&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建Blob对象，设置文件类型</span>
    <span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;application/vnd.ms-excel&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> objectUrl <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span> <span class="token comment">// 创建URL</span>
    location<span class="token punctuation">.</span>href <span class="token operator">=</span> objectUrl<span class="token punctuation">;</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>objectUrl<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 释放内存</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>自定义下载后的文件名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 利用a标签自定义下载文件名</span>
<span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>

axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>postUrl<span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;arraybuffer&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建Blob对象，设置文件类型</span>
    <span class="token keyword">let</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;application/vnd.ms-excel&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> objectUrl <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span> <span class="token comment">// 创建URL</span>
    link<span class="token punctuation">.</span>href <span class="token operator">=</span> objectUrl
    link<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&#39;xxx&#39;</span> <span class="token comment">// 自定义文件名</span>
    link<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 下载文件</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>objectUrl<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 释放内存</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_3-方案二-使用-js-file-download" tabindex="-1"><a class="header-anchor" href="#_3-方案二-使用-js-file-download" aria-hidden="true">#</a> 3. 方案二：使用 <code>js-file-download</code></h2><ul><li><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> js-file-download <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> fileDownload <span class="token keyword">from</span> <span class="token string">&#39;js-file-download&#39;</span>

axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>postUrl<span class="token punctuation">,</span> params<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;arraybuffer&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">fileDownload</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token string">&#39;xxx.xls&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_4-可能遇到的问题" tabindex="-1"><a class="header-anchor" href="#_4-可能遇到的问题" aria-hidden="true">#</a> 4. 可能遇到的问题</h2><h3 id="_4-1-axios获取不到文件名" tabindex="-1"><a class="header-anchor" href="#_4-1-axios获取不到文件名" aria-hidden="true">#</a> 4.1 axios获取不到文件名</h3><ol><li><p>需要在服务端加上此请求头</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//响应时在响应头里添加 Access-Control-Expose-Headers </span>
 response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Expose-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>前端还是用原生的axios post 方法吧</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>download(url, params, filename) {
        // NProgress.start()
        return axios.post(url, params, {
            timeout: 300000,
            baseURL: baseUrl,
            transformRequest: [(params) =&gt; {
                return tansParams(params);
            }],
            headers: {
                &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;,
                &quot;Authorization&quot;: &quot;Bearer &quot; + getToken()
            },
            responseType: &quot;blob&quot;
        }).then((response) =&gt; {
            if (filename == null||filename== undefined||filename==&#39;&#39;){
                // 前提是服务端要在header设置Access-Control-Expose-Headers: Content-Disposition
                // 前端才能正常获取到Content-Disposition内容
                const disposition = response.headers[&quot;content-disposition&quot;];
                let filename = disposition.substring(disposition.indexOf(&quot;filename=&quot;) + 9, disposition.length);
                // iso8859-1的字符转换成中文
                filename = decodeURI(escape(filename));
                // 去掉双引号
                filename = filename.replace(/\\&quot;/g, &quot;&quot;);
            }
            
            const content = response.data;
            const blob = new Blob([content]);
            if (&quot;download&quot; in document.createElement(&quot;a&quot;)) {
                const elink = document.createElement(&quot;a&quot;);
                elink.download = filename;
                elink.style.display = &quot;none&quot;;
                elink.href = URL.createObjectURL(blob);
                document.body.appendChild(elink);
                elink.click();
                URL.revokeObjectURL(elink.href);
                document.body.removeChild(elink);
            } else {
                navigator.msSaveBlob(blob, filename);
            }
            // NProgress.done()
        }).catch((r) =&gt; {
        });
    },
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,28),r={href:"https://segmentfault.com/a/1190000020540788",target:"_blank",rel:"noopener noreferrer"};function d(k,v){const s=c("ExternalLinkIcon");return e(),t("div",null,[u,n("p",null,[n("a",r,[o("前端js/vue下载后台传过来的流文件（如excel）并设置下载文件名"),p(s)])])])}const m=a(i,[["render",d],["__file","fe-download.html.vue"]]);export{m as default};
