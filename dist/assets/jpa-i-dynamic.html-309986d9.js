import{_ as e,W as s,X as t,Y as a,Z as p,$ as i,a0 as r,D as c}from"./framework-f64bc974.js";const o={},d=r(`<h2 id="dynamicinsert和-dynamicupdate生成动态sql语句" tabindex="-1"><a class="header-anchor" href="#dynamicinsert和-dynamicupdate生成动态sql语句" aria-hidden="true">#</a> @DynamicInsert和@DynamicUpdate生成动态SQL语句</h2><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>@DynamicUpdate@DynamicInsert 是hibernate里面的注解</p><ul><li><p><strong>@DynamicInsert属性:</strong></p><p>设置为true,设置为true,表示insert对象的时候,生成动态的insert语句,如果这个字段的值是null就不会加入到insert语句当中.默认false。</p><blockquote><p>比如希望数据库插入日期或时间戳字段时，在对象字段为空的情况下，表字段能自动填写当前的sysdate。</p></blockquote></li><li><p><strong>@DynamicUpdate属性</strong>:</p><p>设置为true,设置为true,表示update对象的时候,生成动态的update语句,如果这个字段的值是null就不会被加入到update语句中,默认false。</p><blockquote><p>比如只想更新某个属性，但是却把整个对象的属性都更新了，这并不是我们希望的结果，我们希望的结果是：我更改了哪些字段，只要更新我修改的字段就够了。</p></blockquote></li></ul><h2 id="_2-举例" tabindex="-1"><a class="header-anchor" href="#_2-举例" aria-hidden="true">#</a> 2. 举例</h2><h3 id="_2-1-动态插入" tabindex="-1"><a class="header-anchor" href="#_2-1-动态插入" aria-hidden="true">#</a> 2.1 动态插入</h3><p><strong>@DynamicInsert注解下Hibernate日志打印SQL：</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> Cat <span class="token punctuation">(</span>cat_name<span class="token punctuation">,</span> id<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>?<span class="token punctuation">,</span> ?<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>反之</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> Cat <span class="token punctuation">(</span>create_time<span class="token punctuation">,</span> update_time<span class="token punctuation">,</span> cat_name<span class="token punctuation">,</span> id<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span>?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">,</span> ?<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-2-动态更新" tabindex="-1"><a class="header-anchor" href="#_2-2-动态更新" aria-hidden="true">#</a> 2.2 动态更新</h3><p>@DynamicUpdate注解下Hibernate日志打印SQL：</p><p>说明：如果字段有更新，Hibernate才会对该字段进行更新</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> Cat <span class="token keyword">set</span> update_time<span class="token operator">=</span>? <span class="token keyword">where</span> id<span class="token operator">=</span>?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>反之Cat实体类去掉@DynamicUpdate</p><p>说明：不管字段有没有更新，Hibernate都会对该字段进行更新</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> Cat <span class="token keyword">set</span> update_time<span class="token operator">=</span>?<span class="token punctuation">,</span> cat_name<span class="token operator">=</span>? <span class="token keyword">where</span> id<span class="token operator">=</span>?  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结:</h2><p>如果不需要全表更新就加上@DynamicInsert和@DynamicUpdate</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,20),l={href:"https://blog.csdn.net/itguangit/article/details/78696767",target:"_blank",rel:"noopener noreferrer"};function u(h,k){const n=c("ExternalLinkIcon");return s(),t("div",null,[d,a("p",null,[a("a",l,[p("Spring Data JPA注解@DynamicInsert和@DynamicUpdate"),i(n)])])])}const _=e(o,[["render",u],["__file","jpa-i-dynamic.html.vue"]]);export{_ as default};
