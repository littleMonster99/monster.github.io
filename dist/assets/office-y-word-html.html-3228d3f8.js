import{_ as a,W as t,X as p,Y as n,Z as e,$ as o,a0 as c,D as l}from"./framework-f64bc974.js";const i={},u=c(`<h1 id="java中word转html" tabindex="-1"><a class="header-anchor" href="#java中word转html" aria-hidden="true">#</a> java中word转html</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><h2 id="_2-实现" tabindex="-1"><a class="header-anchor" href="#_2-实现" aria-hidden="true">#</a> 2. 实现</h2><h3 id="_2-1-maven依赖" tabindex="-1"><a class="header-anchor" href="#_2-1-maven依赖" aria-hidden="true">#</a> 2.1 maven依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 针对2007以上版本的库 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>poi-ooxml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 针对2003版本的库 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.poi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>poi-scratchpad<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>fr.opensagres.xdocreport<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fr.opensagres.poi.xwpf.converter.xhtml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>经我测试只需要这些依赖即可完成引用。网上大部分依赖都已较为过时，而且来源都差不多。其它文章中提到的库“org.apache.poi.xwpf.converter.xhtml”的artifactId已经修改为“fr.opensagres”开头，如果有其它需要依赖的按需加入即可。poi新版本API有变化，所以对应的其他包需要引入最新版本。</p></blockquote><h3 id="_2-2-转换代码" tabindex="-1"><a class="header-anchor" href="#_2-2-转换代码" aria-hidden="true">#</a> 2.2 转换代码</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>core<span class="token punctuation">.</span>img<span class="token punctuation">.</span></span><span class="token class-name">ImgUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">fr<span class="token punctuation">.</span>opensagres<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>xhtml<span class="token punctuation">.</span></span><span class="token class-name">Base64EmbedImgManager</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">fr<span class="token punctuation">.</span>opensagres<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>xhtml<span class="token punctuation">.</span></span><span class="token class-name">XHTMLConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">fr<span class="token punctuation">.</span>opensagres<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>converter<span class="token punctuation">.</span>xhtml<span class="token punctuation">.</span></span><span class="token class-name">XHTMLOptions</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hwpf<span class="token punctuation">.</span></span><span class="token class-name">HWPFDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>hwpf<span class="token punctuation">.</span>converter<span class="token punctuation">.</span></span><span class="token class-name">WordToHtmlConverter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>openxml4j<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ZipSecureFile</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>w3c<span class="token punctuation">.</span>dom<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>parsers<span class="token punctuation">.</span></span><span class="token class-name">DocumentBuilderFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>parsers<span class="token punctuation">.</span></span><span class="token class-name">ParserConfigurationException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">OutputKeys</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">Transformer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">TransformerException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span></span><span class="token class-name">TransformerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>dom<span class="token punctuation">.</span></span><span class="token class-name">DOMSource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">StreamResult</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferedImage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * office转换工具测试
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OfficeConvertUtil</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 将word2003转换为html文件 2017-2-27
     *
     * <span class="token keyword">@param</span> <span class="token parameter">wordPath</span> word文件路径
     * <span class="token keyword">@param</span> <span class="token parameter">wordName</span> word文件名称无后缀
     * <span class="token keyword">@param</span> <span class="token parameter">suffix</span>   word文件后缀
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">TransformerException</span></span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">ParserConfigurationException</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">Word2003ToHtml</span><span class="token punctuation">(</span><span class="token class-name">String</span> wordPath<span class="token punctuation">,</span> <span class="token class-name">String</span> wordName<span class="token punctuation">,</span>
                                        <span class="token class-name">String</span> suffix<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">TransformerException</span><span class="token punctuation">,</span>
            <span class="token class-name">ParserConfigurationException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> htmlPath <span class="token operator">=</span> wordPath <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">&quot;html&quot;</span>
                <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span>
        <span class="token class-name">String</span> htmlName <span class="token operator">=</span> wordName <span class="token operator">+</span> <span class="token string">&quot;.html&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> imagePath <span class="token operator">=</span> htmlPath <span class="token operator">+</span> <span class="token string">&quot;image&quot;</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span>

        <span class="token comment">// 判断html文件是否存在，每次重新生成</span>
        <span class="token class-name">File</span> htmlFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>htmlPath <span class="token operator">+</span> htmlName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//      if (htmlFile.exists()) {</span>
<span class="token comment">//          return htmlFile.getAbsolutePath();</span>
<span class="token comment">//      }</span>

        <span class="token comment">// 原word文档</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> file <span class="token operator">=</span> wordPath <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> wordName <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
        <span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HWPFDocument</span> wordDocument <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HWPFDocument</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WordToHtmlConverter</span> wordToHtmlConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WordToHtmlConverter</span><span class="token punctuation">(</span>
                <span class="token class-name">DocumentBuilderFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newDocumentBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">newDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        wordToHtmlConverter<span class="token punctuation">.</span><span class="token function">setPicturesManager</span><span class="token punctuation">(</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> pictureType<span class="token punctuation">,</span> suggestedName<span class="token punctuation">,</span> widthInches<span class="token punctuation">,</span> heightInches<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">BufferedImage</span> bufferedImage <span class="token operator">=</span> <span class="token class-name">ImgUtil</span><span class="token punctuation">.</span><span class="token function">toImage</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> base64Img <span class="token operator">=</span> <span class="token class-name">ImgUtil</span><span class="token punctuation">.</span><span class="token function">toBase64</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> pictureType<span class="token punctuation">.</span><span class="token function">getExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token comment">//  带图片的word，则将图片转为base64编码，保存在一个页面中</span>
            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>base64Img<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;data:;base64,&quot;</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;data:;base64,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>base64Img<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 解析word文档</span>
        wordToHtmlConverter<span class="token punctuation">.</span><span class="token function">processDocument</span><span class="token punctuation">(</span>wordDocument<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Document</span> htmlDocument <span class="token operator">=</span> wordToHtmlConverter<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 生成html文件上级文件夹</span>
        <span class="token class-name">File</span> folder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>htmlPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>folder<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            folder<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 生成html文件地址</span>
        <span class="token class-name">OutputStream</span> outStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>htmlFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">DOMSource</span> domSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DOMSource</span><span class="token punctuation">(</span>htmlDocument<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StreamResult</span> streamResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StreamResult</span><span class="token punctuation">(</span>outStream<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">TransformerFactory</span> factory <span class="token operator">=</span> <span class="token class-name">TransformerFactory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Transformer</span> serializer <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newTransformer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">setOutputProperty</span><span class="token punctuation">(</span><span class="token class-name">OutputKeys</span><span class="token punctuation">.</span><span class="token constant">ENCODING</span><span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">setOutputProperty</span><span class="token punctuation">(</span><span class="token class-name">OutputKeys</span><span class="token punctuation">.</span><span class="token constant">INDENT</span><span class="token punctuation">,</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">setOutputProperty</span><span class="token punctuation">(</span><span class="token class-name">OutputKeys</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        serializer<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>domSource<span class="token punctuation">,</span> streamResult<span class="token punctuation">)</span><span class="token punctuation">;</span>

        outStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> htmlFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 2007版本word转换成html 2017-2-27
     *
     * <span class="token keyword">@param</span> <span class="token parameter">wordPath</span> word文件路径
     * <span class="token keyword">@param</span> <span class="token parameter">wordName</span> word文件名称无后缀
     * <span class="token keyword">@param</span> <span class="token parameter">suffix</span>   word文件后缀
     * <span class="token keyword">@return</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">Word2007ToHtml</span><span class="token punctuation">(</span><span class="token class-name">String</span> wordPath<span class="token punctuation">,</span> <span class="token class-name">String</span> wordName<span class="token punctuation">,</span> <span class="token class-name">String</span> suffix<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ZipSecureFile</span><span class="token punctuation">.</span><span class="token function">setMinInflateRatio</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.0d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> htmlPath <span class="token operator">=</span> wordPath <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> <span class="token string">&quot;html&quot;</span>
                <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span>
        <span class="token class-name">String</span> htmlName <span class="token operator">=</span> wordName <span class="token operator">+</span> <span class="token string">&quot;.html&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> imagePath <span class="token operator">=</span> htmlPath <span class="token operator">+</span> <span class="token string">&quot;image&quot;</span> <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span>

        <span class="token comment">// 判断html文件是否存在</span>
        <span class="token class-name">File</span> htmlFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>htmlPath <span class="token operator">+</span> htmlName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//      if (htmlFile.exists()) {</span>
<span class="token comment">//          return htmlFile.getAbsolutePath();</span>
<span class="token comment">//      }</span>

        <span class="token comment">// word文件</span>
        <span class="token class-name">File</span> wordFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>wordPath <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator <span class="token operator">+</span> wordName <span class="token operator">+</span> suffix<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 1) 加载word文档生成 XWPFDocument对象</span>
        <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>wordFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XWPFDocument</span> document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2) 解析 XHTML配置 (这里设置IURIResolver来设置图片存放的目录)</span>
        <span class="token class-name">File</span> imgFolder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>imagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//  带图片的word，则将图片转为base64编码，保存在一个页面中</span>
        <span class="token class-name">XHTMLOptions</span> options <span class="token operator">=</span> <span class="token class-name">XHTMLOptions</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indent</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setImageManager</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Base64EmbedImgManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3) 将 XWPFDocument转换成XHTML</span>
        <span class="token comment">// 生成html文件上级文件夹</span>
        <span class="token class-name">File</span> folder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>htmlPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>folder<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            folder<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">OutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>htmlFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XHTMLConverter</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> out<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> htmlFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Word2003ToHtml</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\temp\\\\word&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;21&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Word2007ToHtml</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\temp\\\\word&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.docx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-使用感受" tabindex="-1"><a class="header-anchor" href="#_3-使用感受" aria-hidden="true">#</a> 3. 使用感受</h2><ol><li>Docx转的格式都没了，效果不满意</li><li>Doc 格式倒是还好</li></ol><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,11),k={href:"https://zhuanlan.zhihu.com/p/139287354",target:"_blank",rel:"noopener noreferrer"};function r(m,d){const s=l("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[n("a",k,[e("使用POI实现word转html"),o(s)])])])}const b=a(i,[["render",r],["__file","office-y-word-html.html.vue"]]);export{b as default};
