import{_ as e,W as a,X as i,a0 as n}from"./framework-f64bc974.js";const r={},t=n(`<h1 id="根据端口号-进程号查项目位置" tabindex="-1"><a class="header-anchor" href="#根据端口号-进程号查项目位置" aria-hidden="true">#</a> 根据端口号/进程号查项目位置</h1><h2 id="_1-根据端口号查pid" tabindex="-1"><a class="header-anchor" href="#_1-根据端口号查pid" aria-hidden="true">#</a> 1. 根据端口号查pid</h2><p>仅有端口号时，需要根据端口号先查出进程号</p><ul><li><p>方式一：losf</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>losf -i:{port}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>![image-20191023093133400](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191023093133400.png)</p></li><li><p>方式二：netstat</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>netstat -tunlp|grep {port}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>![image-20191023093229618](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191023093229618.png)</p></li></ul><h2 id="_2-根据pid查路径" tabindex="-1"><a class="header-anchor" href="#_2-根据pid查路径" aria-hidden="true">#</a> 2. 根据pid查路径</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ll /proc/9293
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以查到所有pid相关的信息，其中cwd就是进程所在位置</p><p>![image-20191023093453433](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191023093453433.png)</p><p>当然也可以直接加上cwd查询位置</p><p>![image-20191023093531560](/Users/zhangshengzhong/Library/Application Support/typora-user-images/image-20191023093531560.png)</p>`,10),s=[t];function d(p,l){return a(),i("div",null,s)}const c=e(r,[["render",d],["__file","linux-y-pid-localtion.html.vue"]]);export{c as default};
