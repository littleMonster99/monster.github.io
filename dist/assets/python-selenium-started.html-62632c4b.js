import{_ as s,W as t,X as l,Y as e,Z as i,$ as a,a0 as d,D as r}from"./framework-f64bc974.js";const o={},c=d(`<h1 id="selenium入门" tabindex="-1"><a class="header-anchor" href="#selenium入门" aria-hidden="true">#</a> Selenium入门</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>Selenium是 自动化测试工具。它支持各种浏览器，包括 Chrome，Safari，Firefox 等主流界面式浏览器。主要用电脑模拟人操作浏览器网页，可以实现自动化，测试等</p><h2 id="_2-初步体验" tabindex="-1"><a class="header-anchor" href="#_2-初步体验" aria-hidden="true">#</a> 2. 初步体验</h2><blockquote><p>忽略安装Selenium 和 浏览器驱动安装和配置，如有需求自行百度</p></blockquote><p>运行如下代码，会自动打开浏览器，然后访问百度。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>from selenium import webdriver

browser = webdriver.Chrome()
# browser = webdriver.Chrome(r&quot;C:\\Users\\Administrator\\Downloads\\chromedriver_win32\\chromedriver.exe&quot;)
browser.get(&#39;http://www.baidu.com/&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210204133157683.png" alt="image-20210204133157683" tabindex="0" loading="lazy"><figcaption>image-20210204133157683</figcaption></figure><h2 id="_3-模拟提交" tabindex="-1"><a class="header-anchor" href="#_3-模拟提交" aria-hidden="true">#</a> 3. 模拟提交</h2><p>下面的代码实现模拟提交搜索功能，首先等页面加载完成，然后输入到搜索框文本，点击提交。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>from selenium import webdriver
from selenium.webdriver.common.keys import Keys

# driver = webdriver.Firefox()
driver = webdriver.Chrome(r&quot;C:\\Users\\Administrator\\Downloads\\chromedriver_win32\\chromedriver.exe&quot;)
driver.get(&quot;http://www.python.org&quot;)
assert &quot;Python&quot; in driver.title
elem = driver.find_element_by_name(&quot;q&quot;)
elem.clear()
elem.send_keys(&quot;pycon&quot;)
elem.send_keys(Keys.RETURN)
assert &quot;No results found.&quot; not in driver.page_source
driver.close()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>其中 driver.get 方法会打开请求的 URL，WebDriver 会等待页面完全加载完成之后才会返回，即程序会等待页面的所有内容加载完成，JS 渲染完毕之后才继续往下执行。注意：如果这里用到了特别多的 Ajax 的话，程序可能不知道是否已经完全加载完毕。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://www.python.org&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>WebDriver 提供了大量的方法让你去查询页面中的元素，这些方法形如： find_element_by_*。 例如：包含 name 属性的input输入框可以通过 find_element_by_name 方法查找到， 详细的查找方法可以在第四节元素查找中查看</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>elem <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_name<span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>我们发送了一个关键字，这个方法的作用类似于你用键盘输入关键字</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>elem<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
elem<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">&quot;pycon&quot;</span><span class="token punctuation">)</span>
elem<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>Keys<span class="token punctuation">.</span>RETURN<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_4-元素定位" tabindex="-1"><a class="header-anchor" href="#_4-元素定位" aria-hidden="true">#</a> 4. 元素定位</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>find_element_by_id()
find_element_by_name()
find_element_by_class_name()
find_element_by_tag_name()
find_element_by_link_text()
find_element_by_partial_link_text()
find_element_by_xpath()
find_element_by_css_selector()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>element</code>变成<code>elements</code>就是找所有满足的条件，返回数组。</p><p>一般我都自己采用 <strong>xpath</strong> 获取元素的，复制即可</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210204134742935.png" alt="image-20210204134742935" tabindex="0" loading="lazy"><figcaption>image-20210204134742935</figcaption></figure><h2 id="_5-控制浏览器操作" tabindex="-1"><a class="header-anchor" href="#_5-控制浏览器操作" aria-hidden="true">#</a> 5. 控制浏览器操作</h2><ul><li>控制浏览器窗口大小</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>driver.set_window_size(480, 800)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>浏览器后退，前进</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 后退 driver.back()
# 前进 driver.forward()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>刷新</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>driver.refresh() # 刷新
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_6-webelement常用方法" tabindex="-1"><a class="header-anchor" href="#_6-webelement常用方法" aria-hidden="true">#</a> 6. Webelement常用方法</h2><ul><li>点击和输入</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>driver.find_element_by_id(&quot;kw&quot;).clear() # 清除文本 driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;selenium&quot;) # 模拟按键输入 driver.find_element_by_id(&quot;su&quot;).click() # 单机元素
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>提交</li></ul><p>可以在搜索框模拟回车操作</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>search_text = driver.find_element_by_id(&#39;kw&#39;) search_text.send_keys(&#39;selenium&#39;) search_text.submit()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其他</li></ul><p>size： 返回元素的尺寸。</p><p>text： 获取元素的文本。</p><p>get_attribute(name)： 获得属性值。</p><p>is_displayed()： 设置该元素是否用户可见。</p><h2 id="_7-鼠标操作" tabindex="-1"><a class="header-anchor" href="#_7-鼠标操作" aria-hidden="true">#</a> 7. 鼠标操作</h2><p>在 WebDriver 中， 将这些关于鼠标操作的方法封装在 ActionChains 类提供。</p><p>ActionChains 类提供了鼠标操作的常用方法：</p><ul><li>perform()： 执行所有 ActionChains 中存储的行为；</li><li>context_click()： 右击；</li><li>double_click()： 双击；</li><li>drag_and_drop()： 拖动；</li><li>move_to_element()： 鼠标悬停。</li></ul><p>举个例子：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver
<span class="token comment"># 引入 ActionChains 类</span>
<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>action_chains <span class="token keyword">import</span> ActionChains

driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>
driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.cn&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 定位到要悬停的元素</span>
above <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_link_text<span class="token punctuation">(</span><span class="token string">&quot;设置&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># 对定位到的元素执行鼠标悬停操作</span>
ActionChains<span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">.</span>move_to_element<span class="token punctuation">(</span>above<span class="token punctuation">)</span><span class="token punctuation">.</span>perform<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-键盘事件" tabindex="-1"><a class="header-anchor" href="#_8-键盘事件" aria-hidden="true">#</a> 8. 键盘事件</h2><p>以下为常用的键盘操作：</p><ul><li>send_keys(Keys.BACK_SPACE) 删除键（BackSpace）</li><li>send_keys(Keys.SPACE) 空格键(Space)</li><li>send_keys(Keys.TAB) 制表键(Tab)</li><li>send_keys(Keys.ESCAPE) 回退键（Esc）</li><li>send_keys(Keys.ENTER) 回车键（Enter）</li><li>send_keys(Keys.CONTROL,&#39;a&#39;) 全选（Ctrl+A）</li><li>send_keys(Keys.CONTROL,&#39;c&#39;) 复制（Ctrl+C）</li><li>send_keys(Keys.CONTROL,&#39;x&#39;) 剪切（Ctrl+X）</li><li>send_keys(Keys.CONTROL,&#39;v&#39;) 粘贴（Ctrl+V）</li><li>send_keys(Keys.F1) 键盘 F1</li><li>……</li><li>send_keys(Keys.F12) 键盘 F12</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 输入框输入内容
driver.find_element_by_id(&quot;kw&quot;).send_keys(&quot;seleniumm&quot;)

# 删除多输入的一个 m
driver.find_element_by_id(&quot;kw&quot;).send_keys(Keys.BACK_SPACE)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-警告框处理" tabindex="-1"><a class="header-anchor" href="#_9-警告框处理" aria-hidden="true">#</a> 9. 警告框处理</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>alert = driver.switch_to_alert()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>text：返回 alert/confirm/prompt 中的文字信息。</li><li>accept()：接受现有警告框。</li><li>dismiss()：解散现有警告框。</li><li>send_keys(keysToSend)：发送文本至警告框。keysToSend：将文本发送至警告框。</li></ul><h2 id="_10-下拉框选择" tabindex="-1"><a class="header-anchor" href="#_10-下拉框选择" aria-hidden="true">#</a> 10. 下拉框选择</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>from selenium import webdriver
from selenium.webdriver.support.select import Select
from time import sleep

driver = webdriver.Chrome()
driver.implicitly_wait(10)
driver.get(&#39;http://www.baidu.com&#39;)
sel = driver.find_element_by_xpath(&quot;//select[@id=&#39;nr&#39;]&quot;)
Select(sel).select_by_value(&#39;50&#39;)  # 显示50条
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-文件上传" tabindex="-1"><a class="header-anchor" href="#_11-文件上传" aria-hidden="true">#</a> 11. 文件上传</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>driver.find_element_by_name(&quot;file&quot;).send_keys(&#39;D:\\\\upload_file.txt&#39;)  # # 定位上传按钮，添加本地文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_12-cookie操作" tabindex="-1"><a class="header-anchor" href="#_12-cookie操作" aria-hidden="true">#</a> 12. cookie操作</h2><p>WebDriver操作cookie的方法：</p><ul><li>get_cookies()： 获得所有cookie信息。</li><li>get_cookie(name)： 返回字典的key为“name”的cookie信息。</li><li>add_cookie(cookie_dict) ： 添加cookie。“cookie_dict”指字典对象，必须有name 和value 值。</li><li>delete_cookie(name,optionsString)：删除cookie信息。“name”是要删除的cookie的名称，“optionsString”是该cookie的选项，目前支持的选项包括“路径”，“域”。</li><li>delete_all_cookies()： 删除所有cookie信息</li></ul><h2 id="_13-调用javascript代码" tabindex="-1"><a class="header-anchor" href="#_13-调用javascript代码" aria-hidden="true">#</a> 13. 调用JavaScript代码</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>js=&quot;window.scrollTo(100,450);&quot;
driver.execute_script(js) # 通过javascript设置浏览器窗口的滚动条位置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过execute_script()方法执行JavaScripts代码来移动滚动条的位置。</p><h2 id="_14-窗口截图" tabindex="-1"><a class="header-anchor" href="#_14-窗口截图" aria-hidden="true">#</a> 14. 窗口截图</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>driver.get_screenshot_as_file(&quot;D:\\\\baidu_img.jpg&quot;) # 截取当前窗口，并指定截图图片的保存位置
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_15-关闭浏览器" tabindex="-1"><a class="header-anchor" href="#_15-关闭浏览器" aria-hidden="true">#</a> 15. 关闭浏览器</h2><ul><li>close() 关闭单个窗口</li><li>quit() 关闭所有窗口</li></ul><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,63),u={href:"https://zhuanlan.zhihu.com/p/111859925",target:"_blank",rel:"noopener noreferrer"},p={href:"https://selenium-python-zh.readthedocs.io/en/latest/locating-elements.html",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const n=r("ExternalLinkIcon");return t(),l("div",null,[c,e("p",null,[e("a",u,[i("Selenium Python 教程"),a(n)])]),e("p",null,[e("a",p,[i("selenium官方文档"),a(n)])])])}const _=s(o,[["render",v],["__file","python-selenium-started.html.vue"]]);export{_ as default};
