import{_ as a,W as t,X as e,Y as n,Z as p,$ as o,a0 as c,D as l}from"./framework-f64bc974.js";const i={},u=c(`<h1 id="mysql按日、周、月进行分组统计" tabindex="-1"><a class="header-anchor" href="#mysql按日、周、月进行分组统计" aria-hidden="true">#</a> Mysql按日、周、月进行分组统计</h1><h2 id="_1-背景" tabindex="-1"><a class="header-anchor" href="#_1-背景" aria-hidden="true">#</a> 1. 背景</h2><p>我们在用Mysql抽取数据时候，经常需要按照天、周、月等不同的粒度对数据进行分组统计。而我们的时间可能是“2017/12/5 0:0:0”这种准确的时间。所以在进行分组之前我们需要对时间进行一下处理。</p><h2 id="_2-date-format" tabindex="-1"><a class="header-anchor" href="#_2-date-format" aria-hidden="true">#</a> 2. DATE_FORMAT</h2><p><strong>DATE_FORMAT</strong>是MySQL内置的一个函数，作用是以不同的格式显示日期/时间数据。具体的语法如下：</p><p>DATE_FORMAT(date,format)，其中</p><p>date：合法的日期。format：规定日期/时间的输出格式，其中format可使用的格式见文末链接。</p><h3 id="_2-1-示例" tabindex="-1"><a class="header-anchor" href="#_2-1-示例" aria-hidden="true">#</a> 2.1 示例</h3><p>下面我们通过具体例子来看如何通过DATE_FORMAT进行分组统计：</p><p>下表两列分别代表产品买出的准确时间（精确到秒），和买出的产品类型。</p><table><thead><tr><th>start_time</th><th>product_no</th></tr></thead><tbody><tr><td>2017/12/1 00:00:11</td><td>2A</td></tr><tr><td>2017/12/3 07:51:11</td><td>3C</td></tr><tr><td>2017/12/3 07:59:25</td><td>3C</td></tr><tr><td>2017/12/5 15:40:45</td><td>6C</td></tr></tbody></table><p>现在我们需要对每天，每周，每月各个产品的销量进行统计，</p><p>1）按天统计：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span>start_time<span class="token punctuation">,</span><span class="token string">&#39;**%Y%m%d**&#39;</span><span class="token punctuation">)</span> days<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span>product_no<span class="token punctuation">)</span> count <span class="token keyword">from</span> test <span class="token keyword">group</span> <span class="token keyword">by</span> days<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）按周统计：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span>start_time<span class="token punctuation">,</span><span class="token string">&#39;**%Y%u**&#39;</span><span class="token punctuation">)</span> weeks<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span>product_no<span class="token punctuation">)</span> count <span class="token keyword">from</span> test <span class="token keyword">group</span> <span class="token keyword">by</span> weeks<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3）按月统计:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span>start_time<span class="token punctuation">,</span><span class="token string">&#39;**%Y%m**&#39;</span><span class="token punctuation">)</span> months<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span>product_no<span class="token punctuation">)</span> count <span class="token keyword">from</span> test <span class="token keyword">group</span> bymonths<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-2-面临问题" tabindex="-1"><a class="header-anchor" href="#_2-2-面临问题" aria-hidden="true">#</a> 2.2 面临问题</h3><p>如果有一天没有数据，则改直接直接为空白</p><blockquote><p>需求注：按照时间段来查询显示该时间段内每一天的数据量，如果某一天没有数据，显示数据量为0.</p></blockquote><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210126170727871.png" alt="image-20210126170727871" tabindex="0" loading="lazy"><figcaption>image-20210126170727871</figcaption></figure><h2 id="_3-优化方案" tabindex="-1"><a class="header-anchor" href="#_3-优化方案" aria-hidden="true">#</a> 3. 优化方案</h2><p>查询日期表，外连接数据表来显示 网络上查询到生成日期表的方法有几种</p><ol><li>需要另建一张日期表，直接从此表查询（比较麻烦）</li><li>使用笛卡尔积生成时间（推荐）</li></ol><h3 id="_3-1-生成连续日期表" tabindex="-1"><a class="header-anchor" href="#_3-1-生成连续日期表" aria-hidden="true">#</a> 3.1 生成连续日期表</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token string">&#39;2020-04-01&#39;</span><span class="token punctuation">,</span><span class="token keyword">interval</span> <span class="token variable">@i</span>:<span class="token operator">=</span><span class="token variable">@i</span><span class="token operator">+</span><span class="token number">1</span> <span class="token keyword">day</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">date</span> 
<span class="token keyword">from</span> <span class="token punctuation">(</span>
<span class="token keyword">select</span> <span class="token number">1</span> 
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span> 
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span>
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span> 
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span> 
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span> 
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span> 
<span class="token keyword">union</span> <span class="token keyword">all</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tmp<span class="token punctuation">,</span>
 <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token variable">@i</span>:<span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20210126171101910.png" alt="image-20210126171101910" tabindex="0" loading="lazy"><figcaption>image-20210126171101910</figcaption></figure><h3 id="_3-2-关联查询显示" tabindex="-1"><a class="header-anchor" href="#_3-2-关联查询显示" aria-hidden="true">#</a> 3.2 关联查询显示</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>select count(u.id) as count,s.date from 
(select date_add(&#39;2020-04-01&#39;,interval @i:=@i+1 day) as date 
from (
select 1 
union all select 1 
union all select 1
union all select 1 
union all select 1 
union all select 1 
union all select 1 
union all select 1) as tmp,
 (select @i:= -1) t
) s left join user u on s.date = date_format(u.createtime,&#39;%Y-%m-%d&#39;)
GROUP BY s.date
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-如何控制生成多少个日期" tabindex="-1"><a class="header-anchor" href="#_3-3-如何控制生成多少个日期" aria-hidden="true">#</a> 3.3 如何控制生成多少个日期</h3><p>现在还有一个问题，如何控制生成多少个日期，也就是<strong>union all select 1</strong> 的个数，</p><ol><li>使用存储过程（耦合性过高，不易维护，暂不考虑）</li><li>mybatis 循环拼接（√）</li></ol><p>选择了java代码计算日期差，使用mybatis的 <strong>foreach</strong> 标签实现sql拼接，全部代码如下</p><ul><li><p>service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">queryByDate</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> date<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> date1 <span class="token operator">=</span> date<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> date2 <span class="token operator">=</span> date<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token function">calcBetweenDate</span><span class="token punctuation">(</span>date1<span class="token punctuation">,</span> date2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> countArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> userMapper<span class="token punctuation">.</span><span class="token function">queryByDate</span><span class="token punctuation">(</span>date1<span class="token punctuation">,</span>countArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">calcBetweenDate</span><span class="token punctuation">(</span><span class="token class-name">String</span> start<span class="token punctuation">,</span> <span class="token class-name">String</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">SimpleDateFormat</span> df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Date</span> startDate <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token class-name">Date</span> endDate <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  
        <span class="token keyword">try</span> <span class="token punctuation">{</span>  
            startDate <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            endDate <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;日期转换出错&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>endDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startDate<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> count<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>mapper</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryByDate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;date&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span> date<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;countArr&quot;</span><span class="token punctuation">)</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> countArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>queryByDate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.util.HashMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	   select count(u.id) as count,s.date from 
		(select date_add(&#39;2020-04-01&#39;,interval @i:=@i+1 day) as date 
		from (
		select 1 
	   	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countArr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		  union all select 1 
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">&gt;</span></span>
		) as tmp,
		 (select @i:= -1) t
		) s left join user u on s.date = date_format(u.createtime,&#39;%Y-%m-%d&#39;)
		GROUP BY s.date
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,37),r={href:"https://blog.csdn.net/new_yao/article/details/105572684",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const s=l("ExternalLinkIcon");return t(),e("div",null,[u,n("p",null,[n("a",r,[p("mysql查询一个时间段每天数据数量，没有显示为0"),o(s)])])])}const b=a(i,[["render",d],["__file","mysql-y-statistics-group.html.vue"]]);export{b as default};
