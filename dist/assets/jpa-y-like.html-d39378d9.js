import{_ as r,W as n,X as i,Y as e,Z as t,$ as s,a0 as l,D as d}from"./framework-f64bc974.js";const c={},o=l(`<h1 id="jpa使用原生sql查询数据库like的用法" tabindex="-1"><a class="header-anchor" href="#jpa使用原生sql查询数据库like的用法" aria-hidden="true">#</a> JPA使用原生SQL查询数据库like的用法</h1><p>jpa使用like查询，需要拼接字符串，如下</p><h2 id="oracle用法" tabindex="-1"><a class="header-anchor" href="#oracle用法" aria-hidden="true">#</a> oracle用法：</h2><div class="language-JAVA line-numbers-mode" data-ext="JAVA"><pre class="language-JAVA"><code>//dao层代码
@Query(value = &quot;SELECT * FROM TABLENAME WHERE USER_NAME LIKE &#39;%&#39;||?1||&#39;%&#39;&quot;, nativeQuery = true)
List&lt;Map&lt;String, Object&gt;&gt; queryUserInfoByName(String userName);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mysql用法" tabindex="-1"><a class="header-anchor" href="#mysql用法" aria-hidden="true">#</a> mysql用法：</h2><div class="language-JAVA line-numbers-mode" data-ext="JAVA"><pre class="language-JAVA"><code>//dao层代码
@Query(value = &quot;SELECT * FROM TABLENAME WHERE USER_NAME LIKE CONCAT(&#39;%&#39;,:userName,&#39;%&#39;)&quot;, nativeQuery = true)
List&lt;Map&lt;String, Object&gt;&gt; queryUserInfoByName(@Param(&quot;userName&quot;) String userName);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,7),u={href:"https://yspxyz.blog.csdn.net/article/details/105383240",target:"_blank",rel:"noopener noreferrer"};function h(m,v){const a=d("ExternalLinkIcon");return n(),i("div",null,[o,e("p",null,[e("a",u,[t("jpa使用原生SQL查询数据库like的用法"),s(a)])])])}const E=r(c,[["render",h],["__file","jpa-y-like.html.vue"]]);export{E as default};
