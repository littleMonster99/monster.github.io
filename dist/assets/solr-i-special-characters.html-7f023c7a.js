import{_ as n,W as p,X as e,Y as a,Z as o,$ as t,a0 as c,D as r}from"./framework-f64bc974.js";const l={},i=c(`<h1 id="solr搜索特殊字符转义" tabindex="-1"><a class="header-anchor" href="#solr搜索特殊字符转义" aria-hidden="true">#</a> Solr搜索特殊字符转义</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>在Solr检索中，下列字符有特殊含义，需 转义处理，否则查询会报查询错误。</p><div class="language-diff line-numbers-mode" data-ext="diff"><pre class="language-diff"><code><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> – &amp;&amp; || ! ( ) { } [ ] ^ ” ~ * ? : \\ 
</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>而我们的查询条件中，包含上述特性字符。</p><h2 id="_2-解决方案" tabindex="-1"><a class="header-anchor" href="#_2-解决方案" aria-hidden="true">#</a> 2. 解决方案</h2><p>Solr 官方提供的转义</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ClientUtils</span><span class="token punctuation">.</span><span class="token function">escapeQueryChars</span><span class="token punctuation">(</span><span class="token string">&quot;solr search+ – &amp;&amp; || ! ( ) { } [ ] ^ ” ~ * ? :&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-1-转义源码" tabindex="-1"><a class="header-anchor" href="#_2-1-转义源码" aria-hidden="true">#</a> 2.1 转义源码</h3><p>solr 工具类特性字符转义源码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>svn<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>org<span class="token operator">/</span>repos<span class="token operator">/</span>asf<span class="token operator">/</span>lucene<span class="token operator">/</span>dev<span class="token operator">/</span>trunk<span class="token operator">/</span>solr<span class="token operator">/</span>solrj<span class="token operator">/</span>src<span class="token operator">/</span>java<span class="token operator">/</span>org<span class="token operator">/</span>apache<span class="token operator">/</span>solr<span class="token operator">/</span>client<span class="token operator">/</span>solrj<span class="token operator">/</span>util<span class="token operator">/</span><span class="token class-name">ClientUtils</span><span class="token punctuation">.</span>java
 
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">escapeQueryChars</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">char</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// These characters are part of the query syntax and must be escaped</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;\\\\&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;!&#39;</span>  <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;(&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;)&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;:&#39;</span>
        <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;^&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;[&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;]&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;\\&quot;&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;{&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;}&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;~&#39;</span>
        <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;*&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;?&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;|&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;&amp;&#39;</span>  <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;;&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;/&#39;</span>
        <span class="token operator">||</span> <span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token char">&#39;\\\\&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,12),k={href:"https://blog.csdn.net/zhouzhiwengang/article/details/111028381",target:"_blank",rel:"noopener noreferrer"};function u(d,h){const s=r("ExternalLinkIcon");return p(),e("div",null,[i,a("p",null,[a("a",k,[o("Solr 特殊字符处理"),t(s)])])])}const m=n(l,[["render",u],["__file","solr-i-special-characters.html.vue"]]);export{m as default};
