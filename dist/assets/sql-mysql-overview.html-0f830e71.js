import{_ as s,W as r,X as o,Y as e,Z as l,$ as n,D as a}from"./framework-f64bc974.js";const d={},h=e("h1",{id:"mysql知识体系详解",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mysql知识体系详解","aria-hidden":"true"},"#"),l(" MySQL知识体系详解")],-1),i=e("h2",{id:"知识体系",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#知识体系","aria-hidden":"true"},"#"),l(" 知识体系")],-1),_=e("p",null,[e("em",null,"相关文章")],-1),m=e("blockquote",null,[e("p",null,"** 掌握MySQL数据库**：在理解了SQL语言后，开始进阶MySQL相关的知识点吧（在开始前，建议你完整看一本MySQl相关的书，作为你的知识体系基础）；这里不会讲如何安装MySQL或者如何使用，因为这是容易的，而是会关注一些有助于我们构建MySQL相关知识体系的知识点等。")],-1),c={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-theory.html",target:"_blank",rel:"noopener noreferrer"},u=e("ul",null,[e("li",null,"本文主要整理MySQL中数据字段类型。")],-1),p={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-engine.html",target:"_blank",rel:"noopener noreferrer"},q=e("ul",null,[e("li",null,"本文主要介绍MySQL中的存储引擎。")],-1),y={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-b-tree.html",target:"_blank",rel:"noopener noreferrer"},L={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-performance.html",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-devide.html",target:"_blank",rel:"noopener noreferrer"},S={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-slave.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-execute.html",target:"_blank",rel:"noopener noreferrer"},b=e("ul",null,[e("li",null,"天天和数据库打交道，一天能写上几十条 SQL 语句，但你知道我们的系统是如何和数据库交互的吗？MySQL 如何帮我们存储数据、又是如何帮我们管理事务？....是不是感觉真的除了写几个 「select * from dual」外基本脑子一片空白？这篇文章就将带你走进 MySQL 的世界，让你彻底了解系统到底是如何和 MySQL 交互的，MySQL 在接受到我们发送的 SQL 语句时又分别做了哪些事情。")],-1),M={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-sql-parser.html",target:"_blank",rel:"noopener noreferrer"},k=e("ul",null,[e("li",null,"前文我们分享了一篇文章学习一条SQL是如何在数据库中执行的，其中有一个阶段是SQL的解析。这个阶段对于更全面的SQL优化功能；多维度的慢查询分析；辅助故障分析等都有很大帮助。本文主要介绍一篇美团技术团队关于SQL解析和应用的文章，希望能给一些启示。")],-1),g={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-index-improve-mt.html",target:"_blank",rel:"noopener noreferrer"},v=e("ul",null,[e("li",null,"目前常用的 SQL 优化方式包括但不限于：业务层优化、SQL逻辑优化、索引优化等。其中索引优化通常通过调整索引或新增索引从而达到 SQL 优化的目的，索引优化往往可以在短时间内产生非常巨大的效果。本文旨在以开发工程师的角度来解释数据库索引的原理和如何优化慢查询。")],-1),x={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-sql-costmodel-mt.html",target:"_blank",rel:"noopener noreferrer"},I=e("ul",null,[e("li",null,[l("前文我们介绍了优化慢查询最直接有效的方法就是选用一个查询效率高的索引, 也介绍了索引优化工具SQLAdvisor。关于高效率的索引推荐，主要在日常工作中，基于经验规则的推荐随处可见，对于简单的SQL，如"),e("code",null,"select * from sync_test1 where name like 'Bobby%'"),l("，直接添加索引IX(name) 就可以取得不错的效果；但对于稍微复杂点的SQL，如"),e("code",null,"select * from sync_test1 where name like 'Bobby%' and dt > '2021-07-06'"),l("，到底选择IX(name)、IX(dt)、IX(dt,name) 还是IX(name,dt)，该方法也无法给出准确的回答。更别说像多表Join、子查询这样复杂的场景了。所以采用基于代价的推荐来解决该问题会更加普适，因为基于代价的方法使用了和数据库优化器相同的方式，去量化评估所有的可能性，选出的是执行SQL耗费代价最小的索引。")])],-1),B=e("h2",{id:"参考文章",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),l(" 参考文章")],-1),X={href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-sql-costmodel-mt.html",target:"_blank",rel:"noopener noreferrer"},w=e("strong",null,"大厂实践 - 美团: 基于代价的慢查询优化建议",-1);function E(N,V){const t=a("ExternalLinkIcon");return r(),o("div",null,[h,i,_,m,e("ul",null,[e("li",null,[e("p",null,[e("a",c,[l("MySQL - 数据类型"),n(t)])]),u]),e("li",null,[e("p",null,[e("a",p,[l("MySQL - 存储引擎"),n(t)])]),q]),e("li",null,[e("p",null,[e("a",y,[l("MySQL - 索引(B+树)"),n(t)])])]),e("li",null,[e("p",null,[e("a",L,[l("MySQL - 性能优化"),n(t)])])]),e("li",null,[e("p",null,[e("a",Q,[l("MySQL - 分表分库"),n(t)])])]),e("li",null,[e("p",null,[e("a",S,[l("MySQL - 主从复制与读写分离"),n(t)])])]),e("li",null,[e("p",null,[e("a",f,[l("MySQL - 一条 SQL 的执行过程详解"),n(t)])]),b]),e("li",null,[e("p",null,[e("a",M,[l("MySQL - MySQL中SQL是如何解析的"),n(t)])]),k]),e("li",null,[e("p",null,[e("a",g,[l("大厂实践 - 美团: MySQL索引原理及慢查询优化"),n(t)])]),v]),e("li",null,[e("p",null,[e("a",x,[l("大厂实践 - 美团: 基于代价的慢查询优化建议"),n(t)])]),I,B,e("p",null,[e("a",X,[w,n(t)])])])])])}const C=s(d,[["render",E],["__file","sql-mysql-overview.html.vue"]]);export{C as default};
