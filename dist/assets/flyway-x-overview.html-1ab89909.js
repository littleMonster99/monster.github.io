import{_ as e,W as p,X as l,Y as n,Z as s,$ as t,a0 as o,D as i}from"./framework-f64bc974.js";const c={},u=o(`<h1 id="flyway数据库版本管理" tabindex="-1"><a class="header-anchor" href="#flyway数据库版本管理" aria-hidden="true">#</a> Flyway数据库版本管理</h1><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介" aria-hidden="true">#</a> 1. 简介</h2><p>Flyway 是一款开源的数据库版本管理工具</p><h2 id="_2-为什么要用flyway" tabindex="-1"><a class="header-anchor" href="#_2-为什么要用flyway" aria-hidden="true">#</a> 2. 为什么要用Flyway</h2><blockquote><ol><li><p>自己写的SQL忘了在所有环境执行；</p></li><li><p>别人写的SQL我们不能确定是否都在所有环境执行过了；</p></li><li><p>有人修改了已经执行过的SQL，期望再次执行；</p></li><li><p>需要新增环境做数据迁移；</p></li><li><p>每次发版需要手动控制先发DB版本，再发布应用版本；</p></li></ol></blockquote><p>以上种种场景都在说明数据库版本管理的重要性。特别是我们在开发环境的修改，如果没做好管理。很可能就影响线上环境。导致项目部署异常</p><h2 id="_3-运行原理" tabindex="-1"><a class="header-anchor" href="#_3-运行原理" aria-hidden="true">#</a> 3. 运行原理</h2><p>当 Flyway 连接数据库中的 schema 后，会先检查是否已存在 <strong>flyway_schema_history</strong> （默认名，也可自定义）表，如果没有则创建。该表用于跟踪数据库的状态，如数据迁移的版本，迁移成功状态等信息。</p><p>当 <strong>flyway_schema_history</strong> 存在后，Flyway 会扫描文件系统或应用中的 classpath 目录的数据迁移文件，然后根据它们的版本号进行按序迁移，如下图：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015152758896.png" alt="image-20201015152758896" tabindex="0" loading="lazy"><figcaption>image-20201015152758896</figcaption></figure><p><strong>flyway_schema_history</strong> 表记录的内容如下：</p><table><thead><tr><th>installed_rank</th><th>version</th><th>description</th><th>type</th><th>script</th><th>checksum</th><th>installed_by</th><th>installed_on</th><th>execution_time</th><th>success</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>Initial Setup</td><td>SQL</td><td>V1__Initial_Setup.sql</td><td>1996767037</td><td>axel</td><td>2016-02-04 22:23:00.0</td><td>546</td><td>true</td></tr><tr><td>2</td><td>2</td><td>First Changes</td><td>SQL</td><td>V2__First_Changes.sql</td><td>1279644856</td><td>axel</td><td>2016-02-06 09:18:00.0</td><td>127</td><td>true</td></tr></tbody></table><p><strong>由于 flyway_schema_history 表中记录了迁移的版本号，如果文件的版本号小于或等于标记为当前版本的版本号，则忽略它们不执行。</strong></p><h2 id="_4-集成使用" tabindex="-1"><a class="header-anchor" href="#_4-集成使用" aria-hidden="true">#</a> 4. 集成使用</h2><h3 id="_4-1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_4-1-添加依赖" aria-hidden="true">#</a> 4.1 添加依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.flywaydb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>flyway-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>flyway-core： flyway 核心库</li><li>spring-boot-starter-jdbc：不能省略，否则运行无效果</li><li>mysql-connector-java： 根据实际数据库决定</li></ul><h3 id="_4-2-添加配置文件" tabindex="-1"><a class="header-anchor" href="#_4-2-添加配置文件" aria-hidden="true">#</a> 4.2 添加配置文件</h3><p>在application.yml 添加如下配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//120.79.200.111<span class="token punctuation">:</span>3306/mytest<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true&amp;useSSL=false&amp;serverTimezone=GMT%2B8</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> zsz123456
<span class="token comment"># flyway 配置</span>
  <span class="token key atrule">flyway</span><span class="token punctuation">:</span>
    <span class="token comment"># 启用或禁用 flyway</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token comment"># flyway 的 clean 命令会删除指定 schema 下的所有 table, 生产务必禁掉。这个默认值是 false 理论上作为默认配置是不科学的。</span>
    <span class="token key atrule">clean-disabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token comment"># SQL 脚本的目录,多个路径使用逗号分隔 默认值 classpath:db/migration</span>
    <span class="token key atrule">locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>db/migration
    <span class="token comment">#  metadata 版本控制信息表 默认 flyway_schema_history</span>
    <span class="token key atrule">table</span><span class="token punctuation">:</span> flyway_schema_history
    <span class="token comment"># 如果没有 flyway_schema_history 这个 metadata 表， 在执行 flyway migrate 命令之前, 必须先执行 flyway baseline 命令</span>
    <span class="token comment"># 设置为 true 后 flyway 将在需要 baseline 的时候, 自动执行一次 baseline。</span>
    <span class="token key atrule">baseline-on-migrate</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token comment"># 指定 baseline 的版本号,默认值为 1, 低于该版本号的 SQL 文件, migrate 时会被忽略</span>
    <span class="token key atrule">baseline-version</span><span class="token punctuation">:</span> <span class="token number">1</span>
    <span class="token comment"># 字符编码 默认 UTF-8</span>
    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>
    <span class="token comment"># 是否允许不按顺序迁移 开发建议 true  生产建议 false</span>
    <span class="token key atrule">out-of-order</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token comment"># 需要 flyway 管控的 schema list,这里我们配置为flyway  缺省的话, 使用spring.datasource.url 配置的那个 schema,</span>
    <span class="token comment"># 可以指定多个schema, 但仅会在第一个schema下建立 metadata 表, 也仅在第一个schema应用migration sql 脚本.</span>
    <span class="token comment"># 但flyway Clean 命令会依次在这些schema下都执行一遍. 所以 确保生产 spring.flyway.clean-disabled 为 true</span>
<span class="token comment">#    schemas: flyway</span>
    <span class="token comment"># 执行迁移时是否自动调用验证   当你的 版本不符合逻辑 比如 你先执行了 DML 而没有 对应的DDL 会抛出异常</span>
    <span class="token key atrule">validate-on-migrate</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-配置数据库迁移文件" tabindex="-1"><a class="header-anchor" href="#_4-3-配置数据库迁移文件" aria-hidden="true">#</a> 4.3 配置数据库迁移文件</h3><p>在src/main/resources目录下面新建db.migration文件夹，默认情况下，该目录下的.sql文件就算是需要被flyway做版本控制的数据库SQL语句。</p><h4 id="_4-3-1-sql语句命名规范" tabindex="-1"><a class="header-anchor" href="#_4-3-1-sql语句命名规范" aria-hidden="true">#</a> 4.3.1 SQL语句命名规范</h4><p>SQL语句命名需要遵从一定的规范，否则运行的时候flyway会报错。命名规则主要有两种：</p><ol><li>仅需要被执行一次的SQL命名以大写的&quot;V&quot;开头，后面跟上&quot;0~9&quot;数字的组合,数字之间可以用“.”或者下划线&quot;_&quot;分割开，然后再以两个下划线分割，其后跟文件名称，最后以.sql结尾。比如，<code>V2.1.5__create_user_ddl.sql</code>、<code>V4.1_2__add_user_dml.sql</code>。</li><li>可重复运行的SQL，则以大写的“R”开头，后面再以两个下划线分割，其后跟文件名称，最后以.sql结尾。。比如，<code>R__truncate_user_dml.sql</code>。</li></ol><p>其中，V开头的SQL执行优先级要比R开头的SQL优先级高。</p><h4 id="_4-2-2-新建脚本" tabindex="-1"><a class="header-anchor" href="#_4-2-2-新建脚本" aria-hidden="true">#</a> 4.2.2 新建脚本</h4><p>demo准备了3个脚本：如下</p><ol><li><p><code>V1__create_user.sql</code>，其中代码如下，目的是建立一张user表，且只执行一次。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>USER<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>USER_ID<span class="token punctuation">\`</span></span>          <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>           <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>USER_NAME<span class="token punctuation">\`</span></span>        <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户姓名&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>AGE<span class="token punctuation">\`</span></span>              <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>CREATED_TIME<span class="token punctuation">\`</span></span>     <span class="token keyword">datetime</span>          <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>CREATED_BY<span class="token punctuation">\`</span></span>       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;UNKNOWN&#39;</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>UPDATED_TIME<span class="token punctuation">\`</span></span>     <span class="token keyword">datetime</span>          <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>UPDATED_BY<span class="token punctuation">\`</span></span>       <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;UNKNOWN&#39;</span><span class="token punctuation">,</span>
<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>USER_ID<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>V2__add_user.sql</code>，其中代码如下，目的是往user表中插入一条数据，且只执行一次。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>user_name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>R__add_unknown_user.sql</code>，其中代码如下，目的是每次启动倘若有变化，则往user表中插入一条数据。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span><span class="token punctuation">(</span>user_name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;unknown&#39;</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>与之相对应的目录截图如下：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015154425588.png" alt="image-20201015154425588" tabindex="0" loading="lazy"><figcaption>image-20201015154425588</figcaption></figure></li></ol><p>其中1.0.0、1.0.1和every的文件夹不会影响flyway对SQL的识别和运行，可以自行取名和分类。</p><h3 id="_4-4-运行项目" tabindex="-1"><a class="header-anchor" href="#_4-4-运行项目" aria-hidden="true">#</a> 4.4 运行项目</h3><p>我们项目运行后可以看到如下的日志</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015154844759.png" alt="image-20201015154844759" tabindex="0" loading="lazy"><figcaption>image-20201015154844759</figcaption></figure><h3 id="_4-5-查看运行效果" tabindex="-1"><a class="header-anchor" href="#_4-5-查看运行效果" aria-hidden="true">#</a> 4.5 查看运行效果</h3><p>数据库中多了两张表</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015155011691.png" alt="image-20201015155011691" tabindex="0" loading="lazy"><figcaption>image-20201015155011691</figcaption></figure><p>其中flyway_scheme_history记录了相关记录</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015155042685.png" alt="image-20201015155042685" tabindex="0" loading="lazy"><figcaption>image-20201015155042685</figcaption></figure><p>user表也已经创建好了并插入了两条数据：</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015155339540.png" alt="image-20201015155339540" tabindex="0" loading="lazy"><figcaption>image-20201015155339540</figcaption></figure><h2 id="_5-maven插件的使用" tabindex="-1"><a class="header-anchor" href="#_5-maven插件的使用" aria-hidden="true">#</a> 5. maven插件的使用</h2><p>以上步骤中，每次想要migration都需要运行整个springboot项目，并且只能执行migrate一种命令，其实flyway还是有很多其它命令的。maven插件给了我们不需要启动项目就能执行flyway各种命令的机会。</p><p>在pom中引入flyway的插件，同时配置好对应的数据库连接。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.flywaydb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>flyway-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>jdbc:mysql://127.0.0.1:3306/mytest?useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=utf8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>serverTimezone=GMT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">&gt;</span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">&gt;</span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>driver</span><span class="token punctuation">&gt;</span></span>com.mysql.cj.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>driver</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后更新maven插件列表，就可以看到flyway的全部命令了。</p><figure><img src="https://zszblog.oss-cn-beijing.aliyuncs.com/zszblog/blogimage-master/img/image-20201015155608449.png" alt="image-20201015155608449" tabindex="0" loading="lazy"><figcaption>image-20201015155608449</figcaption></figure><p>此时，我们双击执行上图中的flyway:migrate的效果和启动整个工程执行migrate的效果是一样的。</p><p>其它命令的作用如下列出，各位可自行实验体会：</p><ol><li><p>baseline</p><p>对已经存在数据库Schema结构的数据库一种解决方案。实现在非空数据库新建MetaData表，并把Migrations应用到该数据库；也可以在已有表结构的数据库中实现添加Metadata表。</p></li><li><p>clean</p><p>清除掉对应数据库Schema中所有的对象，包括表结构，视图，存储过程等，clean操作在dev 和 test阶段很好用，但在生产环境务必禁用。</p></li><li><p>info</p><p>用于打印所有的Migrations的详细和状态信息，也是通过MetaData和Migrations完成的，可以快速定位当前的数据库版本。</p></li><li><p>repair</p><p>repair操作能够修复metaData表，该操作在metadata出现错误时很有用。</p></li><li><p>undo</p><p>撤销操作，社区版不支持。</p></li><li><p>validate</p><p>验证已经apply的Migrations是否有变更，默认开启的，原理是对比MetaData表与本地Migrations的checkNum值，如果值相同则验证通过，否则失败。</p></li></ol><h2 id="_5-flyway注意事项" tabindex="-1"><a class="header-anchor" href="#_5-flyway注意事项" aria-hidden="true">#</a> 5. flyway注意事项</h2><ol><li>flyway执行migrate必须在空白的数据库上进行，否则报错；</li><li>对于已经有数据的数据库，必须先baseline，然后才能migrate；</li><li>clean操作是删除数据库的所有内容，包括baseline之前的内容；</li><li>尽量不要修改已经执行过的SQL，即便是R开头的可反复执行的SQL，它们会不利于数据迁移；</li></ol><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>`,52),r={href:"https://www.jianshu.com/p/567a8a161641",target:"_blank",rel:"noopener noreferrer"},d={href:"https://juejin.im/entry/6844903802215071758",target:"_blank",rel:"noopener noreferrer"};function k(g,m){const a=i("ExternalLinkIcon");return p(),l("div",null,[u,n("p",null,[n("a",r,[s("Flyway快速上手教程"),t(a)])]),n("p",null,[n("a",d,[s("Flyway 简单入门教程"),t(a)])])])}const y=e(c,[["render",k],["__file","flyway-x-overview.html.vue"]]);export{y as default};
